{
    "wsgi1.wsgi2.rpc2.rpc3.wsgi1.wsgi2.rpc2.rpc3.rpc2.rpc3.rpc2.rpc3.wsgi4.wsgi4.wsgi4.wsgi4.wsgi4.wsgi4.wsgi4.wsgi4.wsgi4.wsgi4.wsgi4.wsgi5.rpc5.stack6.stack7.stack8.stack7.stack7.stack7.stack8.stack9.wsgi9.wsgi10.wsgi9.wsgi10.wsgi9.wsgi10.stack7.stack7.stack7.stack8.wsgi9.wsgi10.wsgi9.wsgi10.wsgi9.wsgi10.stack7.stack6.wsgi7.wsgi7.wsgi7.stack6.wsgi7.wsgi7.wsgi7.stack7.stack6.stack7.stack7.rpc7.rpc8.stack9.stack9.stack9.stack10.stack10.rpc10.rpc11.rpc12.stack13.stack13.rpc12.rpc13.stack14.stack14.stack14.stack15.stack15.stack15.stack15.rpc10.rpc8.rpc9.rpc8.rpc9.stack10.stack10.stack10.stack11.stack11.rpc11.rpc12.rpc12.rpc13.rpc14.stack15.stack15.rpc9.rpc9.rpc9.rpc9.rpc9.rpc8.rpc9.stack10.stack10.stack10.stack11.stack11.rpc11.rpc12.rpc12.rpc13.rpc14.stack15.stack15.rpc9.rpc9.rpc9.rpc10.stack11.stack11.stack11.stack12.stack12.rpc12.rpc13.stack14.stack14.stack14.stack15.stack15.rpc15.wsgi16.wsgi16.wsgi16.wsgi16.wsgi16.wsgi16.wsgi16.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.rpc16.rpc17.rpc18.stack19.stack19.stack19.stack20.stack20.stack20.stack20.rpc18.rpc18.rpc19.rpc19.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.rpc20.wsgi21.wsgi22.wsgi21.wsgi22.wsgi21.wsgi22.wsgi21.wsgi22.wsgi21.wsgi22.rpc21.wsgi21.wsgi22.compute22.nova_image23.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.wsgi27.wsgi27.neutron27.neutron27.neutron27.compute23.rpc23.rpc24.rpc25.rpc24.rpc25.rpc26.rpc26.rpc26.rpc26.rpc26.rpc26.rpc26.rpc26.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron29.neutron29.neutron30.neutron30.neutron30.rpc26.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron31.rpc26.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron29.neutron29.neutron30.neutron30.neutron30.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron29.neutron29.neutron30.neutron30.neutron30.neutron30.neutron30.rpc26.nova_image26.rpc26.rpc26.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron31.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron31.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron31.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron31.rpc26.vif_driver26.vif_driver27.vif_driver27.rpc26.vif_driver26.rpc26.rpc26.rpc26.rpc26.rpc27.rpc26.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.wsgi21.wsgi22.compute22.neutron22.neutron22.neutron23.neutron23.neutron24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron27.rpc21.wsgi22.wsgi23.wsgi22.wsgi23.compute23.compute23.rpc24.rpc25.rpc26.rpc26.rpc26.wsgi24.wsgi25.wsgi25.wsgi25.wsgi25.wsgi24.wsgi25.wsgi25.rpc24.rpc25.wsgi26.wsgi27.wsgi26.wsgi27.rpc27.driver28.driver28.driver28.volume26.rpc26.wsgi26.wsgi27.rpc27.driver28.rpc26.rpc26.wsgi22.wsgi23.wsgi22.wsgi23.wsgi22.wsgi23.wsgi22.wsgi23.wsgi22.wsgi23.wsgi22.wsgi23.wsgi22.wsgi23.wsgi22.wsgi23.rpc21.stack22.stack22.rpc16.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.rpc15.wsgi16.wsgi17.wsgi17.wsgi17.rpc17.rpc18.driver19.wsgi16.wsgi17.wsgi16.wsgi17.wsgi16.wsgi17.wsgi16.wsgi17.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.rpc15.rpc16.stack13.stack13.rpc10.rpc10.rpc11.stack12.stack12.stack12.stack13.stack13.stack13.stack13.rpc11.rpc10.rpc11.stack12.stack12.stack12.stack13.stack13.stack13.stack13.rpc11.rpc11.rpc12.stack13.stack13.stack13.stack14.stack14.stack14.stack14.rpc11.rpc12.stack13.stack13.stack13.stack14.stack14.rpc14.rpc15.stack16.stack16.stack16.stack17.stack17.rpc17.wsgi18.wsgi18.wsgi18.wsgi18.wsgi18.wsgi18.wsgi18.rpc18.rpc19.rpc17.rpc18.rpc17.rpc18.rpc17.rpc18.rpc17.rpc18.rpc17.rpc18.rpc17.rpc18.rpc17.rpc18.rpc17.rpc18.rpc17.rpc18.rpc17.rpc18.rpc17.rpc18.rpc17.rpc18.rpc17.rpc18.rpc19.rpc20.rpc20.rpc21.rpc21.rpc21.rpc21.rpc21.rpc21.rpc21.rpc21.rpc21.rpc21.rpc21.rpc21.rpc21.rpc21.rpc21.rpc21.wsgi22.wsgi23.wsgi22.wsgi23.wsgi22.wsgi23.wsgi22.wsgi23.wsgi22.wsgi23.rpc22.wsgi22.wsgi23.compute23.nova_image24.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron24.neutron24.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.compute24.rpc24.rpc25.rpc26.rpc25.rpc26.rpc27.rpc27.rpc27.rpc27.rpc27.rpc27.rpc27.rpc27.neutron27.neutron27.neutron28.neutron28.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron31.rpc27.rpc27.neutron27.neutron27.neutron28.neutron28.neutron29.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron32.neutron32.neutron32.rpc27.neutron27.neutron27.neutron28.neutron28.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron31.neutron31.neutron31.rpc27.rpc27.neutron27.neutron27.neutron28.neutron28.neutron29.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron32.neutron32.neutron32.neutron27.neutron27.neutron28.neutron28.neutron29.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron32.neutron32.neutron32.neutron27.neutron27.neutron28.neutron28.neutron29.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron32.neutron32.neutron32.neutron27.neutron27.neutron28.neutron28.neutron29.neutron29.neutron29.neutron30.neutron30.neutron31.neutron31.neutron32.neutron32.neutron32.rpc27.vif_driver27.vif_driver28.vif_driver28.rpc27.vif_driver27.rpc27.rpc27.rpc27.rpc27.rpc28.rpc27.wsgi22.wsgi23.compute23.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.wsgi22.wsgi23.compute23.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.wsgi22.wsgi23.compute23.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.wsgi22.wsgi23.compute23.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.wsgi22.wsgi23.compute23.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.wsgi22.wsgi23.compute23.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.wsgi22.wsgi23.compute23.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.wsgi22.wsgi23.wsgi22.wsgi23.compute23.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.wsgi22.wsgi23.compute23.neutron23.neutron23.neutron24.neutron24.neutron25.neutron25.neutron25.neutron26.neutron26.neutron27.neutron27.neutron28.neutron28.neutron28.rpc22.stack23.stack23.rpc22.wsgi23.wsgi24.wsgi24.wsgi24.wsgi23.wsgi24.compute24.compute24.rpc25.rpc26.rpc27.rpc27.rpc27.wsgi25.wsgi26.wsgi26.wsgi25.wsgi26.wsgi26.rpc25.rpc26.wsgi27.wsgi28.wsgi27.wsgi28.rpc28.driver29.driver29.driver29.volume27.rpc27.wsgi27.wsgi28.rpc28.driver29.rpc27.rpc27.wsgi23.wsgi24.wsgi23.wsgi24.wsgi23.wsgi24.wsgi23.wsgi24.wsgi23.wsgi24.wsgi23.wsgi24.rpc17.wsgi18.wsgi19.rpc19.rpc20.driver21.wsgi18.wsgi19.wsgi18.wsgi19.wsgi18.wsgi19.stack15.stack15.stack12.stack12.rpc9.rpc7.rpc7": {
        "f3adbc1f-fc44-4958-9541-177106dd330e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fd8ff6c3-0762-4ebd-99c2-47a00992de62": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8fdf33ec-9ea2-43d7-b9f0-7a4c04268311": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ddfeed0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': u'40018db4-87e5-4b4e-b4a0-d80da07e36a6'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "32de53dc-db14-400d-9fb1-4e16f7b3f922": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'GET', '/floatingips')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'fixed_ip_address': u'10.0.0.9', 'port_id': u'2c0275e1-3f3e-4ca5-aa69-a0660197e312'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ee19f16e-974e-451d-ac0e-d5bde659fb6e": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952d7bfa10>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'eba0f150-ff34-4439-aeec-88c9e79c2f22'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ca73ff7f-c1fc-4517-91a1-4ab0d25e3d5a": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37eb73790>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "73738470-cc5a-4cd3-99d2-a28caa2785c1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.list_subnets of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0d13947c-840b-4918-ad8c-edadb39d5550": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c52d0c72-ea69-4513-8ec0-5af93804a6e1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4c340cc0-5473-40b7-9c99-67c6084e72a9": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "2bc39a25-8925-4df6-bbbe-afb3ee47b40a": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e50da90>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'create', u'args': [], u'objinst': BlockDeviceMapping(boot_index=None,connection_info=<?>,created_at=<?>,delete_on_termination=<?>,deleted=<?>,deleted_at=<?>,destination_type='volume',device_name='/dev/vdb',device_type=None,disk_bus=None,guest_format=None,id=<?>,image_id=<?>,instance=<?>,instance_uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,no_device=<?>,snapshot_id=<?>,source_type='volume',tag=<?>,updated_at=<?>,volume_id='82c28688-a34b-4bc3-89c6-fdc04285570b',volume_size=<?>), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e9fa495c-d417-43d2-8a3d-868018929e64": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952db43450>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'2939693b-dcef-4ad4-b99e-faa98f2af00d'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8c9407ff-0270-443b-917f-438982032b01": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "9d13824b-2407-4683-b153-dd4d1123d0b6": {
            "function": {
                "args": "(<nova.image.api.API object at 0x7ff3812e2d50>, <nova.context.RequestContext object at 0x7ff380204910>, u'63388f50-4450-4c85-8f3c-197af8f6f6cf')", 
                "name": "nova.image.api.API.get", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8cb7a468-df0e-40f1-b16a-6b2fb212b59e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "c8e81168-a674-415e-b86f-86cd807606fe": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "684950a8-6a52-4a12-8a37-0e52f0f93b27": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "18dc21b2-1e21-4b45-953e-486e931c1699": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4a34985b-65c6-4c1b-b2ca-339d58e3c357": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e99cc646-8a44-4de7-bd4e-f8a8da506b3d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.put of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0359ac1f-d17c-47ee-974d-0a1db5a8ed98": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v1/clustertemplates/k8s-cluster-template", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "af21fea8-147e-47f3-b27b-3c79326e683b": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e082f90>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'7b2e3460-264c-46ce-ae32-d932a9b29601'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7031ba45-dc15-4ae6-a120-0893fbb2890f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fff928c8-d528-4682-8cfd-b2417e7507f2": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e015890>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'52fb8cce-77b8-4a84-a316-e10a80942ce1'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dc90fd48-4d72-425c-b9a9-3850b67ee81b": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "ba3ee212-09d2-4063-8067-ff8564862f10": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8ecc862e-9c18-40f3-9ae9-58ad5bf5c7bc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b1db6d4b-48f7-42cc-a309-8f9dc8273554": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "60c5b179-c3b8-45be-a534-9b3a883d388e": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e025e90>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-api_lb-67lbo2q7agec', u'stack_id': u'e4fa21f9-93ac-49a8-9433-3f4b1be63733', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2c9aacc4-c2b9-4ef0-80d2-6771bfbe5dfb": {
            "function": {
                "args": "(<nova.scheduler.manager.SchedulerManager object at 0x7f52069556d0>, <nova.context.RequestContext object at 0x7f5206113ad0>)", 
                "name": "nova.scheduler.manager.SchedulerManager.update_instance_info", 
                "kwargs": "{u'host_name': u'vinhnt-LAB', u'instance_info': InstanceList(objects=[Instance(6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab)])}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a52eba4d-1fc9-40ec-b3f0-6e2c93c4c3c0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d50ba0a5-afe6-4d63-b946-57599c84367f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "46e21750-9b10-44d6-b120-fab02eca0a8e": {
            "function": {
                "args": "(<nova.image.api.API object at 0x7f67f5f62950>, <nova.context.RequestContext object at 0x7f67cc0a6d10>, u'63388f50-4450-4c85-8f3c-197af8f6f6cf')", 
                "name": "nova.image.api.API.download", 
                "kwargs": "{'dest_path': '/opt/stack/data/nova/instances/_base/eca5027343c10da76a2522293cb6edfff438bf11.part'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "30ac0342-15bf-423f-b3ac-a5c6f6f950c5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "71315537-ed7e-4dc4-9af6-5fe256fab026": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>, '2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.show_port", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c75238bc-5ed6-4090-bf9a-e6bbad023084": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "99cac524-ba17-4f46-ac6e-2259e767532c": {
            "function": {
                "args": "(<nova.compute.rpcapi.ComputeAPI object at 0x7ff381184990>, <nova.context.RequestContext object at 0x7ff37f1ff210>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=<?>,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=<?>,host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=<?>,launch_index=0,launched_at=2017-01-19T06:43:06Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node='vinhnt-LAB',numa_topology=<?>,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=<?>,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:43:07Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='active'), BlockDeviceMapping(boot_index=None,connection_info=None,created_at=2017-01-19T06:43:09Z,delete_on_termination=False,deleted=False,deleted_at=None,destination_type='volume',device_name='/dev/vdb',device_type=None,disk_bus=None,guest_format=None,id=3,image_id=None,instance=<?>,instance_uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,no_device=False,snapshot_id=None,source_type='volume',tag=None,updated_at=None,volume_id='82c28688-a34b-4bc3-89c6-fdc04285570b',volume_size=None))", 
                "name": "nova.compute.rpcapi.ComputeAPI.attach_volume", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "78555252-c4bc-43ba-b99f-89c2adaa0190": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "121961c2-775b-482a-b01a-a2659576b237": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5f2b5985-788b-4160-9a87-43b030970903": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "236e0971-3843-4c7a-951f-3b398758fb5e": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dca2f90>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-etcd_address_lb_switch-662saapqlh4q', u'stack_id': u'1da23165-b3d6-4bf9-945e-9b899b2338e6', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ebe76372-15c2-4525-8ec1-9a3f2d029bf4": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dcc9090>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 1, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 3600}, u'environment_files': None, u'parent_resource_name': u'kube_masters', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 6, u'owner_id': u'bf103727-c468-4586-a97c-2c940f7e4d29'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "12999804-29e1-41ea-b0aa-e2c0c0bbdfaf": {
            "function": {
                "args": "(<nova.compute.rpcapi.ComputeAPI object at 0x7ff381184990>, <nova.context.RequestContext object at 0x7ff380829f10>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=<?>,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=<?>,host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=<?>,launch_index=0,launched_at=2017-01-19T06:45:28Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node='vinhnt-LAB',numa_topology=<?>,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=<?>,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:45:29Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='active'), BlockDeviceMapping(boot_index=None,connection_info=None,created_at=2017-01-19T06:45:31Z,delete_on_termination=False,deleted=False,deleted_at=None,destination_type='volume',device_name='/dev/vdb',device_type=None,disk_bus=None,guest_format=None,id=5,image_id=None,instance=<?>,instance_uuid=5299fdb3-2219-46f9-8c52-86fce045e372,no_device=False,snapshot_id=None,source_type='volume',tag=None,updated_at=None,volume_id='1ad44791-704f-415a-a915-fb4ba2c7c87e',volume_size=None))", 
                "name": "nova.compute.rpcapi.ComputeAPI.attach_volume", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b1974bf4-f12f-4f2b-adf0-3d25366ae980": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952df8c810>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9626b902-5df5-4f76-9477-db19e03e57f3": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37ef49490>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cd9af41d-0756-4886-9003-9218db2db90d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2239a038-268a-462a-ad4b-55f5a3096e1b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:43:04Z\", \"device_owner\": \"compute:None\", \"revision_number\": 10, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1fc28ded-0e8f-4aec-92f0-df72098c94b9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8ba2ce01-a71a-4bdc-b16d-e439fa7cc291": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "11bce94c-895f-4dd1-af2a-1d6a85ef9fd0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4f5849cd-279a-4fde-a990-494c83e4af02": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd6f850>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 65, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "422d1e95-2cba-4bdc-bd2d-3e5ae3122f35": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6c8403aa-3e66-4c65-8075-7efaf25f16d2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b6ec6b84-9329-4556-b07d-fcbb82a17b82": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cd5f17df-3807-48c3-af86-36c3debfd506": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "34f109d6-259b-4efe-a97d-6ecd77382e15": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "a58b9aa6-9fb4-40c3-a741-e0cdbc0a5c09": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, 'networks', '/networks', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'f55f8258-835a-4732-ba02-0b3c78b6c1c1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f4cfbd75-5b56-480c-a3ad-a79d3784949e": {
            "function": {
                "args": "(<nova.compute.manager.ComputeManager object at 0x7f67f7273f10>, <nova.context.RequestContext object at 0x7f678d9b40d0>)", 
                "name": "nova.compute.manager.ComputeManager.reserve_block_device_name", 
                "kwargs": "{u'device': u'/dev/vdb', u'instance': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=<?>,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=<?>,host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=<?>,launch_index=0,launched_at=2017-01-19T06:45:28Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node='vinhnt-LAB',numa_topology=<?>,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=<?>,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:45:29Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='active'), u'disk_bus': None, u'device_type': None, u'volume_id': u'1ad44791-704f-415a-a915-fb4ba2c7c87e'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a8bd5e8e-947a-48f2-8967-2e6f710e8224": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dbaac50>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'799fdef4-457e-4bf5-b04f-7fa067bd7d0e'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "187a1138-ed73-410a-a882-f4037c18ffd8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "edc4067d-62c3-4373-a159-ac3c0d2349cb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "753c6716-5839-4457-bc7f-f300cb526168": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "36f8a703-1125-42a6-8006-6fb75188b8bc": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ddfeed0>, u'CREATE', 'COMPLETE', u'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "51ef2217-fae9-426d-8081-520efa2ba0b8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5486bb28-d0c9-4b3d-a22e-6f80334c88a7": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff38110a090>, <nova.context.RequestContext object at 0x7ff380829f10>, u'5299fdb3-2219-46f9-8c52-86fce045e372')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0cb919bf-72f5-4fdb-a875-dd9b0e443640": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "60726aa2-d13b-4096-b568-ad1866d3baf8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "009b29ea-c557-40ff-995c-eb3b90841c81": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "4068a602-ba5f-41b2-ba35-f1916824d4d3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, u'{\"subnets\": [{\"service_types\": [], \"description\": \"\", \"enable_dhcp\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:57Z\", \"dns_nameservers\": [\"8.8.8.8\"], \"updated_at\": \"2017-01-19T06:41:57Z\", \"gateway_ip\": \"10.0.0.1\", \"ipv6_ra_mode\": null, \"allocation_pools\": [{\"start\": \"10.0.0.2\", \"end\": \"10.0.0.254\"}], \"host_routes\": [], \"revision_number\": 2, \"ip_version\": 4, \"ipv6_address_mode\": null, \"cidr\": \"10.0.0.0/24\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"subnetpool_id\": null, \"name\": \"k8s-cluster-ui4f4ogezhm7-network-bsueqzfm4pjs-private_subnet-ntm6ogzxssyn\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "254f154e-122e-42dc-a19a-8b68296bc6b5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>, 'GET', '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e60b56cb-e172-494a-a00c-3f5ba982a98c": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "0900f186-9133-4215-8cc3-0402e5474a47": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b056af15-e6e4-413c-b644-39404d453019": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "06d0c598-6932-40c5-b51c-a4c0009b00ea": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d00a7326-7d3d-4d28-94d4-d380b3092b96": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e38811d1-861c-4499-a17e-f7089730fdfe": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8ddd084b-0cb0-4c68-bf78-d2885717c2e0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c67ec393-888e-4367-b9b3-37f8f62ab5fb": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "d8be4bd0-42a0-403d-b411-4761e33b1886": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd6f090>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 44, u'data': {u'input_data': {u'tuple:(54, True)': {u'status': u'COMPLETE', u'name': u'kube_master_eth0', u'uuid': u'7cbcebb9-0b62-4743-ad2d-73f619fc6da6', u'attrs': {u\"tuple:(u'fixed_ips', 0, u'ip_address')\": u'10.0.0.9'}, u'action': u'CREATE', u'id': 54, u'reference_id': u'2c0275e1-3f3e-4ca5-aa69-a0660197e312'}, u'tuple:(52, True)': {u'status': u'COMPLETE', u'name': u'api_address_switch', u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-api_address_switch-e2doxqp6dko2/89cd8e6a-1d52-4e02-b0ea-295c13e928c6', u'attrs': {u'public_ip': u'172.24.4.11', u'private_ip': u'10.0.0.9'}, u'action': u'CREATE', u'id': 52, u'uuid': u'1fe1a9da-6ebc-4268-a768-f82832aa656a'}, u'tuple:(50, True)': {u'status': u'COMPLETE', u'name': u'docker_volume', u'uuid': u'a2bf77f6-f82a-4e5c-aa68-d043695b8811', u'attrs': {}, u'action': u'CREATE', u'id': 50, u'reference_id': u'82c28688-a34b-4bc3-89c6-fdc04285570b'}, u'tuple:(53, True)': {u'status': u'COMPLETE', u'name': u'kube_master_floating', u'reference_id': u'43fda14d-5b83-4e0f-80a7-6bacfa2f6f63', u'attrs': {u'floating_ip_address': u'172.24.4.11'}, u'action': u'CREATE', u'id': 53, u'uuid': u'ae7eb1f7-fe1c-4b80-ae57-98b26c8fcc91'}, u'tuple:(45, True)': {u'status': u'COMPLETE', u'name': u'master_wait_handle', u'reference_id': u'096c46ddc97142db923b327828ed3ae5', u'attrs': {u'curl_cli': u\"curl -i -X POST -H 'X-Auth-Token: gAAAAABYgF_Dm_W5wJupTBXAD8rFKYXiBc1NagMibr7j-iElX2tWTD4fvnRcyW0v_qA0AG9Mj83o0N5kF70bzfGyaeP4Z9414BbzRJGe5WFnaE-pPIgA40vMWN4yTws3B7TEV3Mnv0WQfvGcgLo4WcVGJnMb8K-m6bMK7MbHxcpAGcHk5meTeAQ' -H 'Content-Type: application/json' -H 'Accept: application/json' http://10.164.180.85:8004/v1/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/stacks/k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv/c3f7a50b-5fc9-4209-8728-2af4300e42de/resources/master_wait_handle/signal\"}, u'action': u'CREATE', u'id': 45, u'uuid': u'a2945342-364e-47ff-b85e-031d54510c8f'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c98da177-757f-4b14-94a5-b1eff63cc733": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "225f32af-3701-4178-9b59-da55870f2216": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dcb7d10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 53, u'data': {u'input_data': {u'tuple:(54, True)': {u'status': u'COMPLETE', u'name': u'kube_master_eth0', u'reference_id': u'2c0275e1-3f3e-4ca5-aa69-a0660197e312', u'attrs': {u\"tuple:(u'fixed_ips', 0, u'ip_address')\": u'10.0.0.9'}, u'action': u'CREATE', u'id': 54, u'uuid': u'7cbcebb9-0b62-4743-ad2d-73f619fc6da6'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b15fee08-5112-40b6-ae66-b0fddef29f39": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ab458f60-9acd-4335-ae18-787fcc182b83": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ad02d952-72fe-4af1-bdc8-a74efbd39522": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'tenant_id': u'f789928a4f254f96965ff7f3dedd02be', 'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9cc0280b-ce5e-483d-acd5-25be68b31238": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "01e73a6f-7db0-4d78-ba38-261741c183b6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2ff82e97-87ea-479a-80ba-976e5245c759": {
            "function": {
                "args": "(<nova.compute.manager.ComputeManager object at 0x7f67f7273f10>, <nova.context.RequestContext object at 0x7f67cc299210>)", 
                "name": "nova.compute.manager.ComputeManager.attach_volume", 
                "kwargs": "{u'bdm': BlockDeviceMapping(boot_index=None,connection_info=None,created_at=2017-01-19T06:43:09Z,delete_on_termination=False,deleted=False,deleted_at=None,destination_type='volume',device_name='/dev/vdb',device_type=None,disk_bus=None,guest_format=None,id=3,image_id=None,instance=<?>,instance_uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,no_device=False,snapshot_id=None,source_type='volume',tag=None,updated_at=None,volume_id='82c28688-a34b-4bc3-89c6-fdc04285570b',volume_size=None), u'instance': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=<?>,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=<?>,host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=<?>,launch_index=0,launched_at=2017-01-19T06:43:06Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node='vinhnt-LAB',numa_topology=<?>,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=<?>,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:43:07Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='active')}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bc9a9e48-470d-451d-aa5d-22e49cc66b23": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "e51b6b89-3ab7-4c54-9e73-d9e6dfe4ff60": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "57ff215e-4388-4a87-8b76-af0f46ea5eac": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cfdde17e-4886-43b8-a723-5a22548246d6": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952db2c650>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'd4f92d64-9e29-4dba-ac90-b2d6211900ae'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ee633c75-1adb-47ba-97eb-eab7d0fb80f0": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37e88cd90>, u'5299fdb3-2219-46f9-8c52-86fce045e372')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cd0e8e50-4d15-433a-928f-f9e6d17bae55": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0a9e0a93-362c-41c2-a257-d2fc4bdcbcac": {
            "function": {
                "args": "(<cinder.context.RequestContext object at 0x7f95d46ca5d0>, Volume(_name_id=None,admin_metadata={attached_mode='rw'},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:42:12Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-docker_volume-4xhyfkrl657w',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=82c28688-a34b-4bc3-89c6-fdc04285570b,launched_at=2017-01-19T06:42:14Z,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth='CHAP THyZ8adaN383MNpA3jyq Be5ecquV7uysXZNr',provider_geometry=None,provider_id=None,provider_location='10.164.180.85:3260,1 iqn.2010-10.org.openstack:volume-82c28688-a34b-4bc3-89c6-fdc04285570b 1',replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:42:13Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='attaching',terminated_at=None,updated_at=2017-01-19T06:43:14Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', None, u'/dev/vdb')", 
                "name": "cinder.volume.drivers.lvm.LVMVolumeDriver.attach_volume", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "645ac4a7-3c2b-49bb-819d-944ab6ece9a4": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dbe0c90>, u'CREATE', 'COMPLETE', u'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "58d9a720-23ce-4c61-b3b4-4fb2e128857e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3003fe57-a395-4c22-a898-c74e162f82ca": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5f88ed96-31f5-46ea-ba5d-2396a24cd17b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cc37d068-daf5-45b6-8949-79d3ac6a428a": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dbf6fd0>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_examples-5j7n3occjy4a', u'outputs': [], u'config': u'#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /etc/kubernetes/examples/replication-controller.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: ReplicationController\\n      metadata:\\n        name: nginx-controller\\n      spec:\\n        replicas: 2\\n        # selector identifies the set of pods that this\\n        # replication controller is responsible for managing\\n        selector:\\n          name: nginx\\n        # template defines the \\'cookie cutter\\' used for creating\\n        # new pods when necessary\\n        template:\\n          metadata:\\n            labels:\\n              # Important: these labels need to match the selector above\\n              # The api server enforces this constraint.\\n              app: nginx\\n          spec:\\n            containers:\\n              - name: nginx\\n                image: nginx\\n                ports:\\n                  - containerPort: 80\\n\\n  - path: /etc/kubernetes/examples/pod-nginx-with-label.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Pod\\n      metadata:\\n        name: nginx\\n        labels:\\n          app: nginx\\n      spec:\\n        containers:\\n        - name: nginx\\n          image: nginx\\n          ports:\\n          - containerPort: 80\\n\\n  - path: /etc/kubernetes/examples/service.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Service\\n      metadata:\\n        name: nginx-service\\n      spec:\\n        ports:\\n        - port: 8000 # the port that this service should serve on\\n          # the container on each pod to connect to, can be a name\\n          # (e.g. \\'www\\') or a number (e.g. 80)\\n          targetPort: 80\\n          protocol: TCP\\n        # just like the selector in the replication controller,\\n        # but this time it identifies the set of pods to load balance\\n        # traffic to.\\n        selector:\\n          app: nginx\\n\\n  - path: /etc/kubernetes/examples/README.md\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      Kubernetes 101 (http://kubernetes.io/v1.0/docs/user-guide/walkthrough/README.html)\\n      ==================================================================================\\n\\n      List all nodes:\\n\\n          kubectl get nodes\\n\\n      Replication Controllers:\\n\\n          kubectl create -f /etc/kubernetes/examples/replication-controller.yaml\\n          kubectl get rc\\n          kubectl delete rc nginx-controller\\n\\n      Pods:\\n\\n          kubectl create -f /etc/kubernetes/examples/pod-nginx-with-label.yaml\\n          kubectl get pods\\n          curl http://$(kubectl get pod nginx -o=template -t={{.status.podIP}})\\n\\n      Services:\\n\\n          kubectl create -f /etc/kubernetes/examples/service.yaml\\n          kubectl get services\\n\\n          export SERVICE_IP=$(kubectl get service nginx-service -o=template -t={{.spec.clusterIP}})\\n          export SERVICE_PORT=$(kubectl get service nginx-service -o=template \\'-t={{(index .spec.ports 0).port}}\\')\\n          curl http://${SERVICE_IP}:${SERVICE_PORT}\\n\\n          kubectl delete service nginx-service\\n\\n      Troubleshooting:\\n\\n          kubectl get events\\n\\n          kubectl describe rc nginx-controller\\n\\n          kubectl describe pod nginx\\n\\n          kubectl describe service nginx-service\\n\\n          kubectl exec nginx env\\n\\n          kubectl exec -ti nginx -- bash\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c35ed2b3-3883-4957-9f32-476acae3f18b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6b654b60-49d9-4034-b6a7-5f9f524eed5c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'tenant_id': u'f789928a4f254f96965ff7f3dedd02be', 'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8fe96b72-fdb8-4e64-89b0-a460210000a7": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "4316655e-a497-4328-9398-3bf431f0d317": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b2cc44e6-6c47-427c-9227-a908f884917d": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd42410>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 27, u'data': {u'input_data': {u'tuple:(54, True)': {u'status': u'COMPLETE', u'name': u'kube_master_eth0', u'reference_id': u'2c0275e1-3f3e-4ca5-aa69-a0660197e312', u'attrs': {u\"tuple:(u'fixed_ips', 0, u'ip_address')\": u'10.0.0.9'}, u'action': u'CREATE', u'id': 54, u'uuid': u'7cbcebb9-0b62-4743-ad2d-73f619fc6da6'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "61d3868d-b82d-4f9d-992c-157bf1020659": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'network_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', 'device_owner': 'network:dhcp'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3ee3cf33-3596-4145-aa0b-cb5e97e43bb6": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e6efd90>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=None,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d3b92006-ac4d-43a6-b160-03258a490b84": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors/2", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "ba219bbe-8466-46ed-9b17-ab03e3f3524b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e524ee35-ef62-4cf6-8532-8bd440d29dca": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "d86b4e83-af71-4e9b-9881-3186578a5dfa": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e61d9d0>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDevicePool': u'1.1', u'Service': u'1.20', u'InstancePCIRequests': u'1.1', u'SecurityGroup': u'1.2', u'BlockDeviceMappingList': u'1.17', u'Instance': u'2.3', u'DeviceMetadata': u'1.0', u'SecurityGroupList': u'1.0', u'VirtCPUTopology': u'1.0', u'InstanceFault': u'1.2', u'InstanceDeviceMetadata': u'1.0', u'PciDeviceList': u'1.3', u'PciDevicePoolList': u'1.1', u'ServiceList': u'1.19', u'BlockDeviceMapping': u'1.17', u'VirtCPUModel': u'1.0', u'MigrationContext': u'1.1', u'KeyPair': u'1.4', u'KeyPairList': u'1.3', u'InstancePCIRequest': u'1.1', u'Flavor': u'1.1', u'InstanceInfoCache': u'1.5', u'VirtCPUFeature': u'1.0', u'PciDevice': u'1.5', u'InstanceNUMACell': u'1.3', u'DeviceBus': u'1.0', u'ComputeNode': u'1.16', u'Tag': u'1.1', u'HVSpec': u'1.2', u'EC2Ids': u'1.0', u'InstanceNUMATopology': u'1.3', u'TagList': u'1.1'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'5299fdb3-2219-46f9-8c52-86fce045e372'], u'objname': u'BlockDeviceMappingList', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "39ee5c71-d1c7-4d20-aab1-9f21e58f4546": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e014450>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-network-bsueqzfm4pjs', u'stack_id': u'4f715e6a-6c85-4397-adb1-c21fee6efcbb', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1d712634-2cba-473f-9a04-c58b1ab0918d": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952d821410>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d6f9c996-48b6-4b73-af1c-4e636ed8d37e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d9846a05-b9f1-4b7e-a94c-6647423822da": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952d944250>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-add_proxy-2sblawfmwl6w', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nDOCKER_HTTP_PROXY_CONF=/etc/systemd/system/docker.service.d/http_proxy.conf\\n\\nDOCKER_HTTPS_PROXY_CONF=/etc/systemd/system/docker.service.d/https_proxy.conf\\n\\nDOCKER_NO_PROXY_CONF=/etc/systemd/system/docker.service.d/no_proxy.conf\\n\\nDOCKER_RESTART=0\\n\\nBASH_RC=/etc/bashrc\\n\\nmkdir -p /etc/systemd/system/docker.service.d\\n\\nif [ -n \"$HTTP_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_HTTP_PROXY_CONF\\n    [Service]\\n    Environment=HTTP_PROXY=$HTTP_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x http_proxy=$HTTP_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting http_proxy\"\\n    fi\\nfi\\n\\nif [ -n \"$HTTPS_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_HTTPS_PROXY_CONF\\n    [Service]\\n    Environment=HTTPS_PROXY=$HTTPS_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x https_proxy=$HTTPS_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting https_proxy\"\\n    fi\\nfi\\n\\nif [ -n \"$NO_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_NO_PROXY_CONF\\n    [Service]\\n    Environment=NO_PROXY=$NO_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x no_proxy=$NO_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting no_proxy\"\\n    fi\\nfi\\n\\nif [ \"$DOCKER_RESTART\" -eq 1 ]; then\\n    systemctl daemon-reload\\n    systemctl --no-block restart docker.service\\nfi\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "567d7740-8968-4da5-a87c-2da202128bcd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6307ce57-373f-4493-8d6f-4742539d26a0": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd6f810>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': '17f99a3e-229b-4613-a9ac-d93f35a7647f'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "35aad224-3ff0-42a1-a68a-0dd268a47db5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "50d8be96-b84f-4989-a940-d3d460df3466": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "69e1254d-5dac-46c9-b45c-fbb044c1fa58": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952d91bd10>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-write_heat_params-nnsuhhfdizfy', u'outputs': [], u'config': u'#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /etc/sysconfig/heat-params\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      KUBE_ALLOW_PRIV=\"true\"\\n      KUBE_MASTER_IP=\"10.0.0.9\"\\n      KUBE_API_PORT=\"8080\"\\n      KUBE_NODE_PUBLIC_IP=\"172.24.4.4\"\\n      KUBE_NODE_IP=\"10.0.0.3\"\\n      ETCD_SERVER_IP=\"10.0.0.9\"\\n      ENABLE_CINDER=\"$ENABLE_CINDER\"\\n      DOCKER_VOLUME=\"1ad44791-704f-415a-a915-fb4ba2c7c87e\"\\n      DOCKER_VOLUME_SIZE=\"3\"\\n      DOCKER_STORAGE_DRIVER=\"devicemapper\"\\n      NETWORK_DRIVER=\"flannel\"\\n      REGISTRY_ENABLED=\"False\"\\n      REGISTRY_PORT=\"5000\"\\n      SWIFT_REGION=\"\"\\n      REGISTRY_CONTAINER=\"container\"\\n      REGISTRY_INSECURE=\"True\"\\n      REGISTRY_CHUNKSIZE=\"5242880\"\\n      TLS_DISABLED=\"True\"\\n      CLUSTER_UUID=\"9a8ea37c-e9d3-4a7a-a2b1-dc164fb21d67\"\\n      MAGNUM_URL=\"http://10.164.180.85:9511/v1\"\\n      AUTH_URL=\"http://10.164.180.85:5000/v3\"\\n      USERNAME=\"admin\"\\n      PASSWORD=\"ChangeMe\"\\n      VOLUME_DRIVER=\"cinder\"\\n      REGION_NAME=\"RegionOne\"\\n      TENANT_NAME=\"f789928a4f254f96965ff7f3dedd02be\"\\n      HTTP_PROXY=\"http://10.164.177.168:8080/\"\\n      HTTPS_PROXY=\"http://10.164.177.168:8080/\"\\n      NO_PROXY=\"10.164.180.85,10.0.0.0/8,172.0.0.0/8\"\\n      WAIT_CURL=\"curl -i -X POST -H \\'X-Auth-Token: gAAAAABYgGB5noXDDSbj8Ng3eHpHgCbOYM7zEglsOggifCzCBOclCcm3-ONpMVYEZ-36cWKMBP_NY7NGfaXv8WPOLxuHLZERbSYxYtKzY0Vk9-pNRp7TR9HEWzdyWQ_yY01L0AVdtH2cSQtSmSnWgspUsypqsLWLqGxTzianfN40CrqISq2ZZiQ\\' -H \\'Content-Type: application/json\\' -H \\'Accept: application/json\\' http://10.164.180.85:8004/v1/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/stacks/k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr/01356360-a283-455d-b873-caffa7bc43c7/resources/minion_wait_handle/signal\"\\n      KUBE_VERSION=\"v1.2.0\"\\n      TRUSTEE_USER_ID=\"44f763e5727747eeba6f3095d7a86952\"\\n      TRUSTEE_USERNAME=\"9a8ea37c-e9d3-4a7a-a2b1-dc164fb21d67\"\\n      TRUSTEE_PASSWORD=\"7BXp9ABpBgeK5zatdT\"\\n      TRUSTEE_DOMAIN_ID=\"89c8eaf1c4ea4baa8521ab786865f857\"\\n      TRUST_ID=\"a6f5cdd3ef814c32bd36b133781786bc\"\\n      INSECURE_REGISTRY_URL=\"\"\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "74ee5de0-a728-49bf-8316-875d88a47385": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'GET', '/floatingips')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'fixed_ip_address': u'10.0.0.3', 'port_id': u'fcff5957-172c-4937-8341-670d27155ef6'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "94f67e3d-135d-4c73-8e91-5eae49afd49e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "886c97b4-7d37-44c6-a8d2-d69b6bffd885": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "83e7c6dc-545b-44b5-849d-568928cf84a5": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e016090>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-api_lb-67lbo2q7agec', u'stack_id': u'e4fa21f9-93ac-49a8-9433-3f4b1be63733', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "98aeb0b5-b80a-40d4-9f21-e55274433e3c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>, u'{\"port\": {\"status\": \"DOWN\", \"binding:host_id\": \"\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:12Z\", \"device_owner\": \"\", \"revision_number\": 6, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"unbound\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fe7423f0-0017-4aaa-9014-7c0b3a62c3ec": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/extensions", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "e2911184-8ab0-41c0-81af-5e9c4c683ccb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5c267719-82e3-4625-a8d9-031d16e8120e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3654ff94-3953-4acf-a33f-56c6e2124b4c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f789ddcc-fb95-47bd-b8a7-8ef1e0926756": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3351b071-00c2-4500-ae1d-c464b0ac48e6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6bd619ac-12d4-4f4b-a6bc-c8e4a3947f58": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dbb1bd0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'3f63a93a-6985-4cf0-b70d-71b9c296b7f3'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3707d9a7-07fe-4808-a402-62b1893f7a93": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "266ec445-2df9-4d24-b582-702c7f62e686": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd38fd0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'28f4ee14-a123-42ed-95b6-4c40458febd6'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f3792dd2-a4a7-4512-9564-12195d71483f": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd1c910>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 72, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "83f8634f-69bc-4536-9f89-626531ae104a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "65a30e29-a2b4-420c-8ef2-9eca8ad2740b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, '/extensions')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c4392fed-ab3c-4ad7-823f-ffd24ef29e7d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bca49616-b565-45a9-8ec2-dd922e897c6a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "12d5f514-0b44-4feb-a5b9-6b041220821b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7e22b932-e694-4dc1-a279-5d5d9ae02ec7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, u'{\"subnets\": [{\"service_types\": [], \"description\": \"\", \"enable_dhcp\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:57Z\", \"dns_nameservers\": [\"8.8.8.8\"], \"updated_at\": \"2017-01-19T06:41:57Z\", \"gateway_ip\": \"10.0.0.1\", \"ipv6_ra_mode\": null, \"allocation_pools\": [{\"start\": \"10.0.0.2\", \"end\": \"10.0.0.254\"}], \"host_routes\": [], \"revision_number\": 2, \"ip_version\": 4, \"ipv6_address_mode\": null, \"cidr\": \"10.0.0.0/24\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"subnetpool_id\": null, \"name\": \"k8s-cluster-ui4f4ogezhm7-network-bsueqzfm4pjs-private_subnet-ntm6ogzxssyn\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0ee4b902-fafe-4023-8866-27708af13ce2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "59d6ef72-8d66-4a41-8296-358ebf810234": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8fc8c245-0a92-47cb-848e-4d0a695451d1": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "5209a186-f63d-4d91-bb35-3461f2d14406": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5a265115-525a-4bdc-8aab-c96e58cbda3f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c6a912c0-a7de-4dbf-be2e-ce1c162cbec9": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa598ed710>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='spawning',terminated_at=None,updated_at=2017-01-19T06:42:22Z,user_data='Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojY2xvdWQtYm9vdGhvb2sKIyEvYmluL3NoCgpzZXRlbmZvcmNlIDAKCnNlZCAtaSAnCiAgICAvXlNFTElOVVg9LyBzLz0uKi89cGVybWlzc2l2ZS8KJyAvZXRjL3NlbGludXgvY29uZmlnCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojY2xvdWQtY29uZmlnCm1lcmdlX2hvdzogZGljdChyZWN1cnNlX2FycmF5KStsaXN0KGFwcGVuZCkKd3JpdGVfZmlsZXM6CiAgLSBwYXRoOiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIEtVQkVfQVBJX1BVQkxJQ19BRERSRVNTPSIxNzIuMjQuNC4xMSIKICAgICAgS1VCRV9BUElfUFJJVkFURV9BRERSRVNTPSIxMC4wLjAuOSIKICAgICAgS1VCRV9BUElfUE9SVD0iODA4MCIKICAgICAgS1VCRV9OT0RFX1BVQkxJQ19JUD0iMTcyLjI0LjQuMTEiCiAgICAgIEtVQkVfTk9ERV9JUD0iMTAuMC4wLjkiCiAgICAgIEtVQkVfQUxMT1dfUFJJVj0idHJ1ZSIKICAgICAgRU5BQkxFX0NJTkRFUj0iJEVOQUJMRV9DSU5ERVIiCiAgICAgIERPQ0tFUl9WT0xVTUU9IjgyYzI4Njg4LWEzNGItNGJjMy04OWM2LWZkYzA0Mjg1NTcwYiIKICAgICAgRE9DS0VSX1ZPTFVNRV9TSVpFPSIzIgogICAgICBET0NLRVJfU1RPUkFHRV9EUklWRVI9ImRldmljZW1hcHBlciIKICAgICAgTkVUV09SS19EUklWRVI9ImZsYW5uZWwiCiAgICAgIEZMQU5ORUxfTkVUV09SS19DSURSPSIxMC4xMDAuMC4wLzE2IgogICAgICBGTEFOTkVMX05FVFdPUktfU1VCTkVUTEVOPSIyNCIKICAgICAgRkxBTk5FTF9CQUNLRU5EPSJ1ZHAiCiAgICAgIFBPUlRBTF9ORVRXT1JLX0NJRFI9IjEwLjI1NC4wLjAvMTYiCiAgICAgIEVUQ0RfRElTQ09WRVJZX1VSTD0iaHR0cHM6Ly9kaXNjb3ZlcnkuZXRjZC5pby8yMDJkNmY4OTVlZDNmNmRkODA0MWI3YjhkMmE1YTM3ZiIKICAgICAgVVNFUk5BTUU9ImFkbWluIgogICAgICBQQVNTV09SRD0iQ2hhbmdlTWUiCiAgICAgIFRFTkFOVF9OQU1FPSJmNzg5OTI4YTRmMjU0Zjk2OTY1ZmY3ZjNkZWRkMDJiZSIKICAgICAgQ0xVU1RFUl9TVUJORVQ9ImNlOTBmOGZjLTRlZDItNGE1NS05Y2Y2LTI2MmZlNDY2ZTI1NyIKICAgICAgVExTX0RJU0FCTEVEPSJUcnVlIgogICAgICBDTFVTVEVSX1VVSUQ9IjlhOGVhMzdjLWU5ZDMtNGE3YS1hMmIxLWRjMTY0ZmIyMWQ2NyIKICAgICAgTUFHTlVNX1VSTD0iaHR0cDovLzEwLjE2NC4xODAuODU6OTUxMS92MSIKICAgICAgSFRUUF9QUk9YWT0iaHR0cDovLzEwLjE2NC4xNzcuMTY4OjgwODAvIgogICAgICBIVFRQU19QUk9YWT0iaHR0cDovLzEwLjE2NC4xNzcuMTY4OjgwODAvIgogICAgICBOT19QUk9YWT0iMTAuMTY0LjE4MC44NSwxMC4wLjAuMC84LDE3Mi4wLjAuMC84IgogICAgICBXQUlUX0NVUkw9ImN1cmwgLWkgLVggUE9TVCAtSCAnWC1BdXRoLVRva2VuOiBnQUFBQUFCWWdGX0RtX1c1d0p1cFRCWEFEOHJGS1lYaUJjMU5hZ01pYnI3ai1pRWxYMnRXVEQ0ZnZuUmN5VzB2X3FBMEFHOU1qODNvME41a0Y3MGJ6Zkd5YWVQNFo5NDE0QmJ6UkpHZTVXRm5hRS1wUElnQTQwdk1XTjR5VHdzM0I3VEVWM01udjBXUWZ2R2NnTG80V2NWR0puTWI4Sy1tNmJNSzdNYkh4Y3BBR2NIazVtZVRlQVEnIC1IICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nIC1IICdBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24nIGh0dHA6Ly8xMC4xNjQuMTgwLjg1OjgwMDQvdjEvM2ZiZDZhMWZkNWYwNGUzMmJmNTg0ZGZkNGI0ZjljNWUvc3RhY2tzL2s4cy1jbHVzdGVyLXVpNGY0b2dlemhtNy1rdWJlX21hc3RlcnMtNGIyemoydTR1a3ZoLTAtN2h2c3dhaXFha3h2L2MzZjdhNTBiLTVmYzktNDIwOS04NzI4LTJhZjQzMDBlNDJkZS9yZXNvdXJjZXMvbWFzdGVyX3dhaXRfaGFuZGxlL3NpZ25hbCIKICAgICAgS1VCRV9WRVJTSU9OPSJ2MS4yLjAiCiAgICAgIFRSVVNURUVfVVNFUl9JRD0iNDRmNzYzZTU3Mjc3NDdlZWJhNmYzMDk1ZDdhODY5NTIiCiAgICAgIFRSVVNURUVfUEFTU1dPUkQ9IjdCWHA5QUJwQmdlSzV6YXRkVCIKICAgICAgVFJVU1RfSUQ9ImE2ZjVjZGQzZWY4MTRjMzJiZDM2YjEzMzc4MTc4NmJjIgogICAgICBBVVRIX1VSTD0iaHR0cDovLzEwLjE2NC4xODAuODU6NTAwMC92MyIKICAgICAgSU5TRUNVUkVfUkVHSVNUUllfVVJMPSIiCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLXogIiRLVUJFX05PREVfSVAiIF07IHRoZW4KICAgICMgRklYTUUoeXVhbnlpbmcpOiBTZXQgS1VCRV9OT0RFX0lQIGNvcnJlY3RseQogICAgS1VCRV9OT0RFX0lQPSQoY3VybCAtcyBodHRwOi8vMTY5LjI1NC4xNjkuMjU0L2xhdGVzdC9tZXRhLWRhdGEvbG9jYWwtaXB2NCkKZmkKCm15aXA9IiR7S1VCRV9OT0RFX0lQfSIKY2VydF9kaXI9Ii9zcnYva3ViZXJuZXRlcyIKcHJvdG9jb2w9Imh0dHBzIgoKaWYgWyAiJFRMU19ESVNBQkxFRCIgPSAiVHJ1ZSIgXTsgdGhlbgogICAgcHJvdG9jb2w9Imh0dHAiCmZpCgpjYXQgPiAvZXRjL2V0Y2QvZXRjZC5jb25mIDw8RU9GCkVUQ0RfTkFNRT0iJG15aXAiCkVUQ0RfREFUQV9ESVI9Ii92YXIvbGliL2V0Y2QvZGVmYXVsdC5ldGNkIgpFVENEX0xJU1RFTl9DTElFTlRfVVJMUz0iJHByb3RvY29sOi8vJG15aXA6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkiCkVUQ0RfTElTVEVOX1BFRVJfVVJMUz0iJHByb3RvY29sOi8vJG15aXA6MjM4MCIKCkVUQ0RfQURWRVJUSVNFX0NMSUVOVF9VUkxTPSIkcHJvdG9jb2w6Ly8kbXlpcDoyMzc5LGh0dHA6Ly8xMjcuMC4wLjE6MjM3OSIKRVRDRF9JTklUSUFMX0FEVkVSVElTRV9QRUVSX1VSTFM9IiRwcm90b2NvbDovLyRteWlwOjIzODAiCkVUQ0RfRElTQ09WRVJZPSIkRVRDRF9ESVNDT1ZFUllfVVJMIgpFT0YKCmlmIFsgIiRUTFNfRElTQUJMRUQiID0gIkZhbHNlIiBdOyB0aGVuCgpjYXQgPj4gL2V0Yy9ldGNkL2V0Y2QuY29uZiA8PEVPRgpFVENEX0NBX0ZJTEU9JGNlcnRfZGlyL2NhLmNydApFVENEX0NFUlRfRklMRT0kY2VydF9kaXIvc2VydmVyLmNydApFVENEX0tFWV9GSUxFPSRjZXJ0X2Rpci9zZXJ2ZXIua2V5CkVUQ0RfUEVFUl9DQV9GSUxFPSRjZXJ0X2Rpci9jYS5jcnQKRVRDRF9QRUVSX0NFUlRfRklMRT0kY2VydF9kaXIvc2VydmVyLmNydApFVENEX1BFRVJfS0VZX0ZJTEU9JGNlcnRfZGlyL3NlcnZlci5rZXkKRU9GCgpmaQoKaWYgWyAtbiAiJEhUVFBfUFJPWFkiIF07IHRoZW4KICAgIGVjaG8gIkVUQ0RfRElTQ09WRVJZX1BST1hZPSRIVFRQX1BST1hZIiA+PiAvZXRjL2V0Y2QvZXRjZC5jb25mCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCktVQkVfT1NfQ0xPVURfQ09ORklHPS9ldGMvc3lzY29uZmlnL2t1YmVfb3BlbnN0YWNrX2NvbmZpZwoKIyBrdWJlcm5ldGVzIGJhY2tlbmQgb25seSBzdXBwb3J0IGtleXN0b25lIHYyIGF0IHRoaXMgcG9pbnQKQVVUSF9VUkw9JChlY2hvICIkQVVUSF9VUkwiIHwgc2VkICdzL3YzL3YyLjAvJykKCiMgR2VuZXJhdGUgYSB0aGUgY29uZmlndXJhdGlvbiBmb3IgS3ViZXJuZXRlcyBzZXJ2aWNlcwojIHRvIHRhbGsgdG8gT3BlblN0YWNrIE5ldXRyb24KY2F0ID4gJEtVQkVfT1NfQ0xPVURfQ09ORklHIDw8RU9GCltHbG9iYWxdCmF1dGgtdXJsPSRBVVRIX1VSTAp1c2VybmFtZT0kVVNFUk5BTUUKcGFzc3dvcmQ9JFBBU1NXT1JECnRlbmFudC1uYW1lPSRURU5BTlRfTkFNRQpbTG9hZEJhbGFuY2VyXQpzdWJuZXQtaWQ9JENMVVNURVJfU1VCTkVUCmNyZWF0ZS1tb25pdG9yPXllcwptb25pdG9yLWRlbGF5PTFtCm1vbml0b3ItdGltZW91dD0zMHMKbW9uaXRvci1tYXgtcmV0cmllcz0zCkVPRgoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgojIENvcHlyaWdodCAyMDE0IFRoZSBLdWJlcm5ldGVzIEF1dGhvcnMgQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwojIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KIyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKIwojICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKIwojIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKIyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAojIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgojIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKIyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCnNldCAtbyBlcnJleGl0CnNldCAtbyBub3Vuc2V0CnNldCAtbyBwaXBlZmFpbAoKaWYgWyAiJFRMU19ESVNBQkxFRCIgPT0gIlRydWUiIF07IHRoZW4KICAgIGV4aXQgMApmaQoKaWYgW1sgLXogIiR7S1VCRV9OT0RFX1BVQkxJQ19JUH0iIF1dOyB0aGVuCiAgICBLVUJFX05PREVfUFVCTElDX0lQPSQoY3VybCAtcyBodHRwOi8vMTY5LjI1NC4xNjkuMjU0L2xhdGVzdC9tZXRhLWRhdGEvcHVibGljLWlwdjQpCmZpCmlmIFtbIC16ICIke0tVQkVfTk9ERV9JUH0iIF1dOyB0aGVuCiAgICBLVUJFX05PREVfSVA9JChjdXJsIC1zIGh0dHA6Ly8xNjkuMjU0LjE2OS4yNTQvbGF0ZXN0L21ldGEtZGF0YS9sb2NhbC1pcHY0KQpmaQoKc2Fucz0iSVA6JHtLVUJFX05PREVfUFVCTElDX0lQfSxJUDoke0tVQkVfTk9ERV9JUH0iCmlmIFsgIiR7S1VCRV9OT0RFX1BVQkxJQ19JUH0iICE9ICIke0tVQkVfQVBJX1BVQkxJQ19BRERSRVNTfSIgXSBcCiAgICAgICAgJiYgWyAtbiAiJHtLVUJFX0FQSV9QVUJMSUNfQUREUkVTU30iIF07IHRoZW4KICAgIHNhbnM9IiR7c2Fuc30sSVA6JHtLVUJFX0FQSV9QVUJMSUNfQUREUkVTU30iCmZpCmlmIFsgIiR7S1VCRV9OT0RFX0lQfSIgIT0gIiR7S1VCRV9BUElfUFJJVkFURV9BRERSRVNTfSIgXSBcCiAgICAgICAgJiYgWyAtbiAiJHtLVUJFX0FQSV9QUklWQVRFX0FERFJFU1N9IiBdOyB0aGVuCiAgICBzYW5zPSIke3NhbnN9LElQOiR7S1VCRV9BUElfUFJJVkFURV9BRERSRVNTfSIKZmkKTUFTVEVSX0hPU1ROQU1FPSR7TUFTVEVSX0hPU1ROQU1FOi19CmlmIFtbIC1uICIke01BU1RFUl9IT1NUTkFNRX0iIF1dOyB0aGVuCiAgICBzYW5zPSIke3NhbnN9LEROUzoke01BU1RFUl9IT1NUTkFNRX0iCmZpCnNhbnM9IiR7c2Fuc30sSVA6MTI3LjAuMC4xIgoKY2VydF9kaXI9L3Nydi9rdWJlcm5ldGVzCmNlcnRfY29uZl9kaXI9JHtjZXJ0X2Rpcn0vY29uZgoKbWtkaXIgLXAgIiRjZXJ0X2RpciIKbWtkaXIgLXAgIiRjZXJ0X2NvbmZfZGlyIgoKQ0FfQ0VSVD0kY2VydF9kaXIvY2EuY3J0ClNFUlZFUl9DRVJUPSRjZXJ0X2Rpci9zZXJ2ZXIuY3J0ClNFUlZFUl9DU1I9JGNlcnRfZGlyL3NlcnZlci5jc3IKU0VSVkVSX0tFWT0kY2VydF9kaXIvc2VydmVyLmtleQoKI0dldCBhIHRva2VuIGJ5IHVzZXIgY3JlZGVudGlhbHMgYW5kIHRydXN0CmF1dGhfanNvbj0kKGNhdCA8PCBFT0YKewogICAgImF1dGgiOiB7CiAgICAgICAgImlkZW50aXR5IjogewogICAgICAgICAgICAibWV0aG9kcyI6IFsKICAgICAgICAgICAgICAgICJwYXNzd29yZCIKICAgICAgICAgICAgXSwKICAgICAgICAgICAgInBhc3N3b3JkIjogewogICAgICAgICAgICAgICAgInVzZXIiOiB7CiAgICAgICAgICAgICAgICAgICAgImlkIjogIiRUUlVTVEVFX1VTRVJfSUQiLAogICAgICAgICAgICAgICAgICAgICJwYXNzd29yZCI6ICIkVFJVU1RFRV9QQVNTV09SRCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInNjb3BlIjogewogICAgICAgICAgICAiT1MtVFJVU1Q6dHJ1c3QiOiB7CiAgICAgICAgICAgICAgICAiaWQiOiAiJFRSVVNUX0lEIgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9CkVPRgopCgojdHJ1c3QgaXMgaW50cm9kdWNlZCBpbiBLZXlzdG9uZSB2MyB2ZXJzaW9uCkFVVEhfVVJMPSR7QVVUSF9VUkwvdjIuMC92M30KY29udGVudF90eXBlPSdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nCnVybD0iJEFVVEhfVVJML2F1dGgvdG9rZW5zIgpVU0VSX1RPS0VOPWBjdXJsIC1rIC1zIC1pIC1YIFBPU1QgLUggIiRjb250ZW50X3R5cGUiIC1kICIkYXV0aF9qc29uIiAkdXJsIFwKICAgIHwgZ3JlcCBYLVN1YmplY3QtVG9rZW4gfCBhd2sgJ3twcmludCAkMn0nIHwgdHIgLWQgJ1tbOnNwYWNlOl1dJ2AKCiMgR2V0IENBIGNlcnRpZmljYXRlIGZvciB0aGlzIGNsdXN0ZXIKY3VybCAtayAtWCBHRVQgXAogICAgLUggIlgtQXV0aC1Ub2tlbjogJFVTRVJfVE9LRU4iIFwKICAgICRNQUdOVU1fVVJML2NlcnRpZmljYXRlcy8kQ0xVU1RFUl9VVUlEIHwgcHl0aG9uIC1jICdpbXBvcnQgc3lzLCBqc29uOyBwcmludCBqc29uLmxvYWQoc3lzLnN0ZGluKVsicGVtIl0nID4gJHtDQV9DRVJUfQoKIyBDcmVhdGUgY29uZmlnIGZvciBzZXJ2ZXIncyBjc3IKY2F0ID4gJHtjZXJ0X2NvbmZfZGlyfS9zZXJ2ZXIuY29uZiA8PEVPRgpbcmVxXQpkaXN0aW5ndWlzaGVkX25hbWUgPSByZXFfZGlzdGluZ3Vpc2hlZF9uYW1lCnJlcV9leHRlbnNpb25zICAgICA9IHJlcV9leHQKcHJvbXB0ID0gbm8KW3JlcV9kaXN0aW5ndWlzaGVkX25hbWVdCkNOID0ga3ViZXJuZXRlcy5pbnZhbGlkCltyZXFfZXh0XQpzdWJqZWN0QWx0TmFtZSA9ICR7c2Fuc30KZXh0ZW5kZWRLZXlVc2FnZSA9IGNsaWVudEF1dGgsc2VydmVyQXV0aApFT0YKCiMgR2VuZXJhdGUgc2VydmVyJ3MgcHJpdmF0ZSBrZXkgYW5kIGNzcgpvcGVuc3NsIGdlbnJzYSAtb3V0ICIke1NFUlZFUl9LRVl9IiA0MDk2CmNobW9kIDQwMCAiJHtTRVJWRVJfS0VZfSIKb3BlbnNzbCByZXEgLW5ldyAtZGF5cyAxMDAwIFwKICAgICAgICAta2V5ICIke1NFUlZFUl9LRVl9IiBcCiAgICAgICAgLW91dCAiJHtTRVJWRVJfQ1NSfSIgXAogICAgICAgIC1yZXFleHRzIHJlcV9leHQgXAogICAgICAgIC1jb25maWcgIiR7Y2VydF9jb25mX2Rpcn0vc2VydmVyLmNvbmYiCgojIFNlbmQgY3NyIHRvIE1hZ251bSB0byBoYXZlIGl0IHNpZ25lZApjc3JfcmVxPSQocHl0aG9uIC1jICJpbXBvcnQganNvbjsgZnAgPSBvcGVuKCcke1NFUlZFUl9DU1J9Jyk7IHByaW50IGpzb24uZHVtcHMoeydjbHVzdGVyX3V1aWQnOiAnJENMVVNURVJfVVVJRCcsICdjc3InOiBmcC5yZWFkKCl9KTsgZnAuY2xvc2UoKSIpCmN1cmwgLWsgLVggUE9TVCBcCiAgICAtSCAiWC1BdXRoLVRva2VuOiAkVVNFUl9UT0tFTiIgXAogICAgLUggIkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbiIgXAogICAgLWQgIiRjc3JfcmVxIiBcCiAgICAkTUFHTlVNX1VSTC9jZXJ0aWZpY2F0ZXMgfCBweXRob24gLWMgJ2ltcG9ydCBzeXMsIGpzb247IHByaW50IGpzb24ubG9hZChzeXMuc3RkaW4pWyJwZW0iXScgPiAke1NFUlZFUl9DRVJUfQoKIyBDb21tb24gY2VydHMgYW5kIGtleSBhcmUgY3JlYXRlZCBmb3IgYm90aCBldGNkIGFuZCBrdWJlcm5ldGVzIHNlcnZpY2VzLgojIEJvdGggZXRjZCBhbmQga3ViZSB1c2VyIHNob3VsZCBoYXZlIHBlcm1pc3Npb24gdG8gYWNjZXNzIHRoZSBjZXJ0cyBhbmQga2V5Lgpncm91cGFkZCBrdWJlX2V0Y2QKdXNlcm1vZCAtYSAtRyBrdWJlX2V0Y2QgZXRjZAp1c2VybW9kIC1hIC1HIGt1YmVfZXRjZCBrdWJlCmNobW9kIDU1MCAiJHtjZXJ0X2Rpcn0iCmNob3duIC1SIGt1YmU6a3ViZV9ldGNkICIke2NlcnRfZGlyfSIKY2htb2QgNDQwICRTRVJWRVJfS0VZCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLW4gIiRET0NLRVJfVk9MVU1FX1NJWkUiIF0gJiYgWyAiJERPQ0tFUl9WT0xVTUVfU0laRSIgLWd0IDAgXTsgdGhlbgogICAgaWYgWyAiJEVOQUJMRV9DSU5ERVIiID09ICJGYWxzZSIgXTsgdGhlbgogICAgICAgICMgRklYTUUoeXVhbnlpbmcpOiBVc2UgZXBoZW1lcmFsIGRpc2sgZm9yIGRvY2tlciBzdG9yYWdlCiAgICAgICAgIyBDdXJyZW50bHkgSXJvbmljIGRvZXNuJ3Qgc3VwcG9ydCBjaW5kZXIgdm9sdW1lcywKICAgICAgICAjIHNvIHdlIG11c3QgdXNlIHByZXNlcnZlZCBlcGhlbWVyYWwgZGlzayBpbnN0ZWFkIG9mIGEgY2luZGVyIHZvbHVtZS4KICAgICAgICBkZXZpY2VfcGF0aD0kKHJlYWRsaW5rIC1mIC9kZXYvZGlzay9ieS1sYWJlbC9lcGhlbWVyYWwwKQogICAgZWxzZQogICAgICAgIGF0dGVtcHRzPTYwCiAgICAgICAgd2hpbGUgWyAke2F0dGVtcHRzfSAtZ3QgMCBdOyBkbwogICAgICAgICAgICBkZXZpY2VfbmFtZT0kKGxzIC9kZXYvZGlzay9ieS1pZCB8IGdyZXAgJHtET0NLRVJfVk9MVU1FOjA6MjB9JCkKICAgICAgICAgICAgaWYgWyAtbiAiJHtkZXZpY2VfbmFtZX0iIF07IHRoZW4KICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGZpCiAgICAgICAgICAgIGVjaG8gIndhaXRpbmcgZm9yIGRpc2sgZGV2aWNlIgogICAgICAgICAgICBzbGVlcCAwLjUKICAgICAgICAgICAgdWRldmFkbSB0cmlnZ2VyCiAgICAgICAgICAgIGxldCBhdHRlbXB0cy0tCiAgICAgICAgZG9uZQoKICAgICAgICBpZiBbIC16ICIke2RldmljZV9uYW1lfSIgXTsgdGhlbgogICAgICAgICAgICBlY2hvICJFUlJPUjogZGlzayBkZXZpY2UgZG9lcyBub3QgZXhpc3QiID4mMgogICAgICAgICAgICBleGl0IDEKICAgICAgICBmaQoKICAgICAgICBkZXZpY2VfcGF0aD0vZGV2L2Rpc2svYnktaWQvJHtkZXZpY2VfbmFtZX0KICAgIGZpCmZpCgojIFRoaXMgZmlsZSBjb250YWlucyBkb2NrZXIgc3RvcmFnZSBkcml2ZXJzIGNvbmZpZ3VyYXRpb24gZm9yIGZlZG9yYQojIGF0b21pYyBob3N0cy4gQ3VycmVudGx5LCBkZXZpY2VtYXBwZXIgYW5kIG92ZXJsYXkgYXJlIHN1cHBvcnRlZC4KCiMgUmVtb3ZlIGFueSBleGlzdGluZyBkb2NrZXItc3RvcmFnZSBjb25maWd1cmF0aW9uLiBJbiBjYXNlIG9mIGFuCiMgZXhpc3RpbmcgY29uZmlndXJhdGlvbiwgZG9ja2VyLXN0b3JhZ2Utc2V0dXAgd2lsbCBmYWlsLgpjbGVhcl9kb2NrZXJfc3RvcmFnZV9jb25maWd1cmF0aW9uICgpIHsKICAgIGlmIFsgLWYgL2V0Yy9zeXNjb25maWcvZG9ja2VyLXN0b3JhZ2UgXTsgdGhlbgogICAgICAgIHNlZCAtaSAiL15ET0NLRVJfU1RPUkFHRV9PUFRJT05TPS8gcy89LiovPS8iIC9ldGMvc3lzY29uZmlnL2RvY2tlci1zdG9yYWdlCiAgICBmaQp9CgojIENvbmZpZ3VyZSBkb2NrZXIgc3RvcmFnZSB3aXRoIHhmcyBhcyBiYWNraW5nIGZpbGVzeXN0ZW0uCmNvbmZpZ3VyZV9vdmVybGF5ICgpIHsKICAgIGNsZWFyX2RvY2tlcl9zdG9yYWdlX2NvbmZpZ3VyYXRpb24KCiAgICBybSAtcmYgL3Zhci9saWIvZG9ja2VyLyoKCiAgICBpZiBbIC1uICIkRE9DS0VSX1ZPTFVNRV9TSVpFIiBdICYmIFsgIiRET0NLRVJfVk9MVU1FX1NJWkUiIC1ndCAwIF07IHRoZW4KICAgICAgICBta2ZzLnhmcyAtZiAke2RldmljZV9wYXRofQogICAgICAgIGVjaG8gIiR7ZGV2aWNlX3BhdGh9IC92YXIvbGliL2RvY2tlciB4ZnMgZGVmYXVsdHMgMCAwIiA+PiAvZXRjL2ZzdGFiCiAgICAgICAgbW91bnQgLWEKICAgIGZpCgogICAgZWNobyAiU1RPUkFHRV9EUklWRVI9b3ZlcmxheSIgPiAvZXRjL3N5c2NvbmZpZy9kb2NrZXItc3RvcmFnZS1zZXR1cAoKICAgICMgU0VMaW51eCBtdXN0IGJlIGVuYWJsZWQgYW5kIGluIGVuZm9yY2luZyBtb2RlIG9uIHRoZSBwaHlzaWNhbAogICAgIyBtYWNoaW5lLCBidXQgbXVzdCBiZSBkaXNhYmxlZCBpbiB0aGUgY29udGFpbmVyIHdoZW4gcGVyZm9ybWluZwogICAgIyBjb250YWluZXIgc2VwYXJhdGlvbgogICAgc2VkIC1pICIvXk9QVElPTlM9LyBzLy0tc2VsaW51eC1lbmFibGVkLy0tc2VsaW51eC1lbmFibGVkPWZhbHNlLyIgL2V0Yy9zeXNjb25maWcvZG9ja2VyCn0KCiMgQ29uZmlndXJlIGRvY2tlciBzdG9yYWdlIHdpdGggZGV2aWNlbWFwcGVyIHVzaW5nIGRpcmVjdCBMVk0KY29uZmlndXJlX2RldmljZW1hcHBlciAoKSB7CiAgICBjbGVhcl9kb2NrZXJfc3RvcmFnZV9jb25maWd1cmF0aW9uCgogICAgaWYgWyAtbiAiJERPQ0tFUl9WT0xVTUVfU0laRSIgXSAmJiBbICIkRE9DS0VSX1ZPTFVNRV9TSVpFIiAtZ3QgMCBdOyB0aGVuCiAgICAgICAgcHZjcmVhdGUgLWYgJHtkZXZpY2VfcGF0aH0KICAgICAgICB2Z2NyZWF0ZSBkb2NrZXIgJHtkZXZpY2VfcGF0aH0KCiAgICAgICAgZWNobyAiVkc9ZG9ja2VyIiA+IC9ldGMvc3lzY29uZmlnL2RvY2tlci1zdG9yYWdlLXNldHVwCiAgICBmaQp9CgoKaWYgWyAiJERPQ0tFUl9TVE9SQUdFX0RSSVZFUiIgPSAib3ZlcmxheSIgXTsgdGhlbgogICAgaWYgWyAkKGVjaG8gLWUgIiQodW5hbWUgLXIpXG4zLjE4IiB8IHNvcnQgLVYgfCBoZWFkIC0xKSA9ICQodW5hbWUgLXIpIF07IHRoZW4KICAgICAgICBFUlJPUl9NRVNTQUdFPSJPdmVybGF5RlMgcmVxdWlyZXMgYXQgbGVhc3QgTGludXgga2VybmVsIDMuMTguIENsdXN0ZXIgbm9kZSBrZXJuZWwgdmVyc2lvbjogJCh1bmFtZSAtcikiCiAgICAgICAgZWNobyAiRVJST1I6ICR7RVJST1JfTUVTU0FHRX0iID4mMgogICAgICAgIHNoIC1jICIke1dBSVRfQ1VSTH0gLS1kYXRhLWJpbmFyeSAne1wic3RhdHVzXCI6IFwiRkFJTFVSRVwiLCBcInJlYXNvblwiOiBcIiR7RVJST1JfTUVTU0FHRX1cIn0nIgogICAgZWxzZQogICAgICAgIGNvbmZpZ3VyZV9vdmVybGF5CiAgICBmaQplbHNlCiAgICBjb25maWd1cmVfZGV2aWNlbWFwcGVyCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmVjaG8gImNvbmZpZ3VyaW5nIGt1YmVybmV0ZXMgKG1hc3RlcikiCgppZiBbIC16ICIkS1VCRV9OT0RFX0lQIiBdOyB0aGVuCiAgICAjIEZJWE1FKHl1YW55aW5nKTogU2V0IEtVQkVfTk9ERV9JUCBjb3JyZWN0bHkKICAgIEtVQkVfTk9ERV9JUD0kKGN1cmwgLXMgaHR0cDovLzE2OS4yNTQuMTY5LjI1NC9sYXRlc3QvbWV0YS1kYXRhL2xvY2FsLWlwdjQpCmZpCgpzZWQgLWkgJwogICAgL15LVUJFX0FMTE9XX1BSSVY9LyBzLz0uKi89Ii0tYWxsb3ctcHJpdmlsZWdlZD0nIiRLVUJFX0FMTE9XX1BSSVYiJyIvCicgL2V0Yy9rdWJlcm5ldGVzL2NvbmZpZwoKS1VCRV9BUElfQVJHUz0iLS1ydW50aW1lLWNvbmZpZz1hcGkvYWxsPXRydWUiCmlmIFsgIiRUTFNfRElTQUJMRUQiID09ICJUcnVlIiBdOyB0aGVuCiAgICBLVUJFX0FQSV9BRERSRVNTPSItLWluc2VjdXJlLWJpbmQtYWRkcmVzcz0wLjAuMC4wIC0taW5zZWN1cmUtcG9ydD0kS1VCRV9BUElfUE9SVCIKZWxzZQogICAgS1VCRV9BUElfQUREUkVTUz0iLS1iaW5kLWFkZHJlc3M9MC4wLjAuMCAtLXNlY3VyZS1wb3J0PSRLVUJFX0FQSV9QT1JUIgogICAgIyBpbnNlY3VyZSBwb3J0IGlzIHVzZWQgaW50ZXJuYWx5CiAgICBLVUJFX0FQSV9BRERSRVNTPSIkS1VCRV9BUElfQUREUkVTUyAtLWluc2VjdXJlLXBvcnQ9ODA4MCIKICAgIEtVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIC0tdGxzLWNlcnQtZmlsZT0vc3J2L2t1YmVybmV0ZXMvc2VydmVyLmNydCIKICAgIEtVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIC0tdGxzLXByaXZhdGUta2V5LWZpbGU9L3Nydi9rdWJlcm5ldGVzL3NlcnZlci5rZXkiCiAgICBLVUJFX0FQSV9BUkdTPSIkS1VCRV9BUElfQVJHUyAtLWNsaWVudC1jYS1maWxlPS9zcnYva3ViZXJuZXRlcy9jYS5jcnQiCmZpCgpzZWQgLWkgJwogICAgL15LVUJFX0FQSV9BRERSRVNTPS8gcy89LiovPSInIiR7S1VCRV9BUElfQUREUkVTU30iJyIvCiAgICAvXktVQkVfU0VSVklDRV9BRERSRVNTRVM9LyBzfD0uKnw9Ii0tc2VydmljZS1jbHVzdGVyLWlwLXJhbmdlPSciJFBPUlRBTF9ORVRXT1JLX0NJRFIiJyJ8CiAgICAvXktVQkVfQVBJX0FSR1M9LyBzL0tVQkVfQVBJX0FSR1MuLy8KICAgIC9eS1VCRV9FVENEX1NFUlZFUlM9LyBzLz0uKi89Ii0tZXRjZC1zZXJ2ZXJzPWh0dHA6XC9cLzEyNy4wLjAuMToyMzc5Ii8KICAgIC9eS1VCRV9BRE1JU1NJT05fQ09OVFJPTD0vIHMvPS4qLz0iIi8KJyAvZXRjL2t1YmVybmV0ZXMvYXBpc2VydmVyCmNhdCA8PCBfRU9DXyA+PiAvZXRjL2t1YmVybmV0ZXMvYXBpc2VydmVyCiNVbmNvbW1lbnQgdGhlIGZvbGxvd2luZyBsaW5lIHRvIGRpc2FibGUgTG9hZCBCYWxhbmNlciBmZWF0dXJlCktVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIgojVW5jb21tZW50IHRoZSBmb2xsb3dpbmcgbGluZSB0byBlbmFibGUgTG9hZCBCYWxhbmNlciBmZWF0dXJlCiNLVUJFX0FQSV9BUkdTPSIkS1VCRV9BUElfQVJHUyAtLWNsb3VkLWNvbmZpZz0vZXRjL3N5c2NvbmZpZy9rdWJlX29wZW5zdGFja19jb25maWcgLS1jbG91ZC1wcm92aWRlcj1vcGVuc3RhY2siCl9FT0NfCgpzZWQgLWkgJwogICAgL15LVUJFTEVUX0FERFJFU1NFUz0vIHMvPS4qLz0iLS1tYWNoaW5lcz0nIiInIi8KICAgIC9eS1VCRV9DT05UUk9MTEVSX01BTkFHRVJfQVJHUz0vIHMvS1VCRV9DT05UUk9MTEVSX01BTkFHRVJfQVJHUy4qLyNVbmNvbW1lbnQgdGhlIGZvbGxvd2luZyBsaW5lIHRvIGVuYWJsZSBLdWJlcm5ldGVzIExvYWQgQmFsYW5jZXIgZmVhdHVyZSBcbiNLVUJFX0NPTlRST0xMRVJfTUFOQUdFUl9BUkdTPSItLWNsb3VkLWNvbmZpZz1cL2V0Y1wvc3lzY29uZmlnXC9rdWJlX29wZW5zdGFja19jb25maWcgLS1jbG91ZC1wcm92aWRlcj1vcGVuc3RhY2siLwonIC9ldGMva3ViZXJuZXRlcy9jb250cm9sbGVyLW1hbmFnZXIKCktVQkVMRVRfQVJHUz0iLS1yZWdpc3Rlci1ub2RlPXRydWUgLS1yZWdpc3Rlci1zY2hlZHVsYWJsZT1mYWxzZSAtLWNvbmZpZz0vZXRjL2t1YmVybmV0ZXMvbWFuaWZlc3RzIC0taG9zdG5hbWUtb3ZlcnJpZGU9JEtVQkVfTk9ERV9JUCIKCmlmIFsgLW4gIiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfSIgXTsgdGhlbgogICAgS1VCRUxFVF9BUkdTPSIke0tVQkVMRVRfQVJHU30gLS1wb2QtaW5mcmEtY29udGFpbmVyLWltYWdlPSR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfS9nb29nbGVfY29udGFpbmVycy9wYXVzZVw6MC44LjAiCiAgICBlY2hvICJJTlNFQ1VSRV9SRUdJU1RSWT0nLS1pbnNlY3VyZS1yZWdpc3RyeSAke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0nIiA+PiAvZXRjL3N5c2NvbmZpZy9kb2NrZXIKZmkKCnNlZCAtaSAnCiAgICAvXktVQkVMRVRfQUREUkVTUz0vIHMvPS4qLz0iLS1hZGRyZXNzPTAuMC4wLjAiLwogICAgL15LVUJFTEVUX0hPU1ROQU1FPS8gcy89LiovPSIiLwogICAgL15LVUJFTEVUX0FSR1M9LyBzfD0uKnw9JyIkS1VCRUxFVF9BUkdTIid8CicgL2V0Yy9rdWJlcm5ldGVzL2t1YmVsZXQKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKRE9DS0VSX0hUVFBfUFJPWFlfQ09ORj0vZXRjL3N5c3RlbWQvc3lzdGVtL2RvY2tlci5zZXJ2aWNlLmQvaHR0cF9wcm94eS5jb25mCgpET0NLRVJfSFRUUFNfUFJPWFlfQ09ORj0vZXRjL3N5c3RlbWQvc3lzdGVtL2RvY2tlci5zZXJ2aWNlLmQvaHR0cHNfcHJveHkuY29uZgoKRE9DS0VSX05PX1BST1hZX0NPTkY9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9kb2NrZXIuc2VydmljZS5kL25vX3Byb3h5LmNvbmYKCkRPQ0tFUl9SRVNUQVJUPTAKCkJBU0hfUkM9L2V0Yy9iYXNocmMKCm1rZGlyIC1wIC9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZAoKaWYgWyAtbiAiJEhUVFBfUFJPWFkiIF07IHRoZW4KICAgIGNhdCA8PEVPRiB8IHNlZCAicy9eICovLyIgPiAkRE9DS0VSX0hUVFBfUFJPWFlfQ09ORgogICAgW1NlcnZpY2VdCiAgICBFbnZpcm9ubWVudD1IVFRQX1BST1hZPSRIVFRQX1BST1hZCkVPRgoKICAgIERPQ0tFUl9SRVNUQVJUPTEKCiAgICBpZiBbIC1mICIkQkFTSF9SQyIgXTsgdGhlbgogICAgICAgIGVjaG8gImRlY2xhcmUgLXggaHR0cF9wcm94eT0kSFRUUF9QUk9YWSIgPj4gJEJBU0hfUkMKICAgIGVsc2UKICAgICAgICBlY2hvICJGaWxlICRCQVNIX1JDIGRvZXMgbm90IGV4aXN0LCBub3Qgc2V0dGluZyBodHRwX3Byb3h5IgogICAgZmkKZmkKCmlmIFsgLW4gIiRIVFRQU19QUk9YWSIgXTsgdGhlbgogICAgY2F0IDw8RU9GIHwgc2VkICJzL14gKi8vIiA+ICRET0NLRVJfSFRUUFNfUFJPWFlfQ09ORgogICAgW1NlcnZpY2VdCiAgICBFbnZpcm9ubWVudD1IVFRQU19QUk9YWT0kSFRUUFNfUFJPWFkKRU9GCgogICAgRE9DS0VSX1JFU1RBUlQ9MQoKICAgIGlmIFsgLWYgIiRCQVNIX1JDIiBdOyB0aGVuCiAgICAgICAgZWNobyAiZGVjbGFyZSAteCBodHRwc19wcm94eT0kSFRUUFNfUFJPWFkiID4+ICRCQVNIX1JDCiAgICBlbHNlCiAgICAgICAgZWNobyAiRmlsZSAkQkFTSF9SQyBkb2VzIG5vdCBleGlzdCwgbm90IHNldHRpbmcgaHR0cHNfcHJveHkiCiAgICBmaQpmaQoKaWYgWyAtbiAiJE5PX1BST1hZIiBdOyB0aGVuCiAgICBjYXQgPDxFT0YgfCBzZWQgInMvXiAqLy8iID4gJERPQ0tFUl9OT19QUk9YWV9DT05GCiAgICBbU2VydmljZV0KICAgIEVudmlyb25tZW50PU5PX1BST1hZPSROT19QUk9YWQpFT0YKCiAgICBET0NLRVJfUkVTVEFSVD0xCgogICAgaWYgWyAtZiAiJEJBU0hfUkMiIF07IHRoZW4KICAgICAgICBlY2hvICJkZWNsYXJlIC14IG5vX3Byb3h5PSROT19QUk9YWSIgPj4gJEJBU0hfUkMKICAgIGVsc2UKICAgICAgICBlY2hvICJGaWxlICRCQVNIX1JDIGRvZXMgbm90IGV4aXN0LCBub3Qgc2V0dGluZyBub19wcm94eSIKICAgIGZpCmZpCgppZiBbICIkRE9DS0VSX1JFU1RBUlQiIC1lcSAxIF07IHRoZW4KICAgIHN5c3RlbWN0bCBkYWVtb24tcmVsb2FkCiAgICBzeXN0ZW1jdGwgLS1uby1ibG9jayByZXN0YXJ0IGRvY2tlci5zZXJ2aWNlCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCiMgbWFrZSBzdXJlIHdlIHBpY2sgdXAgYW55IG1vZGlmaWVkIHVuaXQgZmlsZXMKc3lzdGVtY3RsIGRhZW1vbi1yZWxvYWQKCmVjaG8gInN0YXJ0aW5nIHNlcnZpY2VzIgpmb3Igc2VydmljZSBpbiBldGNkIGRvY2tlciBrdWJlLWFwaXNlcnZlciBrdWJlbGV0OyBkbwogICAgZWNobyAiYWN0aXZhdGluZyBzZXJ2aWNlICRzZXJ2aWNlIgogICAgc3lzdGVtY3RsIGVuYWJsZSAkc2VydmljZQogICAgc3lzdGVtY3RsIC0tbm8tYmxvY2sgc3RhcnQgJHNlcnZpY2UKZG9uZQoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbICIkTkVUV09SS19EUklWRVIiICE9ICJmbGFubmVsIiBdOyB0aGVuCiAgICBleGl0IDAKZmkKCi4gL2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCkZMQU5ORUxfSlNPTj0vZXRjL3N5c2NvbmZpZy9mbGFubmVsLW5ldHdvcmsuanNvbgpGTEFOTkVMRF9DT05GSUc9L2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCnNlZCAtaSAnCiAgICAvXkZMQU5ORUxfRVRDRD0vIHMvPS4qLz0iaHR0cDpcL1wvMTI3LjAuMC4xOjIzNzkiLwonIC9ldGMvc3lzY29uZmlnL2ZsYW5uZWxkCgojIEdlbmVyYXRlIGEgZmxhbm5lbCBjb25maWd1cmF0aW9uIHRoYXQgd2Ugd2lsbAojIHN0b3JlIGludG8gZXRjZCB1c2luZyBjdXJsLgpjYXQgPiAkRkxBTk5FTF9KU09OIDw8RU9GCnsKICAiTmV0d29yayI6ICIkRkxBTk5FTF9ORVRXT1JLX0NJRFIiLAogICJTdWJuZXRsZW4iOiAkRkxBTk5FTF9ORVRXT1JLX1NVQk5FVExFTiwKICAiQmFja2VuZCI6IHsKICAgICJUeXBlIjogIiRGTEFOTkVMX0JBQ0tFTkQiCiAgfQp9CkVPRgoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbICIkTkVUV09SS19EUklWRVIiICE9ICJmbGFubmVsIiBdOyB0aGVuCiAgICBleGl0IDAKZmkKQ0VSVF9ESVI9L3Nydi9rdWJlcm5ldGVzClBST1RPQ09MPWh0dHBzCkZMQU5ORUxfT1BUSU9OUz0iLWV0Y2QtY2FmaWxlICRDRVJUX0RJUi9jYS5jcnQgXAotZXRjZC1jZXJ0ZmlsZSAkQ0VSVF9ESVIvc2VydmVyLmNydCBcCi1ldGNkLWtleWZpbGUgJENFUlRfRElSL3NlcnZlci5rZXkiCkVUQ0RfQ1VSTF9PUFRJT05TPSItLWNhY2VydCAkQ0VSVF9ESVIvY2EuY3J0IFwKLS1jZXJ0ICRDRVJUX0RJUi9zZXJ2ZXIuY3J0IC0ta2V5ICRDRVJUX0RJUi9zZXJ2ZXIua2V5IgpGTEFOTkVMRF9DT05GSUc9L2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCmlmIFsgIiRUTFNfRElTQUJMRUQiID0gIlRydWUiIF07IHRoZW4KICAgIFBST1RPQ09MPWh0dHAKICAgIEZMQU5ORUxfT1BUSU9OUz0iIgogICAgRVRDRF9DVVJMX09QVElPTlM9IiIKZmkKCnNlZCAtaSAnL0ZMQU5ORUxfT1BUSU9OUy8nZCAkRkxBTk5FTERfQ09ORklHCgpjYXQgPj4gJEZMQU5ORUxEX0NPTkZJRyA8PEVPRgpGTEFOTkVMX09QVElPTlM9IiRGTEFOTkVMX09QVElPTlMiCkVPRgoKLiAkRkxBTk5FTERfQ09ORklHCgpGTEFOTkVMX0NPTkZJR19CSU49L3Vzci9sb2NhbC9iaW4vZmxhbm5lbC1jb25maWcKRkxBTk5FTF9DT05GSUdfU0VSVklDRT0vZXRjL3N5c3RlbWQvc3lzdGVtL2ZsYW5uZWwtY29uZmlnLnNlcnZpY2UKRkxBTk5FTF9KU09OPS9ldGMvc3lzY29uZmlnL2ZsYW5uZWwtbmV0d29yay5qc29uCgplY2hvICJjcmVhdGluZyAkRkxBTk5FTF9DT05GSUdfQklOIgpjYXQgPiAkRkxBTk5FTF9DT05GSUdfQklOIDw8RU9GCiMhL2Jpbi9zaAoKaWYgISBbIC1mICIkRkxBTk5FTF9KU09OIiBdOyB0aGVuCiAgZWNobyAiRVJST1I6IG1pc3NpbmcgbmV0d29yayBjb25maWd1cmF0aW9uIGZpbGUiID4mMgogIGV4aXQgMQpmaQoKaWYgISBbICIkRkxBTk5FTF9FVENEIiBdICYmIFsgIiRGTEFOTkVMX0VUQ0RfS0VZIiBdOyB0aGVuCiAgZWNobyAiRVJST1I6IG1pc3NpbmcgcmVxdWlyZWQgY29uZmlndXJhdGlvbiIgPiYyCiAgZXhpdCAxCmZpCgplY2hvICJjcmVhdGluZyBmbGFubmVsZCBjb25maWcgaW4gZXRjZCIKd2hpbGUgISBjdXJsIC1zZiAtTCAkRVRDRF9DVVJMX09QVElPTlMgXAogICAgICAgICRGTEFOTkVMX0VUQ0QvdjIva2V5cyR7RkxBTk5FTF9FVENEX0tFWX0vY29uZmlnIFwKICAgICAgICAtWCBQVVQgLS1kYXRhLXVybGVuY29kZSB2YWx1ZUAke0ZMQU5ORUxfSlNPTn07IGRvCiAgICBlY2hvICJ3YWl0aW5nIGZvciBldGNkIgogICAgc2xlZXAgMQpkb25lCkVPRgoKY2F0ID4gJEZMQU5ORUxfQ09ORklHX1NFUlZJQ0UgPDxFT0YKW1VuaXRdCkFmdGVyPWV0Y2Quc2VydmljZQpSZXF1aXJlcz1ldGNkLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnRGaWxlPS9ldGMvc3lzY29uZmlnL2ZsYW5uZWxkCkV4ZWNTdGFydD0kRkxBTk5FTF9DT05GSUdfQklOCgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCgpjaG93biByb290OnJvb3QgJEZMQU5ORUxfQ09ORklHX0JJTgpjaG1vZCAwNzU1ICRGTEFOTkVMX0NPTkZJR19CSU4KCmNob3duIHJvb3Q6cm9vdCAkRkxBTk5FTF9DT05GSUdfU0VSVklDRQpjaG1vZCAwNjQ0ICRGTEFOTkVMX0NPTkZJR19TRVJWSUNFCgpzeXN0ZW1jdGwgZW5hYmxlIGZsYW5uZWwtY29uZmlnCnN5c3RlbWN0bCBzdGFydCAtLW5vLWJsb2NrIGZsYW5uZWwtY29uZmlnCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgIiRORVRXT1JLX0RSSVZFUiIgIT0gImZsYW5uZWwiIF07IHRoZW4KICAgIGV4aXQgMApmaQoKRkxBTk5FTF9ET0NLRVJfQlJJREdFX0JJTj0vdXNyL2xvY2FsL2Jpbi9mbGFubmVsLWRvY2tlci1icmlkZ2UKRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9mbGFubmVsLWRvY2tlci1icmlkZ2Uuc2VydmljZQpET0NLRVJfRkxBTk5FTF9DT05GPS9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZC9mbGFubmVsLmNvbmYKRkxBTk5FTF9ET0NLRVJfQlJJREdFX0NPTkY9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9mbGFubmVsZC5zZXJ2aWNlLmQvZmxhbm5lbC1kb2NrZXItYnJpZGdlLmNvbmYKCm1rZGlyIC1wIC9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZApta2RpciAtcCAvZXRjL3N5c3RlbWQvc3lzdGVtL2ZsYW5uZWxkLnNlcnZpY2UuZAoKY2F0ID4+ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQklOIDw8RU9GMQojIS9iaW4vc2gKCmlmICEgWyAiXCRGTEFOTkVMX1NVQk5FVCIgXSAmJiBbICJcJEZMQU5ORUxfTVRVIiBdIDsgdGhlbgogIGVjaG8gIkVSUk9SOiBtaXNzaW5nIHJlcXVpcmVkIGVudmlyb25tZW50IHZhcmlhYmxlcy4iID4mMgogIGV4aXQgMQpmaQoKbWtkaXIgLXAgL3J1bi9mbGFubmVsLwpjYXQgPiAvcnVuL2ZsYW5uZWwvZG9ja2VyIDw8RU9GMgpET0NLRVJfTkVUV09SS19PUFRJT05TPSItLWJpcD1cJEZMQU5ORUxfU1VCTkVUIC0tbXR1PVwkRkxBTk5FTF9NVFUiCkVPRjIKRU9GMQoKY2hvd24gcm9vdDpyb290ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQklOCmNobW9kIDA3NTUgJEZMQU5ORUxfRE9DS0VSX0JSSURHRV9CSU4KCmNhdCA+PiAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UgPDxFT0YKW1VuaXRdCkFmdGVyPWZsYW5uZWxkLnNlcnZpY2UKQmVmb3JlPWRvY2tlci5zZXJ2aWNlClJlcXVpcmVzPWZsYW5uZWxkLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnRGaWxlPS9ydW4vZmxhbm5lbC9zdWJuZXQuZW52CkV4ZWNTdGFydD0vdXNyL2xvY2FsL2Jpbi9mbGFubmVsLWRvY2tlci1icmlkZ2UKCltJbnN0YWxsXQpXYW50ZWRCeT1kb2NrZXIuc2VydmljZQpFT0YKCmNob3duIHJvb3Q6cm9vdCAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UKY2htb2QgMDY0NCAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UKCmNhdCA+PiAkRE9DS0VSX0ZMQU5ORUxfQ09ORiA8PEVPRgpbVW5pdF0KUmVxdWlyZXM9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKQWZ0ZXI9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKCltTZXJ2aWNlXQpFbnZpcm9ubWVudEZpbGU9L3J1bi9mbGFubmVsL2RvY2tlcgpFT0YKCmNob3duIHJvb3Q6cm9vdCAkRE9DS0VSX0ZMQU5ORUxfQ09ORgpjaG1vZCAwNjQ0ICRET0NLRVJfRkxBTk5FTF9DT05GCgpjYXQgPj4gJEZMQU5ORUxfRE9DS0VSX0JSSURHRV9DT05GIDw8RU9GCltVbml0XQpSZXF1aXJlcz1mbGFubmVsLWRvY2tlci1icmlkZ2Uuc2VydmljZQpCZWZvcmU9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKCltJbnN0YWxsXQpBbHNvPWZsYW5uZWwtZG9ja2VyLWJyaWRnZS5zZXJ2aWNlCkVPRgoKY2hvd24gcm9vdDpyb290ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQ09ORgpjaG1vZCAwNjQ0ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQ09ORgoKZWNobyAiYWN0aXZhdGluZyBzZXJ2aWNlIGZsYW5uZWxkIgpzeXN0ZW1jdGwgZW5hYmxlIGZsYW5uZWxkCnN5c3RlbWN0bCAtLW5vLWJsb2NrIHN0YXJ0IGZsYW5uZWxkCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCiMgdGhpcyBzZXJ2aWNlIHJlcXVpcmVkIGJlY2F1c2UgZG9ja2VyIHdpbGwgc3RhcnQgb25seSBhZnRlciBjbG91ZCBpbml0IHdhcyBmaW5pc2hlZAojIGR1ZSBzZXJ2aWNlIGRlcGVuZGVuY2llcyBhdCBGZWRvcmEgQXRvbWljIChkb2NrZXIgPC0gZG9ja2VyLXN0b3JhZ2Utc2V0dXAgPC0gY2xvdWQtZmluYWwpCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgpLVUJFX1NZU1RFTV9KU09OPS9zcnYva3ViZXJuZXRlcy9rdWJlLXN5c3RlbS1uYW1lc3BhY2UuanNvbgpbIC1mICR7S1VCRV9TWVNURU1fSlNPTn0gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1NZU1RFTV9KU09OIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fSlNPTn0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1NZU1RFTV9KU09OfQp7CiAgImFwaVZlcnNpb24iOiAidjEiLAogICJraW5kIjogIk5hbWVzcGFjZSIsCiAgIm1ldGFkYXRhIjogewogICAgIm5hbWUiOiAia3ViZS1zeXN0ZW0iCiAgfQp9CkVPRgp9CgpLVUJFX1NZU1RFTV9CSU49L3Vzci9sb2NhbC9iaW4va3ViZS1zeXN0ZW0tbmFtZXNwYWNlClsgLWYgJHtLVUJFX1NZU1RFTV9CSU59IF0gfHwgewogICAgZWNobyAiV3JpdGluZyBGaWxlOiAkS1VCRV9TWVNURU1fQklOIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fQklOfSkKICAgIGNhdCA8PCBFT0YgPiAke0tVQkVfU1lTVEVNX0JJTn0KIyEvYmluL3NoCnVudGlsIGN1cmwgLXNmICJodHRwOi8vMTI3LjAuMC4xOjgwODAvaGVhbHRoeiIKZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCgojY2hlY2sgZm9yIGV4aXN0ZW5jZSBvZiBuYW1lc3BhY2UKL3Vzci9iaW4va3ViZWN0bCBnZXQgbmFtZXNwYWNlIGt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMva3ViZS1zeXN0ZW0tbmFtZXNwYWNlLmpzb24KZmkKRU9GCn0KCktVQkVfU1lTVEVNX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9rdWJlLXN5c3RlbS1uYW1lc3BhY2Uuc2VydmljZQpbIC1mICR7S1VCRV9TWVNURU1fU0VSVklDRX0gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1NZU1RFTV9TRVJWSUNFIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fU0VSVklDRX0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1NZU1RFTV9TRVJWSUNFfQpbVW5pdF0KQWZ0ZXI9a3ViZWxldC5zZXJ2aWNlClJlcXVpcmVzPWt1YmVsZXQuc2VydmljZQoKW1NlcnZpY2VdClR5cGU9b25lc2hvdApFbnZpcm9ubWVudD1IT01FPS9yb290CkVudmlyb25tZW50RmlsZT0tL2V0Yy9rdWJlcm5ldGVzL2NvbmZpZwpFeGVjU3RhcnQ9JHtLVUJFX1NZU1RFTV9CSU59CgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfU1lTVEVNX0JJTn0KY2htb2QgMDc1NSAke0tVQkVfU1lTVEVNX0JJTn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfU1lTVEVNX1NFUlZJQ0V9CmNobW9kIDA2NDQgJHtLVUJFX1NZU1RFTV9TRVJWSUNFfQoKc3lzdGVtY3RsIGVuYWJsZSBrdWJlLXN5c3RlbS1uYW1lc3BhY2UKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sga3ViZS1zeXN0ZW0tbmFtZXNwYWNlCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLW4gIiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfSIgXTsgdGhlbgogICAgSFlQRVJLVUJFX0lNQUdFPSIke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0vZ29vZ2xlX2NvbnRhaW5lcnMvaHlwZXJrdWJlOiR7S1VCRV9WRVJTSU9OfSIKZWxzZQogICAgSFlQRVJLVUJFX0lNQUdFPSJnY3IuaW8vZ29vZ2xlX2NvbnRhaW5lcnMvaHlwZXJrdWJlOiR7S1VCRV9WRVJTSU9OfSIKZmkKCiMgdmFycyBhbHNvIHVzZWQgYnkgdGhlIEt1YmVybmV0ZXMgY29uZmlnIGZpbGVzCnVuc2V0IEtVQkVfQVBJX1BPUlQKdW5zZXQgS1VCRV9BTExPV19QUklWCgojIHRoaXMgZnVuY3Rpb24gZ2VuZXJhdGUgYSBsaXN0IG9mIGFyZ3MgKG9uZSBwZXIgbGluZSkgZnJvbSBhIGxpc3Qgb2YgcG9zc2libHkgbmVzdGVkIGFyZ3MKIyB0aGUgZmlyc3QgcGFyYW1ldGVyIGlzIHRoZSBwcmVmaXggdG8gYmUgYWRkZWQgYmVmb3JlIGVhY2ggYXJnCiMgZW1wdHkgYXJncyBhcmUgaWdub3JlZApnZW5lcmF0ZV9wb2RfYXJncygpIHsKICAgIHByZWZpeD0kMQoKICAgIGZvciB2YXIgaW4gIiR7QDoyfSIgOyBkbwogICAgICAgIGZvciBhcmcgaW4gIiR2YXIiIDsgZG8KICAgICAgICAgICAgZWNobyAiJHByZWZpeCRhcmciCiAgICAgICAgZG9uZQogICAgZG9uZQp9CgoKaW5pdF90ZW1wbGF0ZXMgKCkgewogICAgLiAvZXRjL2t1YmVybmV0ZXMvY29uZmlnCgogICAgLiAvZXRjL2t1YmVybmV0ZXMvY29udHJvbGxlci1tYW5hZ2VyCgogICAgbG9jYWwgVEVNUExBVEU9L2V0Yy9rdWJlcm5ldGVzL21hbmlmZXN0cy9rdWJlLWNvbnRyb2xsZXItbWFuYWdlci55YW1sCiAgICBbIC1mICR7VEVNUExBVEV9IF0gfHwgewogICAgICAgIGVjaG8gIlRFTVBMQVRFOiAkVEVNUExBVEUiCiAgICAgICAgbWtkaXIgLXAgJChkaXJuYW1lICR7VEVNUExBVEV9KQogICAgICAgIGNhdCA8PCBFT0YgPiAke1RFTVBMQVRFfQphcGlWZXJzaW9uOiB2MQpraW5kOiBQb2QKbWV0YWRhdGE6CiAgbmFtZToga3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICAgIGltYWdlOiAke0hZUEVSS1VCRV9JTUFHRX0KICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gY29udHJvbGxlci1tYW5hZ2VyCiAgICAtIC0tbGVhZGVyLWVsZWN0PXRydWUKJChnZW5lcmF0ZV9wb2RfYXJncyAiICAgIC0gIiAkS1VCRV9MT0dUT1NUREVSUiAkS1VCRV9MT0dfTEVWRUwgJEtVQkVfTUFTVEVSICRLVUJFX0NPTlRST0xMRVJfTUFOQUdFUl9BUkdTKQogICAgbGl2ZW5lc3NQcm9iZToKICAgICAgaHR0cEdldDoKICAgICAgICBob3N0OiAxMjcuMC4wLjEKICAgICAgICBwYXRoOiAvaGVhbHRoegogICAgICAgIHBvcnQ6IDEwMjUyCiAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDE1CiAgICAgIHRpbWVvdXRTZWNvbmRzOiAxCiAgICB2b2x1bWVNb3VudHM6CiAgICAtIG1vdW50UGF0aDogL2V0Yy9zc2wvY2VydHMKICAgICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAgICAgcmVhZE9ubHk6IHRydWUKICAgIC0gbW91bnRQYXRoOiAvc3J2L2t1YmVybmV0ZXMKICAgICAgbmFtZToga3ViZXJuZXRlcy1jb25maWcKICAgICAgcmVhZE9ubHk6IHRydWUKICAgIC0gbW91bnRQYXRoOiAvZXRjL3N5c2NvbmZpZwogICAgICBuYW1lOiBzeXNjb25maWcKICAgICAgcmVhZE9ubHk6IHRydWUKICB2b2x1bWVzOgogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC9ldGMvc3NsL2NlcnRzCiAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC9zcnYva3ViZXJuZXRlcwogICAgbmFtZToga3ViZXJuZXRlcy1jb25maWcKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvZXRjL3N5c2NvbmZpZwogICAgbmFtZTogc3lzY29uZmlnCkVPRgogICAgfQoKICAgIC4gL2V0Yy9rdWJlcm5ldGVzL3NjaGVkdWxlcgoKICAgIGxvY2FsIFRFTVBMQVRFPS9ldGMva3ViZXJuZXRlcy9tYW5pZmVzdHMva3ViZS1zY2hlZHVsZXIueWFtbAogICAgWyAtZiAke1RFTVBMQVRFfSBdIHx8IHsKICAgICAgICBlY2hvICJURU1QTEFURTogJFRFTVBMQVRFIgogICAgICAgIG1rZGlyIC1wICQoZGlybmFtZSAke1RFTVBMQVRFfSkKICAgICAgICBjYXQgPDwgRU9GID4gJHtURU1QTEFURX0KYXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgICBpbWFnZTogJHtIWVBFUktVQkVfSU1BR0V9CiAgICBjb21tYW5kOgogICAgLSAvaHlwZXJrdWJlCiAgICAtIHNjaGVkdWxlcgogICAgLSAtLWxlYWRlci1lbGVjdD10cnVlCiQoZ2VuZXJhdGVfcG9kX2FyZ3MgIiAgICAtICIgJEtVQkVfTE9HVE9TVERFUlIgJEtVQkVfTE9HX0xFVkVMICRLVUJFX01BU1RFUiAkS1VCRV9TQ0hFRFVMRVJfQVJHUykKICAgIGxpdmVuZXNzUHJvYmU6CiAgICAgIGh0dHBHZXQ6CiAgICAgICAgaG9zdDogMTI3LjAuMC4xCiAgICAgICAgcGF0aDogL2hlYWx0aHoKICAgICAgICBwb3J0OiAxMDI1MQogICAgICBpbml0aWFsRGVsYXlTZWNvbmRzOiAxNQogICAgICB0aW1lb3V0U2Vjb25kczogMQogICAgdm9sdW1lTW91bnRzOgogICAgLSBtb3VudFBhdGg6IC9ldGMvc3NsL2NlcnRzCiAgICAgIG5hbWU6IHNzbC1jZXJ0cy1ob3N0CiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAtIG1vdW50UGF0aDogL3Nydi9rdWJlcm5ldGVzCiAgICAgIG5hbWU6IGt1YmVybmV0ZXMtY29uZmlnCiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAtIG1vdW50UGF0aDogL2V0Yy9zeXNjb25maWcKICAgICAgbmFtZTogc3lzY29uZmlnCiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgdm9sdW1lczoKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvc3J2L2t1YmVybmV0ZXMKICAgIG5hbWU6IGt1YmVybmV0ZXMtY29uZmlnCiAgLSBob3N0UGF0aDoKICAgICAgcGF0aDogL2V0Yy9zeXNjb25maWcKICAgIG5hbWU6IHN5c2NvbmZpZwpFT0YKICAgIH0KfQoKaW5pdF90ZW1wbGF0ZXMKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKaWYgWyAtbiAiJHtJTlNFQ1VSRV9SRUdJU1RSWV9VUkx9IiBdOyB0aGVuCiAgICBIWVBFUktVQkVfSU1BR0U9IiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfS9nb29nbGVfY29udGFpbmVycy9oeXBlcmt1YmU6JHtLVUJFX1ZFUlNJT059IgplbHNlCiAgICBIWVBFUktVQkVfSU1BR0U9Imdjci5pby9nb29nbGVfY29udGFpbmVycy9oeXBlcmt1YmU6JHtLVUJFX1ZFUlNJT059IgpmaQoKaW5pdF90ZW1wbGF0ZXMgKCkgewogICAgbG9jYWwgVEVNUExBVEU9L2V0Yy9rdWJlcm5ldGVzL21hbmlmZXN0cy9rdWJlLXByb3h5LnlhbWwKICAgIFsgLWYgJHtURU1QTEFURX0gXSB8fCB7CiAgICAgICAgZWNobyAiVEVNUExBVEU6ICRURU1QTEFURSIKICAgICAgICBta2RpciAtcCAkKGRpcm5hbWUgJHtURU1QTEFURX0pCiAgICAgICAgY2F0IDw8IEVPRiA+ICR7VEVNUExBVEV9CmFwaVZlcnNpb246IHYxCmtpbmQ6IFBvZAptZXRhZGF0YToKICBuYW1lOiBrdWJlLXByb3h5CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtcHJveHkKICAgIGltYWdlOiAke0hZUEVSS1VCRV9JTUFHRX0KICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1tYXN0ZXI9aHR0cDovLzEyNy4wLjAuMTo4MDgwCiAgICAtIC0tbG9ndG9zdGRlcnI9dHJ1ZQogICAgLSAtLXY9MAogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCkVPRgogICAgfQp9Cgppbml0X3RlbXBsYXRlcwoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgojIHRoaXMgc2VydmljZSBpcyByZXF1aXJlZCBiZWNhdXNlIGRvY2tlciB3aWxsIHN0YXJ0IG9ubHkgYWZ0ZXIgY2xvdWQgaW5pdCB3YXMgZmluaXNoZWQKIyBkdWUgdG8gdGhlIHNlcnZpY2UgZGVwZW5kZW5jaWVzIGluIEZlZG9yYSBBdG9taWMgKGRvY2tlciA8LSBkb2NrZXItc3RvcmFnZS1zZXR1cCA8LSBjbG91ZC1maW5hbCkKCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbIC1uICIke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0iIF07IHRoZW4KICAgIEtVQkVVSV9JTUFHRT0iJHtJTlNFQ1VSRV9SRUdJU1RSWV9VUkx9L2dvb2dsZV9jb250YWluZXJzL2t1YmUtdWk6djQiCmVsc2UKICAgIEtVQkVVSV9JTUFHRT0iZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2t1YmUtdWk6djQiCmZpCgpLVUJFX1VJX1JDPS9zcnYva3ViZXJuZXRlcy9tYW5pZmVzdHMva3ViZS11aS1yYy55YW1sCgpbIC1mICR7S1VCRV9VSV9SQ30gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1VJX1JDIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9VSV9SQ30pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX1JDfQphcGlWZXJzaW9uOiB2MQpraW5kOiBSZXBsaWNhdGlvbkNvbnRyb2xsZXIKbWV0YWRhdGE6CiAgbmFtZToga3ViZS11aS12NAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBsYWJlbHM6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICB2ZXJzaW9uOiB2NAogICAga3ViZXJuZXRlcy5pby9jbHVzdGVyLXNlcnZpY2U6ICJ0cnVlIgpzcGVjOgogIHJlcGxpY2FzOiAxCiAgc2VsZWN0b3I6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICB2ZXJzaW9uOiB2NAogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICAgICAgdmVyc2lvbjogdjQKICAgICAgICBrdWJlcm5ldGVzLmlvL2NsdXN0ZXItc2VydmljZTogInRydWUiCiAgICBzcGVjOgogICAgICBjb250YWluZXJzOgogICAgICAtIG5hbWU6IGt1YmUtdWkKICAgICAgICBpbWFnZTogJHtLVUJFVUlfSU1BR0V9CiAgICAgICAgcmVzb3VyY2VzOgogICAgICAgICAgbGltaXRzOgogICAgICAgICAgICBjcHU6IDEwMG0KICAgICAgICAgICAgbWVtb3J5OiA1ME1pCiAgICAgICAgcG9ydHM6CiAgICAgICAgLSBjb250YWluZXJQb3J0OiA4MDgwCkVPRgp9CgpLVUJFX1VJX1NWQz0vc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktc3ZjLnlhbWwKWyAtZiAke0tVQkVfVUlfU1ZDfSBdIHx8IHsKICAgIGVjaG8gIldyaXRpbmcgRmlsZTogJEtVQkVfVUlfU1ZDIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9VSV9TVkN9KQogICAgY2F0IDw8IEVPRiA+ICR7S1VCRV9VSV9TVkN9CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2UKbWV0YWRhdGE6CiAgbmFtZToga3ViZS11aQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBsYWJlbHM6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICBrdWJlcm5ldGVzLmlvL2NsdXN0ZXItc2VydmljZTogInRydWUiCiAgICBrdWJlcm5ldGVzLmlvL25hbWU6ICJLdWJlVUkiCnNwZWM6CiAgc2VsZWN0b3I6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgcG9ydHM6CiAgLSBwb3J0OiA4MAogICAgdGFyZ2V0UG9ydDogODA4MApFT0YKfQoKS1VCRV9VSV9CSU49L3Vzci9sb2NhbC9iaW4va3ViZS11aQpbIC1mICR7S1VCRV9VSV9CSU59IF0gfHwgewogICAgZWNobyAiV3JpdGluZyBGaWxlOiAkS1VCRV9VSV9CSU4iCiAgICBta2RpciAtcCAkKGRpcm5hbWUgJHtLVUJFX1VJX0JJTn0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX0JJTn0KIyEvYmluL3NoCnVudGlsIGN1cmwgLXNmICJodHRwOi8vMTI3LjAuMC4xOjgwODAvaGVhbHRoeiIKZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCgojZWNobyBjaGVjayBmb3IgZXhpc3RlbmNlIG9mIGt1YmUtdWktdjQgcmVwbGljYXRpb24gY29udHJvbGxlcgovdXNyL2Jpbi9rdWJlY3RsIGdldCByYyBrdWJlLXVpLXY0IC0tbmFtZXNwYWNlPWt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktcmMueWFtbCAtLW5hbWVzcGFjZT1rdWJlLXN5c3RlbQpmaQoKI2VjaG8gY2hlY2sgZm9yIGV4aXN0ZW5jZSBvZiBrdWJlLXVpIHNlcnZpY2UKL3Vzci9iaW4va3ViZWN0bCBnZXQgc2VydmljZSBrdWJlLXVpIC0tbmFtZXNwYWNlPWt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktc3ZjLnlhbWwgLS1uYW1lc3BhY2U9a3ViZS1zeXN0ZW0KZmkKRU9GCn0KCktVQkVfVUlfU0VSVklDRT0vZXRjL3N5c3RlbWQvc3lzdGVtL2t1YmUtdWkuc2VydmljZQpbIC1mICR7S1VCRV9VSV9TRVJWSUNFfSBdIHx8IHsKICAgIGVjaG8gIldyaXRpbmcgRmlsZTogJEtVQkVfVUlfU0VSVklDRSIKICAgIG1rZGlyIC1wICQoZGlybmFtZSAke0tVQkVfVUlfU0VSVklDRX0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX1NFUlZJQ0V9CltVbml0XQpBZnRlcj1rdWJlLXN5c3RlbS1uYW1lc3BhY2Uuc2VydmljZQpSZXF1aXJlcz1rdWJlbGV0LnNlcnZpY2UKV2FudHM9a3ViZS1zeXN0ZW0tbmFtZXNwYWNlLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnQ9SE9NRT0vcm9vdApFbnZpcm9ubWVudEZpbGU9LS9ldGMva3ViZXJuZXRlcy9jb25maWcKRXhlY1N0YXJ0PSR7S1VCRV9VSV9CSU59CgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfVUlfQklOfQpjaG1vZCAwNzU1ICR7S1VCRV9VSV9CSU59CgpjaG93biByb290OnJvb3QgJHtLVUJFX1VJX1NFUlZJQ0V9CmNobW9kIDA2NDQgJHtLVUJFX1VJX1NFUlZJQ0V9CgpzeXN0ZW1jdGwgZW5hYmxlIGt1YmUtdWkKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sga3ViZS11aQoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKI2Nsb3VkLWNvbmZpZwptZXJnZV9ob3c6IGRpY3QocmVjdXJzZV9hcnJheSkrbGlzdChhcHBlbmQpCndyaXRlX2ZpbGVzOgogIC0gcGF0aDogL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3JlcGxpY2F0aW9uLWNvbnRyb2xsZXIueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFJlcGxpY2F0aW9uQ29udHJvbGxlcgogICAgICBtZXRhZGF0YToKICAgICAgICBuYW1lOiBuZ2lueC1jb250cm9sbGVyCiAgICAgIHNwZWM6CiAgICAgICAgcmVwbGljYXM6IDIKICAgICAgICAjIHNlbGVjdG9yIGlkZW50aWZpZXMgdGhlIHNldCBvZiBwb2RzIHRoYXQgdGhpcwogICAgICAgICMgcmVwbGljYXRpb24gY29udHJvbGxlciBpcyByZXNwb25zaWJsZSBmb3IgbWFuYWdpbmcKICAgICAgICBzZWxlY3RvcjoKICAgICAgICAgIG5hbWU6IG5naW54CiAgICAgICAgIyB0ZW1wbGF0ZSBkZWZpbmVzIHRoZSAnY29va2llIGN1dHRlcicgdXNlZCBmb3IgY3JlYXRpbmcKICAgICAgICAjIG5ldyBwb2RzIHdoZW4gbmVjZXNzYXJ5CiAgICAgICAgdGVtcGxhdGU6CiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgbGFiZWxzOgogICAgICAgICAgICAgICMgSW1wb3J0YW50OiB0aGVzZSBsYWJlbHMgbmVlZCB0byBtYXRjaCB0aGUgc2VsZWN0b3IgYWJvdmUKICAgICAgICAgICAgICAjIFRoZSBhcGkgc2VydmVyIGVuZm9yY2VzIHRoaXMgY29uc3RyYWludC4KICAgICAgICAgICAgICBhcHA6IG5naW54CiAgICAgICAgICBzcGVjOgogICAgICAgICAgICBjb250YWluZXJzOgogICAgICAgICAgICAgIC0gbmFtZTogbmdpbngKICAgICAgICAgICAgICAgIGltYWdlOiBuZ2lueAogICAgICAgICAgICAgICAgcG9ydHM6CiAgICAgICAgICAgICAgICAgIC0gY29udGFpbmVyUG9ydDogODAKCiAgLSBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvcG9kLW5naW54LXdpdGgtbGFiZWwueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFBvZAogICAgICBtZXRhZGF0YToKICAgICAgICBuYW1lOiBuZ2lueAogICAgICAgIGxhYmVsczoKICAgICAgICAgIGFwcDogbmdpbngKICAgICAgc3BlYzoKICAgICAgICBjb250YWluZXJzOgogICAgICAgIC0gbmFtZTogbmdpbngKICAgICAgICAgIGltYWdlOiBuZ2lueAogICAgICAgICAgcG9ydHM6CiAgICAgICAgICAtIGNvbnRhaW5lclBvcnQ6IDgwCgogIC0gcGF0aDogL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3NlcnZpY2UueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFNlcnZpY2UKICAgICAgbWV0YWRhdGE6CiAgICAgICAgbmFtZTogbmdpbngtc2VydmljZQogICAgICBzcGVjOgogICAgICAgIHBvcnRzOgogICAgICAgIC0gcG9ydDogODAwMCAjIHRoZSBwb3J0IHRoYXQgdGhpcyBzZXJ2aWNlIHNob3VsZCBzZXJ2ZSBvbgogICAgICAgICAgIyB0aGUgY29udGFpbmVyIG9uIGVhY2ggcG9kIHRvIGNvbm5lY3QgdG8sIGNhbiBiZSBhIG5hbWUKICAgICAgICAgICMgKGUuZy4gJ3d3dycpIG9yIGEgbnVtYmVyIChlLmcuIDgwKQogICAgICAgICAgdGFyZ2V0UG9ydDogODAKICAgICAgICAgIHByb3RvY29sOiBUQ1AKICAgICAgICAjIGp1c3QgbGlrZSB0aGUgc2VsZWN0b3IgaW4gdGhlIHJlcGxpY2F0aW9uIGNvbnRyb2xsZXIsCiAgICAgICAgIyBidXQgdGhpcyB0aW1lIGl0IGlkZW50aWZpZXMgdGhlIHNldCBvZiBwb2RzIHRvIGxvYWQgYmFsYW5jZQogICAgICAgICMgdHJhZmZpYyB0by4KICAgICAgICBzZWxlY3RvcjoKICAgICAgICAgIGFwcDogbmdpbngKCiAgLSBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvUkVBRE1FLm1kCiAgICBvd25lcjogInJvb3Q6cm9vdCIKICAgIHBlcm1pc3Npb25zOiAiMDY0NCIKICAgIGNvbnRlbnQ6IHwKICAgICAgS3ViZXJuZXRlcyAxMDEgKGh0dHA6Ly9rdWJlcm5ldGVzLmlvL3YxLjAvZG9jcy91c2VyLWd1aWRlL3dhbGt0aHJvdWdoL1JFQURNRS5odG1sKQogICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgogICAgICBMaXN0IGFsbCBub2RlczoKCiAgICAgICAgICBrdWJlY3RsIGdldCBub2RlcwoKICAgICAgUmVwbGljYXRpb24gQ29udHJvbGxlcnM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3JlcGxpY2F0aW9uLWNvbnRyb2xsZXIueWFtbAogICAgICAgICAga3ViZWN0bCBnZXQgcmMKICAgICAgICAgIGt1YmVjdGwgZGVsZXRlIHJjIG5naW54LWNvbnRyb2xsZXIKCiAgICAgIFBvZHM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3BvZC1uZ2lueC13aXRoLWxhYmVsLnlhbWwKICAgICAgICAgIGt1YmVjdGwgZ2V0IHBvZHMKICAgICAgICAgIGN1cmwgaHR0cDovLyQoa3ViZWN0bCBnZXQgcG9kIG5naW54IC1vPXRlbXBsYXRlIC10PXt7LnN0YXR1cy5wb2RJUH19KQoKICAgICAgU2VydmljZXM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3NlcnZpY2UueWFtbAogICAgICAgICAga3ViZWN0bCBnZXQgc2VydmljZXMKCiAgICAgICAgICBleHBvcnQgU0VSVklDRV9JUD0kKGt1YmVjdGwgZ2V0IHNlcnZpY2Ugbmdpbngtc2VydmljZSAtbz10ZW1wbGF0ZSAtdD17ey5zcGVjLmNsdXN0ZXJJUH19KQogICAgICAgICAgZXhwb3J0IFNFUlZJQ0VfUE9SVD0kKGt1YmVjdGwgZ2V0IHNlcnZpY2Ugbmdpbngtc2VydmljZSAtbz10ZW1wbGF0ZSAnLXQ9e3soaW5kZXggLnNwZWMucG9ydHMgMCkucG9ydH19JykKICAgICAgICAgIGN1cmwgaHR0cDovLyR7U0VSVklDRV9JUH06JHtTRVJWSUNFX1BPUlR9CgogICAgICAgICAga3ViZWN0bCBkZWxldGUgc2VydmljZSBuZ2lueC1zZXJ2aWNlCgogICAgICBUcm91Ymxlc2hvb3Rpbmc6CgogICAgICAgICAga3ViZWN0bCBnZXQgZXZlbnRzCgogICAgICAgICAga3ViZWN0bCBkZXNjcmliZSByYyBuZ2lueC1jb250cm9sbGVyCgogICAgICAgICAga3ViZWN0bCBkZXNjcmliZSBwb2QgbmdpbngKCiAgICAgICAgICBrdWJlY3RsIGRlc2NyaWJlIHNlcnZpY2Ugbmdpbngtc2VydmljZQoKICAgICAgICAgIGt1YmVjdGwgZXhlYyBuZ2lueCBlbnYKCiAgICAgICAgICBrdWJlY3RsIGV4ZWMgLXRpIG5naW54IC0tIGJhc2gKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKV0NfTk9USUZZX0JJTj0vdXNyL2xvY2FsL2Jpbi93Yy1ub3RpZnkKV0NfTk9USUZZX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS93Yy1ub3RpZnkuc2VydmljZQoKY2F0ID4gJFdDX05PVElGWV9CSU4gPDxFT0YKIyEvYmluL2Jhc2ggLXYKdW50aWwgY3VybCAtc2YgImh0dHA6Ly8xMjcuMC4wLjE6ODA4MC9oZWFsdGh6IjsgZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCiRXQUlUX0NVUkwgLS1kYXRhLWJpbmFyeSAneyJzdGF0dXMiOiAiU1VDQ0VTUyJ9JwpFT0YKCmNhdCA+ICRXQ19OT1RJRllfU0VSVklDRSA8PEVPRgpbVW5pdF0KRGVzY3JpcHRpb249Tm90aWZ5IEhlYXQKQWZ0ZXI9ZG9ja2VyLnNlcnZpY2UgZXRjZC5zZXJ2aWNlClJlcXVpcmVzPWRvY2tlci5zZXJ2aWNlIGV0Y2Quc2VydmljZQpbU2VydmljZV0KVHlwZT1vbmVzaG90CkV4ZWNTdGFydD0kV0NfTk9USUZZX0JJTgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCgpjaG93biByb290OnJvb3QgJFdDX05PVElGWV9CSU4KY2htb2QgMDc1NSAkV0NfTk9USUZZX0JJTgoKY2hvd24gcm9vdDpyb290ICRXQ19OT1RJRllfU0VSVklDRQpjaG1vZCAwNjQ0ICRXQ19OT1RJRllfU0VSVklDRQoKc3lzdGVtY3RsIGVuYWJsZSB3Yy1ub3RpZnkKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sgd2Mtbm90aWZ5Ci0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09LS0K',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'kwargs': {u'expected_task_state': u'block_device_mapping'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "331082b1-b7ca-4500-a14f-c227960ce48b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "df8054a3-4e9e-4f86-9dc8-bfa29f535663": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b92d6b5f-168c-4332-8e89-df941cb8ea05": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37ef5ad50>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1a5865d1-9835-4546-9343-c06067d7b991": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "9ad20213-b19c-4c9a-af11-466d36ddcb1d": {
            "function": {
                "args": "(<nova.virt.libvirt.vif.LibvirtGenericVIFDriver object at 0x7f67efb80e90>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=PciDeviceList,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic',network_allocated='True'},tags=<?>,task_state='spawning',terminated_at=None,updated_at=2017-01-19T06:45:23Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=VirtCPUModel,vcpus=1,vm_mode=None,vm_state='building'), {\"profile\": {}, \"ovs_interfaceid\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"preserve_on_delete\": true, \"network\": {\"bridge\": \"br-int\", \"subnets\": [{\"ips\": [{\"meta\": {}, \"version\": 4, \"type\": \"fixed\", \"floating_ips\": [{\"meta\": {}, \"version\": 4, \"type\": \"floating\", \"address\": \"172.24.4.4\"}], \"address\": \"10.0.0.3\"}], \"version\": 4, \"meta\": {\"dhcp_server\": \"10.0.0.2\"}, \"dns\": [{\"meta\": {}, \"version\": 4, \"type\": \"dns\", \"address\": \"8.8.8.8\"}], \"routes\": [], \"cidr\": \"10.0.0.0/24\", \"gateway\": {\"meta\": {}, \"version\": 4, \"type\": \"gateway\", \"address\": \"10.0.0.1\"}}], \"meta\": {\"injected\": false, \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"mtu\": 1450}, \"id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"label\": \"private\"}, \"devname\": \"tapfcff5957-17\", \"vnic_type\": \"normal\", \"qbh_params\": null, \"meta\": {}, \"details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"address\": \"fa:16:3e:cf:f0:f1\", \"active\": false, \"type\": \"ovs\", \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"qbg_params\": null})", 
                "name": "nova.virt.libvirt.vif.LibvirtGenericVIFDriver.plug", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bbce0e15-259c-45df-8d26-5aefeca83801": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd0cdd0>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b1ea3206-620d-4c8d-9d4a-19246c759c8d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "19aa8757-3ae6-4f3b-9b9c-af2e32f16b58": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c2ce4876-5c8d-47bf-91cd-d9a1d9e7d55f": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/projects/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/users/096c46ddc97142db923b327828ed3ae5/roles/7916b67c113044df97b0ad89fb772148", 
                "scheme": "http", 
                "method": "PUT", 
                "query": ""
            }
        }, 
        "752317c1-8fbd-4e15-b93d-85a1f84ec98f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1429be66-07d5-427e-a3d0-ad606d2d133c": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "ffcec2b9-0611-4d4e-8ecd-9d25ced1e6f7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7b00e129-3c6e-4a42-b271-e7b08bd58e0b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "912bba40-da6b-4f3d-8c06-cdcfa4acc093": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "41cd3305-f5a1-435c-b289-4ebccd665a9f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c112aa33-7feb-4f67-9dc4-00cfcc1c6d6d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:cf:f0:f1\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:45:26Z\", \"device_owner\": \"compute:None\", \"revision_number\": 10, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.3\"}], \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"security_groups\": [\"a194cf94-7b7a-42dd-86a1-306e04d6c859\"], \"device_id\": \"5299fdb3-2219-46f9-8c52-86fce045e372\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_eth0-le73kun3tjst\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:cf:f0:f1\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:13Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "66e45e9a-4934-465d-be34-fdcca955b67d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.update_port of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "34025676-0eb1-4a89-b3d4-449383083034": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd20a10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 43, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c45be6ca-38bc-44ca-b709-e69ea5cc3aa5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, u'{\"floatingips\": [{\"router_id\": \"4c1e30bd-7120-44a4-a38a-6db4aa6d0145\", \"status\": \"ACTIVE\", \"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:17Z\", \"updated_at\": \"2017-01-19T06:45:17Z\", \"floating_network_id\": \"3857d3f1-659e-468b-8a08-0b8c3ca10be4\", \"fixed_ip_address\": \"10.0.0.3\", \"floating_ip_address\": \"172.24.4.4\", \"revision_number\": 1, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"id\": \"ea33df0d-2582-4d39-89fc-653c1df559a1\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "67a3d3b9-2986-4668-b999-1edabab73e33": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "d1cf0418-814f-412d-8bae-be3970b23db9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e4a400f6-f665-40f3-a4a6-1d62c774df19": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b7772998-6fe1-46a5-b9e3-37cbc57d1546": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, '/subnets')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b9d01a93-f72e-4613-b6e5-52b6c43ef8eb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e9e2b5c3-80eb-4c6d-8857-28a97dcd2878": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/roles", 
                "scheme": "http", 
                "method": "GET", 
                "query": "name=heat_stack_user"
            }
        }, 
        "f21eb97c-2b50-4134-9df7-d8e19fbc9791": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "02223e93-5bea-4b8d-9351-3ca6a0d0efd1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9113a939-9893-474c-9850-f54c6f019cbf": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "986a5075-f487-4de5-849d-b4f7bfecd36e": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dc97e90>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "caf26d4c-e2a6-4972-8560-a4f7ede8ee3b": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e75b450>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDevicePool': u'1.1', u'Service': u'1.20', u'InstancePCIRequests': u'1.1', u'SecurityGroup': u'1.2', u'BlockDeviceMappingList': u'1.17', u'Instance': u'2.3', u'DeviceMetadata': u'1.0', u'SecurityGroupList': u'1.0', u'VirtCPUTopology': u'1.0', u'InstanceFault': u'1.2', u'InstanceDeviceMetadata': u'1.0', u'PciDeviceList': u'1.3', u'PciDevicePoolList': u'1.1', u'ServiceList': u'1.19', u'BlockDeviceMapping': u'1.17', u'VirtCPUModel': u'1.0', u'MigrationContext': u'1.1', u'KeyPair': u'1.4', u'KeyPairList': u'1.3', u'InstancePCIRequest': u'1.1', u'Flavor': u'1.1', u'InstanceInfoCache': u'1.5', u'VirtCPUFeature': u'1.0', u'PciDevice': u'1.5', u'InstanceNUMACell': u'1.3', u'DeviceBus': u'1.0', u'ComputeNode': u'1.16', u'Tag': u'1.1', u'HVSpec': u'1.2', u'EC2Ids': u'1.0', u'InstanceNUMATopology': u'1.3', u'TagList': u'1.1'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'5299fdb3-2219-46f9-8c52-86fce045e372'], u'objname': u'BlockDeviceMappingList', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b2fec74b-2301-425a-868b-e51103d35c95": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "ca4159d7-0a67-4a15-8fca-943ceb932e21": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "abae0c97-d94c-498b-9ac5-d3dac1261384": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "54c6538e-fa63-4e08-894c-7d1fb9e5eaa6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "108df8a1-f6a3-4cd5-8f9a-7a246f7a7481": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'GET', '/floatingips')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'fixed_ip_address': u'10.0.0.9', 'port_id': u'2c0275e1-3f3e-4ca5-aa69-a0660197e312'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4f72b2d6-f4f9-4304-b2b3-5db1a22baad1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fb08f9be-991e-4eda-aa05-a3b96bc6cf3f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3ced423a-d548-4878-ad1a-cf91fb0e3a10": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "74a7a288-e73d-49f3-82a9-bc0ea21af5f3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2ffc14d2-51df-42fc-a173-1449653bc331": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "2213735e-a2ca-4b2e-9be5-fdd134da0ce6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f104a252-8b22-4de0-9fe0-b43b02b244a0": {
            "function": {
                "args": "(<cinder.context.RequestContext object at 0x7f95d46a1f90>, Volume(_name_id=None,admin_metadata={attached_mode='rw'},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:45:13Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-docker_volume-mepwnfw7kzo7',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=1ad44791-704f-415a-a915-fb4ba2c7c87e,launched_at=2017-01-19T06:45:15Z,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth='CHAP TDW5RwwS3v4Lc7vMtMSQ 5XFw6quSTsTMA37o',provider_geometry=None,provider_id=None,provider_location='10.164.180.85:3260,2 iqn.2010-10.org.openstack:volume-1ad44791-704f-415a-a915-fb4ba2c7c87e 1',replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:45:14Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='attaching',terminated_at=None,updated_at=2017-01-19T06:45:34Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), u'5299fdb3-2219-46f9-8c52-86fce045e372', None, u'/dev/vdb')", 
                "name": "cinder.volume.drivers.lvm.LVMVolumeDriver.attach_volume", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f18efe19-0b7d-4621-aab3-3a82d40469c3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5e392049-2cfe-47bf-9a1a-f268aaccebf4": {
            "function": {
                "args": "(<nova.compute.manager.ComputeManager object at 0x7f67f7273f10>, <nova.context.RequestContext object at 0x7f67cc051290>)", 
                "name": "nova.compute.manager.ComputeManager.reserve_block_device_name", 
                "kwargs": "{u'device': u'/dev/vdb', u'instance': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=<?>,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=<?>,host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=<?>,launch_index=0,launched_at=2017-01-19T06:43:06Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node='vinhnt-LAB',numa_topology=<?>,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=<?>,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:43:07Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='active'), u'disk_bus': None, u'device_type': None, u'volume_id': u'82c28688-a34b-4bc3-89c6-fdc04285570b'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9fc54ae8-03b5-47b9-a115-c5b81cc67dc9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d45251ba-a8e1-4ea6-a134-f0653bc11213": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "ea1820fd-7200-49d7-b079-80b7aeba3c39": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "de99b2eb-4ae5-476b-99b0-515f3d84b2e2": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/5299fdb3-2219-46f9-8c52-86fce045e372", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b9db1c5f-d71c-4d43-a400-393c6b62c2f4": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952d9792d0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'c5d6b435-52f9-4c50-ad97-67263f96b479'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7c527e4c-23ac-4a17-8cb0-23c581000c55": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bf9f0693-2e55-46e9-818e-f1b2c47f5685": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d29c8cc3-3a20-4193-ae63-abfdc142feac": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, 'GET', '/networks')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'f55f8258-835a-4732-ba02-0b3c78b6c1c1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "01dcfc80-bc81-4f81-862a-07662bcae35d": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "9ecc21a2-b51c-4ca7-858d-97eb4d777bbb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f426d112-19a4-4a1e-95ec-3a0a98f89d57": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0ff0566c-f986-4306-ae0b-7f59f9f1cf75": {
            "function": {
                "args": "(<magnum.conductor.handlers.indirection_api.Handler object at 0x7f3386e13c50>, <magnum.common.context.RequestContext object at 0x7f3385770a90>)", 
                "name": "magnum.conductor.handlers.indirection_api.Handler.object_class_action", 
                "kwargs": "{u'objver': u'1.17', u'objmethod': u'get_by_name', u'args': [u'k8s-cluster-template'], u'objname': u'ClusterTemplate', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6589ffcd-3214-498c-8875-daa9d43f9d9b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b0ae93c6-63e1-407b-bfa6-7f138461b4bd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "49f1814c-191a-4c6b-a99b-fcba4e106873": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "48162d30-af39-48d3-9423-16c6cabe8e78": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:43:04Z\", \"device_owner\": \"compute:None\", \"revision_number\": 10, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a1f2a958-4b91-494f-8a54-0493e236644c": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dcea310>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2ce0932d-e6cd-412a-859b-f62bda598d4c": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e50d1d0>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDevicePoolList': u'1.1', u'ServiceList': u'1.19', u'PciDevicePool': u'1.1', u'Service': u'1.20', u'TagList': u'1.1', u'InstancePCIRequests': u'1.1', u'VirtCPUModel': u'1.0', u'MigrationContext': u'1.1', u'SecurityGroup': u'1.2', u'Instance': u'2.3', u'KeyPair': u'1.4', u'KeyPairList': u'1.3', u'DeviceMetadata': u'1.0', u'InstancePCIRequest': u'1.1', u'EC2Ids': u'1.0', u'InstanceInfoCache': u'1.5', u'VirtCPUFeature': u'1.0', u'Flavor': u'1.1', u'SecurityGroupList': u'1.0', u'PciDevice': u'1.5', u'VirtCPUTopology': u'1.0', u'InstanceNUMACell': u'1.3', u'DeviceBus': u'1.0', u'ComputeNode': u'1.16', u'InstanceFault': u'1.2', u'Tag': u'1.1', u'HVSpec': u'1.2', u'InstanceDeviceMetadata': u'1.0', u'InstanceNUMATopology': u'1.3', u'PciDeviceList': u'1.3'}, u'objmethod': u'get_by_uuid', u'args': [], u'objname': u'Instance', u'kwargs': {u'uuid': u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', u'expected_attrs': [u'flavor', u'system_metadata']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3aaf169e-9fd7-4489-a22d-b053b0c103bf": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f953174f810>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20141016 object at 0x7f952e039890>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2b4e607d-840c-41f0-9504-eefadb491971": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "51e294e3-cfd3-4040-beb0-89191ab4eaea": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7497a5be-783a-406e-abbf-8fb1f4107d6f": {
            "function": {
                "args": "({u'initiator': u'iqn.1993-08.org.debian:01:1cd767b1343d', u'ip': u'10.164.180.85', u'platform': u'x86_64', u'host': u'vinhnt-LAB', u'do_local_attach': False, u'os_type': u'linux2', u'multipath': False},)", 
                "name": "cinder.volume.drivers.lvm.LVMVolumeDriver.validate_connector", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "67c34b71-5947-46a2-83d0-cf65f10e0c7d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cc4dcfb7-7c4d-4a68-b40e-99f8f612468e": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952df8b890>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-api_lb-67lbo2q7agec', u'stack_id': u'e4fa21f9-93ac-49a8-9433-3f4b1be63733', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "faf52e97-fb7e-4a58-b934-522812678d68": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4c548f84-617b-498b-b275-b51afcaa0932": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f3d10cf1-3198-4407-9282-6f10ca0c1631": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "26e127be-9274-419b-93cf-441fb7a6d910": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "51d58761-3e07-42b9-979b-ae54fc989de8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2c201f09-8d4e-4d2a-b4d2-1364f08868d9": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd1c910>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 46, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9845fd70-4642-4d10-9466-eb70e61fc0d1": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e3e0710>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=2017-01-19T06:43:06Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=PciDeviceList,pci_requests=InstancePCIRequests,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:42:23Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=VirtCPUModel,vcpus=1,vm_mode=None,vm_state='active'), u'kwargs': {u'expected_task_state': u'spawning'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d70bd61d-8f4d-4a89-ba99-0b6b160a426b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "be119b51-a836-47f8-a564-c38ba973b5ed": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8f690801-426d-45da-90c9-90c1c93eaa76": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "e6a00d95-3c2e-482d-87ca-cd9a2d655b38": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd7c290>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 22, u'data': {u'input_data': {u'tuple:(23, True)': {u'status': u'COMPLETE', u'name': u'listener', u'reference_id': u'f2fa238a-e404-41fe-82ed-9aa7d29e4ac4', u'attrs': {}, u'action': u'CREATE', u'id': 23, u'uuid': u'a8cf0ec4-0ab7-44a4-9931-c2424f1dc0cb'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'242ae84c-5677-4bf7-a2a2-5c1f8aa2dc1e'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e31b5a8f-bcd6-4980-b3a0-ed8acb96a828": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab/os-interface", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "8f3758eb-a934-4c90-abe7-0dcd4c11a12f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7e7b3574-8207-4465-a021-bb2b865ba0a5": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e191d90>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c8a85402-6001-4018-93b8-471b8521f054": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952df8b790>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-enable_services-6lvj4xd3n6wo', u'outputs': [], u'config': u'#!/bin/sh\\n\\n# docker is already enabled and possibly running on centos atomic host\\n# so we need to stop it first and delete the docker0 bridge (which will\\n# be re-created using the flannel-provided subnet).\\necho \"stopping docker\"\\nsystemctl stop docker\\nip link del docker0\\n\\n# make sure we pick up any modified unit files\\nsystemctl daemon-reload\\n\\nfor service in docker kubelet; do\\n    echo \"activating service $service\"\\n    systemctl enable $service\\n    systemctl --no-block start $service\\ndone\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8145aa07-9409-4c54-959d-5c37eaa71a0b": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "462d4eeb-0de8-411a-94aa-1f15c80faded": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bb2aa39e-e604-435e-a023-4e972490f185": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3102f7b8-f95a-40d7-a3ce-7717fbf1d619": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "15592cf5-a1ca-4c62-ba16-3f09970b2cd9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "802e38cc-a08a-4aa9-a716-89a5dfb06d27": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dc62150>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': '080971a7-eb5b-4fe1-b358-7dc8c0695ff1'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "404a5cae-dc21-47fc-991e-d4d15c665e86": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "28c3405e-7d04-4847-a3b8-721fcd5ccc90": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'PUT', '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': {'port': {'device_owner': 'compute:None', 'binding:host_id': u'vinhnt-LAB', 'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}}, 'headers': None, 'params': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "76e257d9-081c-4cf9-b7fe-3944bf320502": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a55228ab-2786-4c0c-beef-66b682583cb6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6a15b4ca-dea4-478c-834c-8e4b1f0373fa": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b50aee72-5078-4d91-beb0-90741571842a": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e10aad0>, u'CREATE', 'COMPLETE', u'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5700fd39-d90f-47ca-ab55-6febde284319": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "eb1cce86-dc02-4e38-8bc8-00494c915ae9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "deb3f41c-0328-4251-8c99-866eee2b9b9d": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "9e077426-2e5a-4107-b636-ba79225338dc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "beaf5360-0e40-4154-b317-4d17b964af67": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b03fdec4-682d-4499-a1a4-19df21a9eaa8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e002abce-c922-471d-afa5-bc2e55951986": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3949a1b8-ca4e-4a68-957a-c8f5438e2510": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "605838db-2f51-439f-90d0-2b32765dc81b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f74e2250-1030-4f05-9c42-35bfb7583864": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "ed39ab58-68a0-448b-8a2e-a52824b52f8a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8f1076e3-e45c-4603-818b-688b4cc454fb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d695956a-95ae-4ec3-acc7-5f3be2099f55": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "02ac64fe-bd2e-43dc-82ff-c2a5460b7fc7": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "57810537-88ab-45c1-8a35-e980d5c0bbfe": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8516e434-975f-4fc3-982a-47848db883fe": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cfca2881-e9ed-4874-97fb-f39927f3237c": {
            "function": {
                "args": "(<cinder.volume.manager.VolumeManager object at 0x7f95e2c81d50>, <cinder.context.RequestContext object at 0x7f95d46a1f90>)", 
                "name": "cinder.volume.manager.VolumeManager.attach_volume", 
                "kwargs": "{u'instance_uuid': u'5299fdb3-2219-46f9-8c52-86fce045e372', u'volume': Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:45:13Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-docker_volume-mepwnfw7kzo7',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=1ad44791-704f-415a-a915-fb4ba2c7c87e,launched_at=2017-01-19T06:45:15Z,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth='CHAP TDW5RwwS3v4Lc7vMtMSQ 5XFw6quSTsTMA37o',provider_geometry=None,provider_id=None,provider_location='10.164.180.85:3260,2 iqn.2010-10.org.openstack:volume-1ad44791-704f-415a-a915-fb4ba2c7c87e 1',replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:45:14Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='attaching',terminated_at=None,updated_at=2017-01-19T06:45:34Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), u'host_name': None, u'volume_id': u'1ad44791-704f-415a-a915-fb4ba2c7c87e', u'mountpoint': u'/dev/vdb', u'mode': u'rw'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0ae9077b-5203-40b3-bc70-ac0ec79247c5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, '/floatingips')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'fixed_ip_address': u'10.0.0.3', 'port_id': u'fcff5957-172c-4937-8341-670d27155ef6'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0ba146e9-3665-4f5d-92be-ad43bf0ad3b1": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "4c8cb95b-1d12-4cf5-b122-b7ae86631f7a": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dbaa390>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'30ccdb94-cc97-4a77-85e4-d41a961de761'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "76b9ad79-b963-435a-8953-6e222774184a": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e2f5050>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'InstanceActionEvent': u'1.1'}, u'objmethod': u'event_finish_with_failure', u'args': [u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', u'compute__do_build_and_run_instance'], u'objname': u'InstanceActionEvent', u'kwargs': {u'want_result': False, u'exc_val': None, u'exc_tb': None}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "443f2477-e4a7-4793-8f0e-6b6725bae2c2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3c40b103-d1b3-4df1-af4f-a0da1c25fb81": {
            "function": {
                "args": "(<magnum.conductor.api.API object at 0x7f1a39890950>, Cluster(api_address=<?>,ca_cert_ref=<?>,cluster_template=<?>,cluster_template_id='020f1324-a3e1-45d6-9373-f4f353810eda',coe_version=None,container_version=None,create_timeout=60,created_at=<?>,discovery_url=None,id=<?>,keypair='testkey',magnum_cert_ref=<?>,master_addresses=<?>,master_count=1,name='k8s-cluster',node_addresses=<?>,node_count=1,project_id='f789928a4f254f96965ff7f3dedd02be',stack_id=<?>,status=<?>,status_reason=<?>,trust_id=<?>,trustee_password=<?>,trustee_user_id=<?>,trustee_username=<?>,updated_at=<?>,user_id='34b35d595bf84b739aefa6458d6facb7',uuid=9a8ea37c-e9d3-4a7a-a2b1-dc164fb21d67), 60)", 
                "name": "magnum.conductor.api.API.cluster_create_async", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e0b986bc-adb1-45e9-9204-c1ac3a5ec5e1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper.show_port of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3344f135-177d-438c-bf8b-e42802f71e43": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "390dfac9-2b2f-48d6-8f69-62ac662ddf7c": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "99d43fb4-cb91-41d0-839e-9fc79a0e633b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "818adc21-8a83-4bf5-a47d-a4bdb1c5140c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1070727a-37df-47a9-bff9-d271fd03e600": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd6f810>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ad91ae56-1d7b-404e-9164-10ec886ef3a3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d9cd4f2e-c811-4dc3-9185-8b73f608857c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5fe05962-89d1-4c54-b7ad-ade4f285e243": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0c86858b-8830-479d-8185-587e6f162693": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8c1cc18f-6ebb-4bc3-adf3-97c89ad9a908": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b04ef695-4f00-45ce-98d8-d5b027c92f7f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "17458615-35a4-4e30-9557-3fa568d7e1c5": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors/2", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "a22a0735-88e9-4b37-a28d-5625472697e9": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity/v3", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "56773add-b426-40b5-beca-af9ed2b8a746": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6b57766a-1fa1-41cf-a015-5f312ec8d8f9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d40c3c9e-2d0d-4aac-8265-65c62328f0d2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cc04b4a0-72f3-4a8c-bdbd-8c05eb9997c2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d2a98cf4-9913-41dd-aae3-a72e0d726075": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e19f210>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-make_cert-4xpjmozl5gf3', u'outputs': [], u'config': u'#!/bin/sh\\n\\n# Copyright 2014 The Kubernetes Authors All rights reserved.\\n#\\n# Licensed under the Apache License, Version 2.0 (the \"License\");\\n# you may not use this file except in compliance with the License.\\n# You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \"AS IS\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n. /etc/sysconfig/heat-params\\n\\nset -o errexit\\nset -o nounset\\nset -o pipefail\\n\\nif [ \"$TLS_DISABLED\" == \"True\" ]; then\\n    exit 0\\nfi\\n\\ncert_dir=/srv/kubernetes\\ncert_conf_dir=${cert_dir}/conf\\n\\nmkdir -p \"$cert_dir\"\\nmkdir -p \"$cert_conf_dir\"\\n\\nCA_CERT=$cert_dir/ca.crt\\nCLIENT_CERT=$cert_dir/client.crt\\nCLIENT_CSR=$cert_dir/client.csr\\nCLIENT_KEY=$cert_dir/client.key\\n\\n#Get a token by user credentials and trust\\nauth_json=$(cat << EOF\\n{\\n    \"auth\": {\\n        \"identity\": {\\n            \"methods\": [\\n                \"password\"\\n            ],\\n            \"password\": {\\n                \"user\": {\\n                    \"id\": \"$TRUSTEE_USER_ID\",\\n                    \"password\": \"$TRUSTEE_PASSWORD\"\\n                }\\n            }\\n        },\\n        \"scope\": {\\n            \"OS-TRUST:trust\": {\\n                \"id\": \"$TRUST_ID\"\\n            }\\n        }\\n    }\\n}\\nEOF\\n)\\n\\n#trust is introduced in Keystone v3 version\\nAUTH_URL=${AUTH_URL/v2.0/v3}\\ncontent_type=\\'Content-Type: application/json\\'\\nurl=\"$AUTH_URL/auth/tokens\"\\nUSER_TOKEN=`curl -k -s -i -X POST -H \"$content_type\" -d \"$auth_json\" $url \\\\\\n    | grep X-Subject-Token | awk \\'{print $2}\\' | tr -d \\'[[:space:]]\\'`\\n\\n# Get CA certificate for this cluster\\ncurl -k -X GET \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    $MAGNUM_URL/certificates/$CLUSTER_UUID | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > $CA_CERT\\n\\n# Create config for client\\'s csr\\ncat > ${cert_conf_dir}/client.conf <<EOF\\n[req]\\ndistinguished_name = req_distinguished_name\\nreq_extensions     = req_ext\\nprompt = no\\n[req_distinguished_name]\\nCN = kubernetes.invalid\\n[req_ext]\\nkeyUsage=critical,digitalSignature,keyEncipherment\\nextendedKeyUsage=clientAuth\\nsubjectAltName=dirName:kubelet,dirName:kubeproxy\\n[kubelet]\\nCN=kubelet\\n[kubeproxy]\\nCN=kube-proxy\\nEOF\\n\\n# Generate client\\'s private key and csr\\nopenssl genrsa -out \"${CLIENT_KEY}\" 4096\\nchmod 400 \"${CLIENT_KEY}\"\\nopenssl req -new -days 1000 \\\\\\n        -key \"${CLIENT_KEY}\" \\\\\\n        -out \"${CLIENT_CSR}\" \\\\\\n        -reqexts req_ext \\\\\\n        -config \"${cert_conf_dir}/client.conf\"\\n\\n# Send csr to Magnum to have it signed\\ncsr_req=$(python -c \"import json; fp = open(\\'${CLIENT_CSR}\\'); print json.dumps({\\'cluster_uuid\\': \\'$CLUSTER_UUID\\', \\'csr\\': fp.read()}); fp.close()\")\\ncurl -k -X POST \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    -H \"Content-Type: application/json\" \\\\\\n    -d \"$csr_req\" \\\\\\n    $MAGNUM_URL/certificates | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > ${CLIENT_CERT}\\n\\n# Common certs and key are created for both etcd and kubernetes services.\\n# Both etcd and kube user should have permission to access the certs and key.\\ngroupadd kube_etcd\\nusermod -a -G kube_etcd etcd\\nusermod -a -G kube_etcd kube\\nchmod 550 \"${cert_dir}\"\\nchown -R kube:kube_etcd \"${cert_dir}\"\\nchmod 440 $CLIENT_KEY\\n\\nsed -i \\'\\n    s|CA_CERT|\\'\"$CA_CERT\"\\'|\\n    s|CLIENT_CERT|\\'\"$CLIENT_CERT\"\\'|\\n    s|CLIENT_KEY|\\'\"$CLIENT_KEY\"\\'|\\n\\' /srv/kubernetes/kubeconfig.yaml\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1c94f7b9-a651-4881-be41-d15451ef8b8d": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e29a550>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='spawning',terminated_at=None,updated_at=2017-01-19T06:45:23Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'kwargs': {u'expected_task_state': u'block_device_mapping'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9138b741-e860-45b5-8ce0-70339acea484": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "df447bd9-919c-4649-9a15-bec65b36c735": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dce0cd0>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-configure_kubernetes_minion-uan6fo4mwim4', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\necho \"configuring kubernetes (minion)\"\\n\\nif [ -z \"$KUBE_NODE_IP\" ]; then\\n    # FIXME(yuanying): Set KUBE_NODE_IP correctly\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nCERT_DIR=/srv/kubernetes\\nPROTOCOL=https\\nFLANNEL_OPTIONS=\"-etcd-cafile $CERT_DIR/ca.crt \\\\\\n-etcd-certfile $CERT_DIR/client.crt \\\\\\n-etcd-keyfile $CERT_DIR/client.key\"\\nETCD_CURL_OPTIONS=\"--cacert $CERT_DIR/ca.crt \\\\\\n--cert $CERT_DIR/client.crt --key $CERT_DIR/client.key\"\\nETCD_SERVER_IP=${ETCD_SERVER_IP:-$KUBE_MASTER_IP}\\nKUBE_PROTOCOL=\"https\"\\nKUBE_CONFIG=\"\"\\nFLANNELD_CONFIG=/etc/sysconfig/flanneld\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    PROTOCOL=http\\n    FLANNEL_OPTIONS=\"\"\\n    ETCD_CURL_OPTIONS=\"\"\\nfi\\n\\nsed -i \\'/FLANNEL_OPTIONS/\\'d $FLANNELD_CONFIG\\n\\ncat >> $FLANNELD_CONFIG <<EOF\\nFLANNEL_OPTIONS=\"$FLANNEL_OPTIONS\"\\nEOF\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    KUBE_PROTOCOL=\"http\"\\nelse\\n    KUBE_CONFIG=\"--kubeconfig=/srv/kubernetes/kubeconfig.yaml\"\\nfi\\nKUBE_MASTER_URI=\"$KUBE_PROTOCOL://$KUBE_MASTER_IP:$KUBE_API_PORT\"\\n\\nsed -i \\'\\n    /^KUBE_ALLOW_PRIV=/ s/=.*/=\"--allow-privileged=\\'\"$KUBE_ALLOW_PRIV\"\\'\"/\\n    /^KUBE_ETCD_SERVERS=/ s|=.*|=\"--etcd-servers=http://\\'\"$ETCD_SERVER_IP\"\\':2379\"|\\n    /^KUBE_MASTER=/ s|=.*|=\"--master=\\'\"$KUBE_MASTER_URI\"\\'\"|\\n\\' /etc/kubernetes/config\\n\\n# NOTE:  Kubernetes plugin for Openstack requires that the node name registered\\n# in the kube-apiserver be the same as the Nova name of the instance, so that\\n# the plugin can use the name to query for attributes such as IP, etc.\\n# The hostname of the node is set to be the Nova name of the instance, and\\n# the option --hostname-override for kubelet uses the hostname to register the node.\\n# Using any other name will break the load balancer and cinder volume features.\\nHOSTNAME=$(hostname --short | sed \\'s/\\\\.novalocal//\\')\\nKUBELET_ARGS=\"--config=/etc/kubernetes/manifests --cadvisor-port=4194 ${KUBE_CONFIG} --hostname-override=${HOSTNAME}\"\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    KUBELET_ARGS=\"${KUBELET_ARGS} --pod-infra-container-image=${INSECURE_REGISTRY_URL}/google_containers/pause\\\\:0.8.0\"\\n    echo \"INSECURE_REGISTRY=\\'--insecure-registry ${INSECURE_REGISTRY_URL}\\'\" >> /etc/sysconfig/docker\\nfi\\n\\nsed -i \\'\\n    /^KUBELET_ADDRESS=/ s/=.*/=\"--address=0.0.0.0\"/\\n    /^KUBELET_HOSTNAME=/ s/=.*/=\"\"/\\n    /^KUBELET_API_SERVER=/ s|=.*|=\"--api-servers=\\'\"$KUBE_MASTER_URI\"\\'\"|\\n    /^KUBELET_ARGS=/ s|=.*|=\"\\'\"${KUBELET_ARGS}\"\\'\"|\\n\\' /etc/kubernetes/kubelet\\n\\nsed -i \\'\\n    /^KUBE_PROXY_ARGS=/ s|=.*|=\\'\"$KUBE_CONFIG\"\\'|\\n\\' /etc/kubernetes/proxy\\n\\nif [ \"$NETWORK_DRIVER\" = \"flannel\" ]; then\\n    sed -i \\'\\n        /^FLANNEL_ETCD=/ s|=.*|=\"\\'\"$PROTOCOL\"\\'://\\'\"$ETCD_SERVER_IP\"\\':2379\"|\\n    \\' $FLANNELD_CONFIG\\n\\n    # Make sure etcd has a flannel configuration\\n    . $FLANNELD_CONFIG\\n    until curl -sf $ETCD_CURL_OPTIONS \\\\\\n        \"$FLANNEL_ETCD/v2/keys${FLANNEL_ETCD_KEY}/config?quorum=false&recursive=false&sorted=false\"\\n    do\\n        echo \"Waiting for flannel configuration in etcd...\"\\n        sleep 5\\n    done\\nfi\\n\\nif [ \"$VOLUME_DRIVER\" = \"cinder\" ]; then\\n    CLOUD_CONFIG=/etc/kubernetes/kube_openstack_config\\n    KUBERNETES=/etc/kubernetes\\n    if [ ! -d ${KUBERNETES} -o ! -f ${CLOUD_CONFIG} ]; then\\n        mkdir -p $KUBERNETES\\n    fi\\n    AUTH_URL=${AUTH_URL/v3/v2.0}\\ncat > $CLOUD_CONFIG <<EOF\\n[Global]\\nauth-url=$AUTH_URL\\nusername=$USERNAME\\npassword=$PASSWORD\\nregion=$REGION_NAME\\ntenant-name=$TENANT_NAME\\nEOF\\n\\ncat << _EOC_ >> /etc/kubernetes/kubelet\\n#KUBELET_ARGS=\"$KUBELET_ARGS --cloud-provider=openstack --cloud-config=/etc/kubernetes/kube_openstack_config\"\\n_EOC_\\n\\n    if [ ! -f /usr/bin/udevadm ]; then\\n        ln -s /sbin/udevadm /usr/bin/udevadm\\n    fi\\n\\nfi\\n\\ncat >> /etc/environment <<EOF\\nKUBERNETES_MASTER=$KUBE_MASTER_URI\\nEOF\\n\\nhostname `hostname | sed \\'s/.novalocal//\\'`\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "32aae066-97ba-4fc4-9b7c-7d9bd4e5c58d": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors/2", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "f5942baa-ba00-4010-b761-d6a8caecb15a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ccb6ae42-0442-47cd-bc8b-efbd498c3024": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c8ce0a7f-e7cf-4524-8883-1b7f88db874d": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "b8c926f0-c525-48af-9834-b60fe4bd98fe": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dda9e10>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'473ebacc-4d42-4fa4-9db7-97bcfbafab1d'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a6e70a23-1717-4216-98ab-c2aacb04eda3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5baff238-bda3-422a-9604-8f09dba8f0d7": {
            "function": {
                "args": "(<nova.scheduler.rpcapi.SchedulerAPI object at 0x7f67efae2350>, <nova.context.RequestContext object at 0x7f67cc2c50d0>, 'vinhnt-LAB', InstanceList(objects=[Instance(6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab)]))", 
                "name": "nova.scheduler.rpcapi.SchedulerAPI.update_instance_info", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "28cd6c11-c712-4efd-9d97-54d545e7063d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "66ab1601-720e-4f46-bddc-a719df0f9457": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dbc2890>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7d07dcf2-b8b0-47cf-83a4-c91698b792ec": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:cf:f0:f1\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:45:26Z\", \"device_owner\": \"compute:None\", \"revision_number\": 10, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.3\"}], \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"security_groups\": [\"a194cf94-7b7a-42dd-86a1-306e04d6c859\"], \"device_id\": \"5299fdb3-2219-46f9-8c52-86fce045e372\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_eth0-le73kun3tjst\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:cf:f0:f1\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:13Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8370c983-31e1-42ab-9012-3593ac843266": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "56fb0e8a-aa1f-4c9a-9f92-1b6ae6a88bc0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, '2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.show_port", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fef7577f-c7e7-4ac0-bb0c-7fd26cd83d03": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "60bc968f-4fd9-4c58-8cc1-dcb8492a4ad4": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3813785d0>, <nova.context.RequestContext object at 0x7ff37f376c50>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a5874d11-5522-456f-8196-f5230611c9b8": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dce0490>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_ui_service-64shbo5d32jo', u'outputs': [], u'config': u'#!/bin/sh\\n\\n# this service is required because docker will start only after cloud init was finished\\n# due to the service dependencies in Fedora Atomic (docker <- docker-storage-setup <- cloud-final)\\n\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    KUBEUI_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/kube-ui:v4\"\\nelse\\n    KUBEUI_IMAGE=\"gcr.io/google_containers/kube-ui:v4\"\\nfi\\n\\nKUBE_UI_RC=/srv/kubernetes/manifests/kube-ui-rc.yaml\\n\\n[ -f ${KUBE_UI_RC} ] || {\\n    echo \"Writing File: $KUBE_UI_RC\"\\n    mkdir -p $(dirname ${KUBE_UI_RC})\\n    cat << EOF > ${KUBE_UI_RC}\\napiVersion: v1\\nkind: ReplicationController\\nmetadata:\\n  name: kube-ui-v4\\n  namespace: kube-system\\n  labels:\\n    k8s-app: kube-ui\\n    version: v4\\n    kubernetes.io/cluster-service: \"true\"\\nspec:\\n  replicas: 1\\n  selector:\\n    k8s-app: kube-ui\\n    version: v4\\n  template:\\n    metadata:\\n      labels:\\n        k8s-app: kube-ui\\n        version: v4\\n        kubernetes.io/cluster-service: \"true\"\\n    spec:\\n      containers:\\n      - name: kube-ui\\n        image: ${KUBEUI_IMAGE}\\n        resources:\\n          limits:\\n            cpu: 100m\\n            memory: 50Mi\\n        ports:\\n        - containerPort: 8080\\nEOF\\n}\\n\\nKUBE_UI_SVC=/srv/kubernetes/manifests/kube-ui-svc.yaml\\n[ -f ${KUBE_UI_SVC} ] || {\\n    echo \"Writing File: $KUBE_UI_SVC\"\\n    mkdir -p $(dirname ${KUBE_UI_SVC})\\n    cat << EOF > ${KUBE_UI_SVC}\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: kube-ui\\n  namespace: kube-system\\n  labels:\\n    k8s-app: kube-ui\\n    kubernetes.io/cluster-service: \"true\"\\n    kubernetes.io/name: \"KubeUI\"\\nspec:\\n  selector:\\n    k8s-app: kube-ui\\n  ports:\\n  - port: 80\\n    targetPort: 8080\\nEOF\\n}\\n\\nKUBE_UI_BIN=/usr/local/bin/kube-ui\\n[ -f ${KUBE_UI_BIN} ] || {\\n    echo \"Writing File: $KUBE_UI_BIN\"\\n    mkdir -p $(dirname ${KUBE_UI_BIN})\\n    cat << EOF > ${KUBE_UI_BIN}\\n#!/bin/sh\\nuntil curl -sf \"http://127.0.0.1:8080/healthz\"\\ndo\\n    echo \"Waiting for Kubernetes API...\"\\n    sleep 5\\ndone\\n\\n#echo check for existence of kube-ui-v4 replication controller\\n/usr/bin/kubectl get rc kube-ui-v4 --namespace=kube-system\\n\\nif [ \"\\\\$?\" != \"0\" ]; then\\n    /usr/bin/kubectl create -f /srv/kubernetes/manifests/kube-ui-rc.yaml --namespace=kube-system\\nfi\\n\\n#echo check for existence of kube-ui service\\n/usr/bin/kubectl get service kube-ui --namespace=kube-system\\n\\nif [ \"\\\\$?\" != \"0\" ]; then\\n    /usr/bin/kubectl create -f /srv/kubernetes/manifests/kube-ui-svc.yaml --namespace=kube-system\\nfi\\nEOF\\n}\\n\\nKUBE_UI_SERVICE=/etc/systemd/system/kube-ui.service\\n[ -f ${KUBE_UI_SERVICE} ] || {\\n    echo \"Writing File: $KUBE_UI_SERVICE\"\\n    mkdir -p $(dirname ${KUBE_UI_SERVICE})\\n    cat << EOF > ${KUBE_UI_SERVICE}\\n[Unit]\\nAfter=kube-system-namespace.service\\nRequires=kubelet.service\\nWants=kube-system-namespace.service\\n\\n[Service]\\nType=oneshot\\nEnvironment=HOME=/root\\nEnvironmentFile=-/etc/kubernetes/config\\nExecStart=${KUBE_UI_BIN}\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n}\\n\\nchown root:root ${KUBE_UI_BIN}\\nchmod 0755 ${KUBE_UI_BIN}\\n\\nchown root:root ${KUBE_UI_SERVICE}\\nchmod 0644 ${KUBE_UI_SERVICE}\\n\\nsystemctl enable kube-ui\\nsystemctl start --no-block kube-ui\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0aa5f351-0f2e-498b-9ce1-89afb98b23f6": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "30a715ee-8816-4e57-9a66-ee855962fdf3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9332f5d5-5357-4c2b-b0ab-833a7610fd1c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "afd7cb3c-0a08-44be-846c-90fb9dd1747e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2f504651-7f3a-4288-b57c-5842cb382847": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e014cd0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 7, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'e26ac53a-442d-4077-b980-74afdd7ee184'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ef52cb7d-66dd-41a9-8fd4-4c8cde5743c6": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/OS-TRUST/trusts", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "c26c0d7d-3e56-435c-bda7-d478c00c5e27": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b21f3946-9539-44da-8051-8c24e56f7c59": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd0c9d0>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c9c21819-aa5d-467a-950c-edacc560db09": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d7094416-3456-40e5-9d78-d744213bde69": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b26c798f-b0a3-4a2c-a4db-07f018f965ac": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ef51cc8b-a7be-46f1-abef-6c133c13f445": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37e9cd2d0>, u'5299fdb3-2219-46f9-8c52-86fce045e372')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "101d8ec9-df31-40b8-9bc8-bce624b44346": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "6e3d00cb-6f5e-49fd-97c0-bd1bbb114035": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc57a50>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-disable_selinux-orzjur5wt3iy', u'outputs': [], u'config': u\"#cloud-boothook\\n#!/bin/sh\\n\\nsetenforce 0\\n\\nsed -i '\\n    /^SELINUX=/ s/=.*/=permissive/\\n' /etc/selinux/config\\n\", u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "33672367-bfc5-43e4-b471-6d5d027edd74": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e19f150>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 4, u'data': {u'input_data': {u'tuple:(5, True)': {u'status': u'COMPLETE', u'name': u'kube_masters', u'reference_id': u'730af533-fa60-4f08-8f2b-03a1ec7f80e2', u'attrs': {u'resource.0.kube_master_external_ip': u'172.24.4.11', u'kube_master_external_ip': [u'172.24.4.11'], u'resource.0.kube_master_ip': u'10.0.0.9', u'kube_master_ip': [u'10.0.0.9']}, u'action': u'CREATE', u'id': 5, u'uuid': u'a9ca2aa7-594e-4e07-9e92-c6494264368d'}, u'tuple:(8, True)': {u'status': u'COMPLETE', u'name': u'api_lb', u'uuid': u'a1f01882-6176-4f7d-b0f6-f9cd5c065e5a', u'attrs': {u'floating_address': None, u'pool_id': u'aec31665-24b9-47af-bd4e-25280a0bb5bb', u'address': None}, u'action': u'CREATE', u'id': 8, u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-api_lb-67lbo2q7agec/e4fa21f9-93ac-49a8-9433-3f4b1be63733'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'e26ac53a-442d-4077-b980-74afdd7ee184'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "de2e749f-c9bc-4055-9eb3-345abe471230": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3712c518-4469-4de3-886c-c0227a7b1fec": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e1910d0>, u'CREATE', 'COMPLETE', u'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "75e14ebe-6349-416c-9ba8-f869771fc280": {
            "function": {
                "args": "(<nova.virt.libvirt.vif.LibvirtGenericVIFDriver object at 0x7f67efb80e90>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=PciDeviceList,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic',network_allocated='True'},tags=<?>,task_state='spawning',terminated_at=None,updated_at=2017-01-19T06:42:23Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=VirtCPUModel,vcpus=1,vm_mode=None,vm_state='building'), {\"profile\": {}, \"ovs_interfaceid\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"preserve_on_delete\": true, \"network\": {\"bridge\": \"br-int\", \"subnets\": [{\"ips\": [{\"meta\": {}, \"version\": 4, \"type\": \"fixed\", \"floating_ips\": [{\"meta\": {}, \"version\": 4, \"type\": \"floating\", \"address\": \"172.24.4.11\"}], \"address\": \"10.0.0.9\"}], \"version\": 4, \"meta\": {\"dhcp_server\": \"10.0.0.2\"}, \"dns\": [{\"meta\": {}, \"version\": 4, \"type\": \"dns\", \"address\": \"8.8.8.8\"}], \"routes\": [], \"cidr\": \"10.0.0.0/24\", \"gateway\": {\"meta\": {}, \"version\": 4, \"type\": \"gateway\", \"address\": \"10.0.0.1\"}}], \"meta\": {\"injected\": false, \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"mtu\": 1450}, \"id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"label\": \"private\"}, \"devname\": \"tap2c0275e1-3f\", \"vnic_type\": \"normal\", \"qbh_params\": null, \"meta\": {}, \"details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"address\": \"fa:16:3e:a9:11:04\", \"active\": false, \"type\": \"ovs\", \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"qbg_params\": null})", 
                "name": "nova.virt.libvirt.vif.LibvirtGenericVIFDriver.plug", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fd9d31d7-0fbd-471e-be58-abe4a8d662af": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dde6dd0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 2, u'data': {u'input_data': {u'tuple:(10, True)': {u'status': u'COMPLETE', u'name': u'secgroup_kube_minion', u'uuid': u'105691d2-ab6f-49a7-993a-aa7f61a6ce55', u'attrs': {}, u'action': u'CREATE', u'id': 10, u'reference_id': u'a194cf94-7b7a-42dd-86a1-306e04d6c859'}, u'tuple:(9, True)': {u'status': u'COMPLETE', u'name': u'network', u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-network-bsueqzfm4pjs/4f715e6a-6c85-4397-adb1-c21fee6efcbb', u'attrs': {u'fixed_network': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', u'fixed_subnet': u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257'}, u'action': u'CREATE', u'id': 9, u'uuid': u'4ace3d32-8486-40ca-9045-69b97b368568'}, u'tuple:(4, True)': {u'status': u'COMPLETE', u'name': u'api_address_lb_switch', u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-api_address_lb_switch-giqcpj3ubkxa/54f157d2-b705-4a81-8680-2eaec5fcbd06', u'attrs': {u'public_ip': u'172.24.4.11', u'private_ip': u'10.0.0.9'}, u'action': u'CREATE', u'id': 4, u'uuid': u'7740aae0-027a-4322-8b85-e830bc86f78e'}, u'tuple:(3, True)': {u'status': u'COMPLETE', u'name': u'etcd_address_lb_switch', u'uuid': u'1f059f90-5200-4f7b-a17e-5c5ed1cd37dc', u'attrs': {u'private_ip': u'10.0.0.9'}, u'action': u'CREATE', u'id': 3, u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-etcd_address_lb_switch-662saapqlh4q/1da23165-b3d6-4bf9-945e-9b899b2338e6'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'e26ac53a-442d-4077-b980-74afdd7ee184'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "57adccf8-4e66-4626-ba85-ea72186ed2ff": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9f4092c9-3b5f-4786-aff7-11fb04397414": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952df08090>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 16, u'data': {u'input_data': {u'tuple:(20, True)': {u'status': u'COMPLETE', u'name': u'loadbalancer', u'reference_id': u'66c27563-e593-4ffc-b869-f5b20a9e412f', u'attrs': {u'vip_port_id': None, u'vip_address': None}, u'action': u'CREATE', u'id': 20, u'uuid': u'88c6a0fc-ad11-4631-9ad8-4bd9eebb5f18'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'b3233653-5afe-4df0-89f3-dcddb500d499'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c3c0e77e-f285-49a0-b51c-ab6f5beb5c23": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ddafd90>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8ef536a1-952b-4285-9957-ef6e9f494c61": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ea1bc1c2-305b-4cbe-b4bd-70d21c98470d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a5de4c6b-e06a-4021-ac07-4c427f934d58": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "22527d4b-1350-4ac4-9960-7aaa19631776": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "02ebfdec-1858-43be-9a4c-c4dff03f10ba": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952df24d90>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-write_kube_os_config-5fkv7fffjqeq', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nKUBE_OS_CLOUD_CONFIG=/etc/sysconfig/kube_openstack_config\\n\\n# kubernetes backend only support keystone v2 at this point\\nAUTH_URL=$(echo \"$AUTH_URL\" | sed \\'s/v3/v2.0/\\')\\n\\n# Generate a the configuration for Kubernetes services\\n# to talk to OpenStack Neutron\\ncat > $KUBE_OS_CLOUD_CONFIG <<EOF\\n[Global]\\nauth-url=$AUTH_URL\\nusername=$USERNAME\\npassword=$PASSWORD\\ntenant-name=$TENANT_NAME\\n[LoadBalancer]\\nsubnet-id=$CLUSTER_SUBNET\\ncreate-monitor=yes\\nmonitor-delay=1m\\nmonitor-timeout=30s\\nmonitor-max-retries=3\\nEOF\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fe194d46-fd48-4af4-949b-a00a23a4caab": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd95150>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'3311df97-ff3f-4639-8493-cbe99205c89b'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "64818a7e-9b93-43aa-b5bd-72a0e35e65c1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'network_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', 'device_owner': 'network:dhcp'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7daa722d-681e-4431-ba35-0c12e5af0d4b": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": "allow_expired=1"
            }
        }, 
        "e322baae-24e6-42ef-b8cc-550af566b89a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c0ff0d0d-a1ea-4574-8f8a-2b05acdedad7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a3204706-85e0-4786-9928-994c7e1bcab4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f70e31aa-7344-499f-8733-266803be6840": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c75edab5-42e4-4d1f-81a2-237da796b048": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "488f44c4-bc19-402b-b96f-872546161323": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1f12964f-2e88-4eff-91db-90309ade4a32": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a3e57740-f630-4404-a19c-e3a09a227e48": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>, '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'fields': ['binding:vnic_type', 'network_id']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e4793acd-090a-4632-b7e2-4f08c9632813": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "021cf6d9-526b-455a-9e60-c7b835641459": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952d8fca50>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-network_service-yqyw6rxl5yfe', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$NETWORK_DRIVER\" != \"flannel\" ]; then\\n    exit 0\\nfi\\n\\nFLANNEL_DOCKER_BRIDGE_BIN=/usr/local/bin/flannel-docker-bridge\\nFLANNEL_DOCKER_BRIDGE_SERVICE=/etc/systemd/system/flannel-docker-bridge.service\\nDOCKER_FLANNEL_CONF=/etc/systemd/system/docker.service.d/flannel.conf\\nFLANNEL_DOCKER_BRIDGE_CONF=/etc/systemd/system/flanneld.service.d/flannel-docker-bridge.conf\\n\\nmkdir -p /etc/systemd/system/docker.service.d\\nmkdir -p /etc/systemd/system/flanneld.service.d\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_BIN <<EOF1\\n#!/bin/sh\\n\\nif ! [ \"\\\\$FLANNEL_SUBNET\" ] && [ \"\\\\$FLANNEL_MTU\" ] ; then\\n  echo \"ERROR: missing required environment variables.\" >&2\\n  exit 1\\nfi\\n\\nmkdir -p /run/flannel/\\ncat > /run/flannel/docker <<EOF2\\nDOCKER_NETWORK_OPTIONS=\"--bip=\\\\$FLANNEL_SUBNET --mtu=\\\\$FLANNEL_MTU\"\\nEOF2\\nEOF1\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_BIN\\nchmod 0755 $FLANNEL_DOCKER_BRIDGE_BIN\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_SERVICE <<EOF\\n[Unit]\\nAfter=flanneld.service\\nBefore=docker.service\\nRequires=flanneld.service\\n\\n[Service]\\nType=oneshot\\nEnvironmentFile=/run/flannel/subnet.env\\nExecStart=/usr/local/bin/flannel-docker-bridge\\n\\n[Install]\\nWantedBy=docker.service\\nEOF\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_SERVICE\\nchmod 0644 $FLANNEL_DOCKER_BRIDGE_SERVICE\\n\\ncat >> $DOCKER_FLANNEL_CONF <<EOF\\n[Unit]\\nRequires=flannel-docker-bridge.service\\nAfter=flannel-docker-bridge.service\\n\\n[Service]\\nEnvironmentFile=/run/flannel/docker\\nEOF\\n\\nchown root:root $DOCKER_FLANNEL_CONF\\nchmod 0644 $DOCKER_FLANNEL_CONF\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_CONF <<EOF\\n[Unit]\\nRequires=flannel-docker-bridge.service\\nBefore=flannel-docker-bridge.service\\n\\n[Install]\\nAlso=flannel-docker-bridge.service\\nEOF\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_CONF\\nchmod 0644 $FLANNEL_DOCKER_BRIDGE_CONF\\n\\necho \"activating service flanneld\"\\nsystemctl enable flanneld\\nsystemctl --no-block start flanneld\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0980778f-6230-4033-a385-f71c063ad984": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2585421a-9e40-4f23-864b-51cee2745291": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1ff5844b-89b4-4376-8290-53def97b1932": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0660ae1e-6c69-40c3-b574-92cc1b308396": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd66cd0>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-master_wc_notify-okohj273urgy', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nWC_NOTIFY_BIN=/usr/local/bin/wc-notify\\nWC_NOTIFY_SERVICE=/etc/systemd/system/wc-notify.service\\n\\ncat > $WC_NOTIFY_BIN <<EOF\\n#!/bin/bash -v\\nuntil curl -sf \"http://127.0.0.1:8080/healthz\"; do\\n    echo \"Waiting for Kubernetes API...\"\\n    sleep 5\\ndone\\n$WAIT_CURL --data-binary \\'{\"status\": \"SUCCESS\"}\\'\\nEOF\\n\\ncat > $WC_NOTIFY_SERVICE <<EOF\\n[Unit]\\nDescription=Notify Heat\\nAfter=docker.service etcd.service\\nRequires=docker.service etcd.service\\n[Service]\\nType=oneshot\\nExecStart=$WC_NOTIFY_BIN\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n\\nchown root:root $WC_NOTIFY_BIN\\nchmod 0755 $WC_NOTIFY_BIN\\n\\nchown root:root $WC_NOTIFY_SERVICE\\nchmod 0644 $WC_NOTIFY_SERVICE\\n\\nsystemctl enable wc-notify\\nsystemctl start --no-block wc-notify', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f73ea2b1-e022-4887-a814-23820cc400c6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e90a38bd-77b6-4fdb-bd67-d81ad19c5728": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "25bd3a32-95e6-4512-8587-aed7545a3455": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "050ea6fe-ebc1-4442-bb6a-67ca95515175": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "8b554bba-e327-4d3d-a2c7-311f30be8915": {
            "function": {
                "args": "(<nova.virt.libvirt.volume.iscsi.LibvirtISCSIVolumeDriver object at 0x7f67efb85150>, {u'driver_volume_type': u'iscsi', 'connector': {'platform': 'x86_64', 'host': 'vinhnt-LAB', 'do_local_attach': False, 'ip': '10.164.180.85', 'os_type': 'linux2', 'multipath': False, 'initiator': u'iqn.1993-08.org.debian:01:1cd767b1343d'}, 'serial': u'82c28688-a34b-4bc3-89c6-fdc04285570b', u'data': {u'access_mode': u'rw', u'target_discovered': False, u'encrypted': False, u'qos_specs': None, u'target_iqn': u'iqn.2010-10.org.openstack:volume-82c28688-a34b-4bc3-89c6-fdc04285570b', u'target_portal': u'10.164.180.85:3260', u'volume_id': u'82c28688-a34b-4bc3-89c6-fdc04285570b', u'target_lun': 1, 'device_path': u'/dev/disk/by-path/ip-10.164.180.85:3260-iscsi-iqn.2010-10.org.openstack:volume-82c28688-a34b-4bc3-89c6-fdc04285570b-lun-1', u'auth_password': u'Be5ecquV7uysXZNr', u'auth_username': u'THyZ8adaN383MNpA3jyq', u'auth_method': u'CHAP'}}, {'bus': 'virtio', 'type': 'disk', 'dev': u'vdb'})", 
                "name": "nova.virt.libvirt.volume.volume.LibvirtBaseVolumeDriver.get_config", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8d5cf98b-cc19-4f45-bf83-eeb93b5fb85f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fefefcbd-9c2e-4106-a32b-1dfadd00714a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'tenant_id': u'f789928a4f254f96965ff7f3dedd02be', 'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b3acde10-d80a-43f3-91aa-1d23b63e9896": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_networks", 
                "kwargs": "{'id': [u'f55f8258-835a-4732-ba02-0b3c78b6c1c1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bcba4e74-a22d-4b42-975e-b966a655a0e2": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "5ce32ccd-4303-4832-8936-6e7673ace622": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a97ad158-d9de-4031-b0cc-27881991ce5e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:55Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5cecfa75-0cb9-4b12-93f6-7cdeb1f816cd\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"9f30a188-364e-4d5f-b1a1-d4385bf9f402\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a2021987-017e-4cde-92c0-4fdde9a6cc3f\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"udp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a3cb2896-fc2a-4d4c-829f-0ec2895e8f3c\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"e0dfc1a7-2dad-42a1-8c64-88c542eb0f03\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 4, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_minion-tj5ln4ifneos\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d0eb7973-9006-42e0-8c13-0a7afd0f9835": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/users", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "73305320-1db3-4c6f-bdf8-0627ee460bee": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.show_port of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1c9e249c-06c8-4a9c-8cf4-301cda878d72": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952df7d2d0>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-api_lb-67lbo2q7agec', u'stack_id': u'e4fa21f9-93ac-49a8-9433-3f4b1be63733', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "992ff9ae-8357-404a-bd34-45767f9a08ef": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fdff9711-5db1-477f-8ae6-5596d23465b3": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e039110>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 18, u'data': {u'input_data': {u'tuple:(19, True)': {u'status': u'COMPLETE', u'name': u'listener', u'reference_id': u'ce93bed0-ab6a-4340-b4ec-169f843cee06', u'attrs': {}, u'action': u'CREATE', u'id': 19, u'uuid': u'ad327fb5-f1c5-4723-a9d7-ae5a87fe308d'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'b3233653-5afe-4df0-89f3-dcddb500d499'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "185b0691-7bfb-43cf-afc1-87fd33fe34d7": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "c789d862-57f0-42ac-b306-b6a8ff3f6bae": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6de7884b-e71f-491a-b751-7733579f04f8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, u'{\"ports\": []}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "56bf20a4-cb7b-41e1-b878-52b26d52a0cb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.update_port of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "81e61e92-4b2c-48cf-a60e-5ee905968c6c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6a675c01-20d3-4915-9304-19e277f8dd23": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "70a7648b-ea8e-4032-acbc-ae683d6eca1c": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e015b10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 14, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'40018db4-87e5-4b4e-b4a0-d80da07e36a6'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "59c82574-dbd5-41cc-8591-85bb7252f822": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7a4ebe6a-47d2-4d3a-b2d3-57d5eb8abfdc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d7beba3f-a1fa-40ba-812f-54bba2961a99": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "3aae7bc9-682f-441b-b4e5-cb5163635312": {
            "function": {
                "args": "({u'initiator': u'iqn.1993-08.org.debian:01:1cd767b1343d', u'ip': u'10.164.180.85', u'platform': u'x86_64', u'host': u'vinhnt-LAB', u'do_local_attach': False, u'os_type': u'linux2', u'multipath': False},)", 
                "name": "cinder.volume.drivers.lvm.LVMVolumeDriver.validate_connector", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "15cc2880-d4b1-413b-b836-f78e0f95ed10": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff38110a090>, <nova.context.RequestContext object at 0x7ff37f1ff210>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=<?>,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=<?>,host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=<?>,launch_index=0,launched_at=2017-01-19T06:43:06Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node='vinhnt-LAB',numa_topology=<?>,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=<?>,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:43:07Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='active'), u'82c28688-a34b-4bc3-89c6-fdc04285570b', u'/dev/vdb')", 
                "name": "nova.compute.api.API.attach_volume", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "79739c11-4367-4ce0-9991-70d783d72dca": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0ba11170-cb38-489b-9b0f-cb4605a46518": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "209a8468-b4cd-4873-8636-d638d76f4143": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>, '2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.show_port", 
                "kwargs": "{'fields': ['binding:vnic_type', 'network_id']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4e288afc-0861-4dd5-a672-596e8df9e0a1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8cddf7fb-7760-41ef-b57f-1eb57c573876": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4a567d79-67c9-4e6e-92f1-d5511f70e8a0": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e015c50>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 25, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'242ae84c-5677-4bf7-a2a2-5c1f8aa2dc1e'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4313542a-7fad-4364-8dca-a5657e50bd81": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4c87e044-a124-4728-a1c4-207c0c232e22": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dcf0a10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 39, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "831ae6c1-ef76-46e9-9841-eb55b5468b0f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3e69741c-0f65-4e24-a4c0-6afb50aa53d9": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952df7dc50>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 51, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7c4caaf3-d286-4393-b749-ddd96a280a3a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0d81261f-3e48-4ae0-a2b6-df15498eeb45": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b0312ea9-5a91-495c-9e0f-716af0c9e01c": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37f000710>, u'5299fdb3-2219-46f9-8c52-86fce045e372')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d3001979-7769-4a0d-a463-45b8c293e838": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "456c2f88-af3d-44ae-ba6b-1cdfd0da7a5a": {
            "function": {
                "args": "(<nova.compute.rpcapi.ComputeAPI object at 0x7faa4f5be310>, <nova.context.RequestContext object at 0x7faa4e79bf90>)", 
                "name": "nova.compute.rpcapi.ComputeAPI.build_and_run_instance", 
                "kwargs": "{'node': u'vinhnt-LAB', 'request_spec': {'instance_properties': {'vm_state': u'building', 'keypairs': [{'public_key': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\\n', 'user_id': u'34b35d595bf84b739aefa6458d6facb7', 'name': u'testkey', 'deleted': False, 'created_at': '2017-01-19T06:39:24.000000', 'updated_at': None, 'fingerprint': u'd4:e3:3f:e5:f8:ec:1c:8b:bc:cb:7a:5c:53:c4:93:f9', 'deleted_at': None, 'type': u'ssh', 'id': 1}], 'pci_requests': {'instance_uuid': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', 'requests': []}, 'availability_zone': None, 'terminated_at': None, 'ephemeral_gb': 0, 'old_flavor': None, 'updated_at': None, 'numa_topology': None, 'display_description': u'k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm', 'cleaned': False, 'vm_mode': None, 'flavor': {'memory_mb': 2048, 'root_gb': 20, 'deleted_at': None, 'name': u'm1.small', 'deleted': False, 'created_at': '2017-01-19T04:24:14.000000', 'ephemeral_gb': 0, 'updated_at': None, 'disabled': False, 'vcpus': 1, 'extra_specs': {}, 'swap': 0, 'rxtx_factor': 1.0, 'is_public': True, 'flavorid': u'2', 'vcpu_weight': 0, 'id': 7}, 'deleted_at': None, 'reservation_id': u'r-kz80mc8r', 'id': 2, 'security_groups': [], 'disable_terminate': False, 'instance_type_id': 7, 'user_id': u'34b35d595bf84b739aefa6458d6facb7', 'uuid': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', 'default_swap_device': None, 'info_cache': {'instance_uuid': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', 'deleted': False, 'created_at': '2017-01-19T06:42:20.000000', 'updated_at': None, 'network_info': [], 'deleted_at': None}, 'hostname': u'k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm', 'launched_on': None, 'ec2_ids': {'instance_id': u'i-00000002', 'kernel_id': None, 'ami_id': u'ami-00000004', 'ramdisk_id': None}, 'key_data': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\\n', 'vcpu_model': None, 'power_state': 0, 'device_metadata': None, 'default_ephemeral_device': None, 'progress': 0, 'project_id': u'f789928a4f254f96965ff7f3dedd02be', 'launched_at': None, 'config_drive': u'', 'node': None, 'ramdisk_id': u'', 'access_ip_v6': None, 'access_ip_v4': None, 'deleted': False, 'key_name': u'testkey', 'user_data': u'', 'host': None, 'ephemeral_key_uuid': None, 'architecture': None, 'display_name': u'k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm', 'system_metadata': {u'image_os_distro': u'fedora-atomic', 'instance_type_memory_mb': 2048, 'instance_type_swap': 0, 'instance_type_vcpu_weight': 0, 'instance_type_root_gb': 20, 'instance_type_id': 7, 'instance_type_name': u'm1.small', 'instance_type_ephemeral_gb': 0, 'instance_type_rxtx_factor': 1.0, u'image_min_disk': u'20', 'instance_type_flavorid': u'2', u'image_container_format': u'bare', 'instance_type_vcpus': 1, u'image_min_ram': u'0', u'image_disk_format': u'qcow2', u'image_base_image_ref': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, 'task_state': u'scheduling', 'shutdown_terminate': False, 'cell_name': None, 'root_gb': 20, 'kernel_id': u'', 'name': 'instance-00000002', 'created_at': '2017-01-19T06:42:20.000000', 'locked_by': None, 'launch_index': 0, 'locked': False, 'memory_mb': 2048, 'vcpus': 1, 'image_ref': u'63388f50-4450-4c85-8f3c-197af8f6f6cf', 'root_device_name': None, 'auto_disk_config': False, 'os_type': None, 'metadata': {}, 'new_flavor': None}, 'instance_type': {'memory_mb': 2048, 'root_gb': 20, 'deleted_at': None, 'name': u'm1.small', 'deleted': False, 'created_at': '2017-01-19T04:24:14.000000', 'ephemeral_gb': 0, 'updated_at': None, 'disabled': False, 'vcpus': 1, 'extra_specs': {}, 'swap': 0, 'rxtx_factor': 1.0, 'is_public': True, 'flavorid': u'2', 'vcpu_weight': 0, 'id': 7}, 'image': {u'status': u'active', u'created_at': u'2017-01-19T04:22:26.000000', u'name': u'fedora-atomic-latest', u'deleted': False, u'container_format': u'bare', u'min_ram': 0, u'disk_format': u'qcow2', u'updated_at': u'2017-01-19T04:28:13.000000', u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf', u'min_disk': 0, u'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', u'is_public': True, u'deleted_at': None, u'properties': {u'os_distro': u'fedora-atomic'}, u'size': 697925632}, 'num_instances': 1}, 'requested_networks': NetworkRequestList(objects=[NetworkRequest]), 'limits': {u'memory_mb': 23812.5, u'disk_gb': 442.0}, 'block_device_mapping': BlockDeviceMappingList(objects=[BlockDeviceMapping(2)]), 'image': {u'status': u'active', u'deleted': False, u'container_format': u'bare', u'min_ram': 0, u'updated_at': u'2017-01-19T04:28:13.000000', u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', u'min_disk': 0, u'is_public': True, u'deleted_at': None, u'properties': {u'os_distro': u'fedora-atomic'}, u'size': 697925632, u'name': u'fedora-atomic-latest', u'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'created_at': u'2017-01-19T04:22:26.000000', u'disk_format': u'qcow2', u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, 'filter_properties': {u'instance_type': Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), 'retry': {'num_attempts': 1, 'hosts': [[u'vinhnt-LAB', u'vinhnt-LAB']]}, 'limits': {u'memory_mb': 23812.5, u'disk_gb': 442.0}, u'scheduler_hints': {}}, 'instance': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host=None,hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on=None,locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node=None,numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='scheduling',terminated_at=None,updated_at=None,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), 'host': u'vinhnt-LAB', 'admin_password': u'THgSMb6tDDNB', 'injected_files': [], 'security_groups': [u'default']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2ae884ab-ebbb-4121-8309-ec2db407db13": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>, 'GET', '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'fields': ['binding:vnic_type', 'network_id']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "78ec071b-75fc-4845-9bc0-6573efec7070": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952ddaf210>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 63, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "414903e4-0225-4f37-9f4f-40bb2e0a3fb6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "53a6f4bb-1a9d-4439-8034-d99069cfad25": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "52bb2ace-7af6-4406-9cc3-e26ecb9d405f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2db7553a-1e74-445a-a165-2f537330f205": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9262db32-c353-4d99-b6e2-5f0b28f6baed": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5af16384-e914-444f-a72c-4a5b02cde907": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e628c00a-c258-4662-9db7-1f35ad12d671": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f912c645-3241-496a-8f88-c709f2f643d6": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "2f3f141e-9aca-475e-b0d0-350ad6205176": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7062dc6b-ed2e-46bf-a780-df78a6bf7e99": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f3117b75-6b93-4cab-8b78-9f09f9a6fa3a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "de71ba0e-f74d-43af-9da4-f717cc9fd1a3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0cfb8fee-d03e-4a68-800f-93f6b008a98c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "692ada0b-3398-42b4-8a16-c05a6682ac50": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e5c6e50>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'create', u'args': [], u'objinst': VirtualInterface(address='fa:16:3e:cf:f0:f1/fcff5957-172c-4937-8341-670d27155ef6',created_at=<?>,deleted=<?>,deleted_at=<?>,id=<?>,instance_uuid=5299fdb3-2219-46f9-8c52-86fce045e372,network_id=<?>,tag=None,updated_at=<?>,uuid=fcff5957-172c-4937-8341-670d27155ef6), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5529b66a-5f6f-4067-b84a-fdc41ecca325": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'floatingips', '/floatingips', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'fixed_ip_address': u'10.0.0.3', 'port_id': u'fcff5957-172c-4937-8341-670d27155ef6'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ec367c73-a806-4f87-b300-7704ad74cedb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5c7f5ebc-6744-44ae-9d48-1c4e0dc89749": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "c5dcd1cc-6076-499b-8e76-566d40006207": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b559d2c4-8409-4273-9d33-ab73a33f5274": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "d736ea10-0a51-458d-95c7-39f6fa8590da": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8a56e12f-91ab-4d36-803e-074016de8972": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e0818d0>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': True}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ae10761f-b19d-4d25-9812-0b2d523d5da3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4a4af659-6f1c-4615-89ea-5dc29b89ac72": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a8b1a278-2b98-421b-a92a-8b8344f9b94a": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v1/f789928a4f254f96965ff7f3dedd02be/stacks", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "cd160c45-67e5-4e43-aa15-6b10a8333680": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dce7250>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 76, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a16152b5-e977-4508-b909-f8a38841cf11": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e1cf910>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 17, u'data': {u'input_data': {u'tuple:(18, True)': {u'status': u'COMPLETE', u'name': u'pool', u'reference_id': u'aec31665-24b9-47af-bd4e-25280a0bb5bb', u'attrs': {}, u'action': u'CREATE', u'id': 18, u'uuid': u'7b84611d-f680-486b-8192-b39ba43c76f4'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'b3233653-5afe-4df0-89f3-dcddb500d499'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b2fd374c-cc27-419a-a95c-ca3414ac6440": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'tenant_id': u'f789928a4f254f96965ff7f3dedd02be', 'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "aa7e74ce-d358-4112-b781-edd00df427ed": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ddafd90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "57791f3d-a326-4dfb-b692-421316336e56": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, u'{\"extensions\": [{\"alias\": \"default-subnetpools\", \"updated\": \"2016-02-18T18:00:00-00:00\", \"name\": \"Default Subnetpools\", \"links\": [], \"description\": \"Provides ability to mark and use a subnetpool as the default\"}, {\"alias\": \"network-ip-availability\", \"updated\": \"2015-09-24T00:00:00-00:00\", \"name\": \"Network IP Availability\", \"links\": [], \"description\": \"Provides IP availability data for each network and subnet.\"}, {\"alias\": \"network_availability_zone\", \"updated\": \"2015-01-01T10:00:00-00:00\", \"name\": \"Network Availability Zone\", \"links\": [], \"description\": \"Availability zone support for network.\"}, {\"alias\": \"auto-allocated-topology\", \"updated\": \"2016-01-01T00:00:00-00:00\", \"name\": \"Auto Allocated Topology Services\", \"links\": [], \"description\": \"Auto Allocated Topology Services.\"}, {\"alias\": \"ext-gw-mode\", \"updated\": \"2013-03-28T10:00:00-00:00\", \"name\": \"Neutron L3 Configurable external gateway mode\", \"links\": [], \"description\": \"Extension of the router abstraction for specifying whether SNAT should occur on the external gateway\"}, {\"alias\": \"binding\", \"updated\": \"2014-02-03T10:00:00-00:00\", \"name\": \"Port Binding\", \"links\": [], \"description\": \"Expose port bindings of a virtual port to external application\"}, {\"alias\": \"agent\", \"updated\": \"2013-02-03T10:00:00-00:00\", \"name\": \"agent\", \"links\": [], \"description\": \"The agent management extension.\"}, {\"alias\": \"subnet_allocation\", \"updated\": \"2015-03-30T10:00:00-00:00\", \"name\": \"Subnet Allocation\", \"links\": [], \"description\": \"Enables allocation of subnets from a subnet pool\"}, {\"alias\": \"l3_agent_scheduler\", \"updated\": \"2013-02-07T10:00:00-00:00\", \"name\": \"L3 Agent Scheduler\", \"links\": [], \"description\": \"Schedule routers among l3 agents\"}, {\"alias\": \"tag\", \"updated\": \"2016-01-01T00:00:00-00:00\", \"name\": \"Tag support\", \"links\": [], \"description\": \"Enables to set tag on resources.\"}, {\"alias\": \"external-net\", \"updated\": \"2013-01-14T10:00:00-00:00\", \"name\": \"Neutron external network\", \"links\": [], \"description\": \"Adds external network attribute to network resource.\"}, {\"alias\": \"flavors\", \"updated\": \"2015-09-17T10:00:00-00:00\", \"name\": \"Neutron Service Flavors\", \"links\": [], \"description\": \"Flavor specification for Neutron advanced services\"}, {\"alias\": \"net-mtu\", \"updated\": \"2015-03-25T10:00:00-00:00\", \"name\": \"Network MTU\", \"links\": [], \"description\": \"Provides MTU attribute for a network resource.\"}, {\"alias\": \"availability_zone\", \"updated\": \"2015-01-01T10:00:00-00:00\", \"name\": \"Availability Zone\", \"links\": [], \"description\": \"The availability zone extension.\"}, {\"alias\": \"quotas\", \"updated\": \"2012-07-29T10:00:00-00:00\", \"name\": \"Quota management support\", \"links\": [], \"description\": \"Expose functions for quotas management per tenant\"}, {\"alias\": \"l3-ha\", \"updated\": \"2014-04-26T00:00:00-00:00\", \"name\": \"HA Router extension\", \"links\": [], \"description\": \"Add HA capability to routers.\"}, {\"alias\": \"provider\", \"updated\": \"2012-09-07T10:00:00-00:00\", \"name\": \"Provider Network\", \"links\": [], \"description\": \"Expose mapping of virtual networks to physical networks\"}, {\"alias\": \"multi-provider\", \"updated\": \"2013-06-27T10:00:00-00:00\", \"name\": \"Multi Provider Network\", \"links\": [], \"description\": \"Expose mapping of virtual networks to multiple physical networks\"}, {\"alias\": \"address-scope\", \"updated\": \"2015-07-26T10:00:00-00:00\", \"name\": \"Address scope\", \"links\": [], \"description\": \"Address scopes extension.\"}, {\"alias\": \"extraroute\", \"updated\": \"2013-02-01T10:00:00-00:00\", \"name\": \"Neutron Extra Route\", \"links\": [], \"description\": \"Extra routes configuration for L3 router\"}, {\"alias\": \"subnet-service-types\", \"updated\": \"2016-03-15T18:00:00-00:00\", \"name\": \"Subnet service types\", \"links\": [], \"description\": \"Provides ability to set the subnet service_types field\"}, {\"alias\": \"standard-attr-timestamp\", \"updated\": \"2016-09-12T10:00:00-00:00\", \"name\": \"Resource timestamps\", \"links\": [], \"description\": \"Adds created_at and updated_at fields to all Neutron resources that have Neutron standard attributes.\"}, {\"alias\": \"service-type\", \"updated\": \"2013-01-20T00:00:00-00:00\", \"name\": \"Neutron Service Type Management\", \"links\": [], \"description\": \"API for retrieving service providers for Neutron advanced services\"}, {\"alias\": \"l3-flavors\", \"updated\": \"2016-05-17T00:00:00-00:00\", \"name\": \"Router Flavor Extension\", \"links\": [], \"description\": \"Flavor support for routers.\"}, {\"alias\": \"port-security\", \"updated\": \"2012-07-23T10:00:00-00:00\", \"name\": \"Port Security\", \"links\": [], \"description\": \"Provides port security\"}, {\"alias\": \"extra_dhcp_opt\", \"updated\": \"2013-03-17T12:00:00-00:00\", \"name\": \"Neutron Extra DHCP opts\", \"links\": [], \"description\": \"Extra options configuration for DHCP. For example PXE boot options to DHCP clients can be specified (e.g. tftp-server, server-ip-address, bootfile-name)\"}, {\"alias\": \"standard-attr-revisions\", \"updated\": \"2016-04-11T10:00:00-00:00\", \"name\": \"Resource revision numbers\", \"links\": [], \"description\": \"This extension will display the revision number of neutron resources.\"}, {\"alias\": \"pagination\", \"updated\": \"2016-06-12T00:00:00-00:00\", \"name\": \"Pagination support\", \"links\": [], \"description\": \"Extension that indicates that pagination is enabled.\"}, {\"alias\": \"sorting\", \"updated\": \"2016-06-12T00:00:00-00:00\", \"name\": \"Sorting support\", \"links\": [], \"description\": \"Extension that indicates that sorting is enabled.\"}, {\"alias\": \"security-group\", \"updated\": \"2012-10-05T10:00:00-00:00\", \"name\": \"security-group\", \"links\": [], \"description\": \"The security groups extension.\"}, {\"alias\": \"dhcp_agent_scheduler\", \"updated\": \"2013-02-07T10:00:00-00:00\", \"name\": \"DHCP Agent Scheduler\", \"links\": [], \"description\": \"Schedule networks among dhcp agents\"}, {\"alias\": \"router_availability_zone\", \"updated\": \"2015-01-01T10:00:00-00:00\", \"name\": \"Router Availability Zone\", \"links\": [], \"description\": \"Availability zone support for router.\"}, {\"alias\": \"rbac-policies\", \"updated\": \"2015-06-17T12:15:12-00:00\", \"name\": \"RBAC Policies\", \"links\": [], \"description\": \"Allows creation and modification of policies that control tenant access to resources.\"}, {\"alias\": \"standard-attr-description\", \"updated\": \"2016-02-10T10:00:00-00:00\", \"name\": \"standard-attr-description\", \"links\": [], \"description\": \"Extension to add descriptions to standard attributes\"}, {\"alias\": \"router\", \"updated\": \"2012-07-20T10:00:00-00:00\", \"name\": \"Neutron L3 Router\", \"links\": [], \"description\": \"Router abstraction for basic L3 forwarding between L2 Neutron networks and access to external networks via a NAT gateway.\"}, {\"alias\": \"allowed-address-pairs\", \"updated\": \"2013-07-23T10:00:00-00:00\", \"name\": \"Allowed Address Pairs\", \"links\": [], \"description\": \"Provides allowed address pairs\"}, {\"alias\": \"project-id\", \"updated\": \"2016-09-09T09:09:09-09:09\", \"name\": \"project_id field enabled\", \"links\": [], \"description\": \"Extension that indicates that project_id field is enabled.\"}, {\"alias\": \"dvr\", \"updated\": \"2014-06-1T10:00:00-00:00\", \"name\": \"Distributed Virtual Router\", \"links\": [], \"description\": \"Enables configuration of Distributed Virtual Routers.\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "82e427b1-db8f-46f0-8c52-793b073d857b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:cf:f0:f1\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:45:23Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.3\"}], \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"security_groups\": [\"a194cf94-7b7a-42dd-86a1-306e04d6c859\"], \"device_id\": \"5299fdb3-2219-46f9-8c52-86fce045e372\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_eth0-le73kun3tjst\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:cf:f0:f1\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:13Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4dfce888-fc35-4d5e-bb38-a34549ceb2cc": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "3f4868d2-56ab-4b9d-b45c-1e814686ffba": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2cca96a7-09f1-4128-be59-51aaeacf7e0b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, '/subnets')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d6e8b2a9-2f99-49c0-a4ca-fbc41636d971": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952df64ed0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 3, u'data': {u'input_data': {u'tuple:(6, True)': {u'status': u'COMPLETE', u'name': u'etcd_lb', u'uuid': u'c54ab83a-ef64-4504-ace8-30ad9520a9b8', u'attrs': {u'pool_id': u'eaebe04d-665b-44e0-b618-38b9d529f6b0', u'address': None}, u'action': u'CREATE', u'id': 6, u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-etcd_lb-kbhpmtcuvob2/a1cc2b35-433b-4395-af9a-299915cb643d'}, u'tuple:(5, True)': {u'status': u'COMPLETE', u'name': u'kube_masters', u'reference_id': u'730af533-fa60-4f08-8f2b-03a1ec7f80e2', u'attrs': {u'resource.0.kube_master_external_ip': u'172.24.4.11', u'kube_master_external_ip': [u'172.24.4.11'], u'resource.0.kube_master_ip': u'10.0.0.9', u'kube_master_ip': [u'10.0.0.9']}, u'action': u'CREATE', u'id': 5, u'uuid': u'a9ca2aa7-594e-4e07-9e92-c6494264368d'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'e26ac53a-442d-4077-b980-74afdd7ee184'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a2595b7b-6334-4581-95a6-4a3828d3f050": {
            "function": {
                "args": "(<magnum.conductor.handlers.cluster_conductor.Handler object at 0x7f33876b8110>, <magnum.common.context.RequestContext object at 0x7f33856880d0>)", 
                "name": "magnum.conductor.handlers.cluster_conductor.Handler.cluster_create", 
                "kwargs": "{u'cluster': Cluster(api_address=<?>,ca_cert_ref=<?>,cluster_template=<?>,cluster_template_id='020f1324-a3e1-45d6-9373-f4f353810eda',coe_version=None,container_version=None,create_timeout=60,created_at=<?>,discovery_url=None,id=<?>,keypair='testkey',magnum_cert_ref=<?>,master_addresses=<?>,master_count=1,name='k8s-cluster',node_addresses=<?>,node_count=1,project_id='f789928a4f254f96965ff7f3dedd02be',stack_id=<?>,status=<?>,status_reason=<?>,trust_id=<?>,trustee_password=<?>,trustee_user_id=<?>,trustee_username=<?>,updated_at=<?>,user_id='34b35d595bf84b739aefa6458d6facb7',uuid=9a8ea37c-e9d3-4a7a-a2b1-dc164fb21d67), u'create_timeout': 60}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a857bda2-820e-437e-8c04-67339b88cae4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0ebde571-be91-4f16-9f66-c39a4042e9c2": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b/action", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "70fe290b-f291-4c70-9693-fb234e17ddb1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1da405c4-4939-4a1b-8a89-20f26e3e2808": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7361ea7b-11d5-42da-bed1-bed130d1e3fc": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "e3f30968-c14e-4e67-bb13-01049eb376e1": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/5299fdb3-2219-46f9-8c52-86fce045e372", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "76b67d28-6eb7-4514-ad8b-87e776842819": {
            "function": {
                "args": "(<cinder.volume.manager.VolumeManager object at 0x7f95e2c81d50>, <cinder.context.RequestContext object at 0x7f95d432ccd0>)", 
                "name": "cinder.volume.manager.VolumeManager.create_volume", 
                "kwargs": "{u'volume': Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:45:13Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-docker_volume-mepwnfw7kzo7',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=1ad44791-704f-415a-a915-fb4ba2c7c87e,launched_at=None,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth=None,provider_geometry=None,provider_id=None,provider_location=None,replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:45:13Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='creating',terminated_at=None,updated_at=None,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), u'allow_reschedule': True, u'request_spec': RequestSpec(CG_backend=<?>,cgsnapshot_id=None,consistencygroup_id=None,group_backend=<?>,group_id=None,image_id=None,snapshot_id=None,source_replicaid=None,source_volid=None,volume=Volume(1ad44791-704f-415a-a915-fb4ba2c7c87e),volume_id=1ad44791-704f-415a-a915-fb4ba2c7c87e,volume_properties=VolumeProperties,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32)), u'filter_properties': {u'config_options': {}, u'request_spec': {u'resource_properties': {u'status': u'creating', u'volume_type_id': u'4b1f0113-11a3-49fb-a626-61734cf88f32', u'group_id': None, u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'availability_zone': u'nova', u'reservations': [u'55d13581-5606-4d25-a4bd-5b27fefa3b8f', u'e3d8321d-ce13-45ea-9f11-9451447d3810', u'63210070-0ea9-4314-88d7-be2ea936a5bd', u'74acc7a3-e843-4b00-8ee1-54c8bec672f5'], u'multiattach': False, u'attach_status': u'detached', u'source_volid': None, u'cgsnapshot_id': None, u'metadata': {}, u'qos_specs': None, u'encryption_key_id': None, u'display_description': None, u'snapshot_id': None, u'source_replicaid': None, u'project_id': u'f789928a4f254f96965ff7f3dedd02be', u'consistencygroup_id': None, u'size': 3, u'display_name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-docker_volume-mepwnfw7kzo7'}, u'source_replicaid': None, u'volume_properties': {u'status': u'creating', u'volume_type_id': u'4b1f0113-11a3-49fb-a626-61734cf88f32', u'group_id': None, u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'availability_zone': u'nova', u'reservations': [u'55d13581-5606-4d25-a4bd-5b27fefa3b8f', u'e3d8321d-ce13-45ea-9f11-9451447d3810', u'63210070-0ea9-4314-88d7-be2ea936a5bd', u'74acc7a3-e843-4b00-8ee1-54c8bec672f5'], u'multiattach': False, u'attach_status': u'detached', u'source_volid': None, u'cgsnapshot_id': None, u'metadata': {}, u'qos_specs': None, u'encryption_key_id': None, u'display_description': None, u'snapshot_id': None, u'source_replicaid': None, u'project_id': u'f789928a4f254f96965ff7f3dedd02be', u'consistencygroup_id': None, u'size': 3, u'display_name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-docker_volume-mepwnfw7kzo7'}, u'source_volid': None, u'cgsnapshot_id': None, u'volume': {u'migration_status': None, u'provider_id': None, u'availability_zone': u'nova', u'terminated_at': None, u'updated_at': None, u'provider_geometry': None, u'replication_extended_status': None, u'replication_status': None, u'snapshot_id': None, u'ec2_id': None, u'deleted_at': None, u'id': u'1ad44791-704f-415a-a915-fb4ba2c7c87e', u'size': 3, u'display_name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-docker_volume-mepwnfw7kzo7', u'display_description': None, u'cluster_name': None, u'name_id': u'1ad44791-704f-415a-a915-fb4ba2c7c87e', u'volume_admin_metadata': [], u'project_id': u'f789928a4f254f96965ff7f3dedd02be', u'launched_at': None, u'scheduled_at': None, u'status': u'creating', u'volume_type_id': u'4b1f0113-11a3-49fb-a626-61734cf88f32', u'multiattach': False, u'deleted': False, u'provider_location': None, u'volume_glance_metadata': [], u'host': None, u'consistencygroup_id': None, u'source_volid': None, u'provider_auth': None, u'previous_status': None, u'group_id': None, u'name': u'volume-1ad44791-704f-415a-a915-fb4ba2c7c87e', u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'bootable': False, u'created_at': u'2017-01-19T06:45:13.000000', u'attach_status': u'detached', u'volume_metadata': [], u'_name_id': None, u'encryption_key_id': None, u'replication_driver_data': None, u'metadata': {}}, u'image_id': None, u'snapshot_id': None, u'consistencygroup_id': None, u'volume_type': {u'name': u'lvmdriver-1', u'qos_specs_id': None, u'deleted': False, u'created_at': u'2017-01-19T04:24:54.000000', u'updated_at': None, u'extra_specs': {u'volume_backend_name': u'lvmdriver-1'}, u'is_public': True, u'deleted_at': None, u'id': u'4b1f0113-11a3-49fb-a626-61734cf88f32', u'projects': [], u'description': None}, u'volume_id': u'1ad44791-704f-415a-a915-fb4ba2c7c87e', u'group_id': None}, u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'availability_zone': u'nova', u'volume_type': VolumeType(created_at=2017-01-19T04:24:54Z,deleted=False,deleted_at=None,description=None,extra_specs={volume_backend_name='lvmdriver-1'},id=4b1f0113-11a3-49fb-a626-61734cf88f32,is_public=True,name='lvmdriver-1',projects=[],qos_specs=<?>,qos_specs_id=None,updated_at=None), u'qos_specs': None, u'retry': {u'num_attempts': 1, u'backends': [u'vinhnt-LAB@lvmdriver-1#lvmdriver-1'], u'hosts': [u'vinhnt-LAB@lvmdriver-1#lvmdriver-1']}, u'metadata': {}, u'resource_type': VolumeType(created_at=2017-01-19T04:24:54Z,deleted=False,deleted_at=None,description=None,extra_specs={volume_backend_name='lvmdriver-1'},id=4b1f0113-11a3-49fb-a626-61734cf88f32,is_public=True,name='lvmdriver-1',projects=[],qos_specs=<?>,qos_specs_id=None,updated_at=None), u'size': 3}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "91983ded-68b6-4200-b6bd-2d841a93cf57": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "607e4152-7aa6-4ac5-ba44-eed13d23c822": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ca3dc18a-ca00-4a6f-b7b5-2e16d0294cb8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "757f4923-3c9f-4c3d-bb64-9f11fbe12ce0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, 'GET', '/networks')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'f55f8258-835a-4732-ba02-0b3c78b6c1c1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "91bac365-a364-4c2c-926d-79cd57f72546": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "02f01e83-df9e-451f-a9cb-9a5517015b3b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0fad785c-b2b4-4afa-ae6b-ed0f1aab8d67": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "06002757-5d7c-4fd0-99ce-c8d3ced75a6c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b07713f6-ab47-42c9-ad1a-6fb83b697ab2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4f1910e7-19e6-413f-a1ed-599b9235761a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8302e470-8eb5-45ca-bf23-125975fee9fb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "625b663d-f9fd-4c17-8ca2-3e7f2555921e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a690bed0-a7cd-4f5d-9283-73ec74db2b8e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dbfce024-124f-4e52-ad02-bb8affb14d01": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b36a46e9-22c2-4cff-8831-d050695b9d32": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "22d1774a-e90f-45d1-8d79-e20c2afcb8bd": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dce3390>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a95e9f07-a86e-4af9-8105-f8e2f6b2b144": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e5d3550>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host=None,hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on=None,locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node=None,numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=None,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'kwargs': {u'expected_task_state': [u'scheduling', None]}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7c4d40c3-23b0-4883-bd40-e32656843620": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "b198014e-1fd9-4851-9716-f8ca064c7688": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>, '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bb1d3b0d-d5bd-41a6-bdaf-c5359a345d3c": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "0f60e2a8-fddd-4db3-a4e8-45cc8daa873d": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff38110a090>, <nova.context.RequestContext object at 0x7ff380829f10>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=<?>,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=<?>,host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=<?>,launch_index=0,launched_at=2017-01-19T06:45:28Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node='vinhnt-LAB',numa_topology=<?>,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=<?>,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:45:29Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='active'), u'1ad44791-704f-415a-a915-fb4ba2c7c87e', u'/dev/vdb')", 
                "name": "nova.compute.api.API.attach_volume", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f89a43eb-d4f6-43e1-b504-92197875faf7": {
            "function": {
                "args": "(Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:45:13Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-docker_volume-mepwnfw7kzo7',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=1ad44791-704f-415a-a915-fb4ba2c7c87e,launched_at=None,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth=None,provider_geometry=None,provider_id=None,provider_location=None,replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:45:14Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='creating',terminated_at=None,updated_at=2017-01-19T06:45:14Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32),)", 
                "name": "cinder.volume.drivers.lvm.LVMVolumeDriver.create_volume", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "32b5d3fe-716d-4c9a-833a-906c06059c98": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "54ac591d-992c-4a41-9b09-a4134d95ff57": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "6d162617-0a29-4438-9532-96b527a0ae80": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "06ca902c-7bd5-4b1e-99cf-d65f2298cd9e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "00ec13f7-a092-49b7-b8d6-6b57729f2828": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "449e132f-9666-46e8-a9f0-9a866de3531c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3c0a4cb7-7d31-4545-943a-43de621f9aa2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ea4a798c-1821-4048-a9c1-4e0353dc0294": {
            "function": {
                "args": "(<nova.compute.manager.ComputeManager object at 0x7f67f7273f10>, <nova.context.RequestContext object at 0x7f67cc0a6a90>)", 
                "name": "nova.compute.manager.ComputeManager.build_and_run_instance", 
                "kwargs": "{u'node': u'vinhnt-LAB', u'request_spec': {u'instance_properties': {u'vm_state': u'building', u'pci_requests': {u'instance_uuid': u'5299fdb3-2219-46f9-8c52-86fce045e372', u'requests': []}, u'availability_zone': None, u'ephemeral_gb': 0, u'ec2_ids': {u'instance_id': u'i-00000003', u'kernel_id': None, u'ami_id': u'ami-00000004', u'ramdisk_id': None}, u'vm_mode': None, u'flavor': {u'deleted': False, u'ephemeral_gb': 0, u'updated_at': None, u'disabled': False, u'extra_specs': {}, u'rxtx_factor': 1.0, u'is_public': True, u'flavorid': u'2', u'id': 7, u'root_gb': 20, u'deleted_at': None, u'name': u'm1.small', u'created_at': u'2017-01-19T04:24:14.000000', u'memory_mb': 2048, u'vcpus': 1, u'swap': 0, u'vcpu_weight': 0}, u'reservation_id': u'r-sp4hc8rx', u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'uuid': u'5299fdb3-2219-46f9-8c52-86fce045e372', u'default_swap_device': None, u'launched_on': None, u'power_state': 0, u'project_id': u'f789928a4f254f96965ff7f3dedd02be', u'access_ip_v6': None, u'access_ip_v4': None, u'vcpu_model': None, u'instance_type_id': 7, u'updated_at': None, u'system_metadata': {u'instance_type_vcpu_weight': 0, u'instance_type_root_gb': 20, u'instance_type_id': 7, u'instance_type_name': u'm1.small', u'instance_type_rxtx_factor': 1.0, u'instance_type_vcpus': 1, u'image_min_ram': u'0', u'image_disk_format': u'qcow2', u'image_os_distro': u'fedora-atomic', u'instance_type_memory_mb': 2048, u'instance_type_swap': 0, u'instance_type_ephemeral_gb': 0, u'instance_type_flavorid': u'2', u'image_container_format': u'bare', u'image_min_disk': u'20', u'image_base_image_ref': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, u'cell_name': None, u'ephemeral_key_uuid': None, u'locked': False, u'name': u'instance-00000003', u'locked_by': None, u'launch_index': 0, u'vcpus': 1, u'architecture': None, u'auto_disk_config': False, u'os_type': None, u'config_drive': u'', u'keypairs': [{u'public_key': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\\n', u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'name': u'testkey', u'deleted': False, u'created_at': u'2017-01-19T06:39:24.000000', u'updated_at': None, u'fingerprint': u'd4:e3:3f:e5:f8:ec:1c:8b:bc:cb:7a:5c:53:c4:93:f9', u'deleted_at': None, u'type': u'ssh', u'id': 1}], u'terminated_at': None, u'ramdisk_id': u'', u'old_flavor': None, u'user_data': u'', u'numa_topology': None, u'cleaned': False, u'deleted_at': None, u'id': 3, u'security_groups': [], u'disable_terminate': False, u'new_flavor': None, u'info_cache': {u'instance_uuid': u'5299fdb3-2219-46f9-8c52-86fce045e372', u'deleted': False, u'network_info': [], u'created_at': u'2017-01-19T06:45:21.000000', u'deleted_at': None, u'updated_at': None}, u'hostname': u'k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll', u'display_description': u'k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll', u'key_data': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\\n', u'deleted': False, u'device_metadata': None, u'default_ephemeral_device': None, u'progress': 0, u'launched_at': None, u'key_name': u'testkey', u'metadata': {}, u'node': None, u'kernel_id': u'', u'host': None, u'display_name': u'k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll', u'task_state': u'scheduling', u'shutdown_terminate': False, u'root_gb': 20, u'created_at': u'2017-01-19T06:45:20.000000', u'memory_mb': 2048, u'image_ref': u'63388f50-4450-4c85-8f3c-197af8f6f6cf', u'root_device_name': None}, u'instance_type': {u'deleted': False, u'ephemeral_gb': 0, u'updated_at': None, u'disabled': False, u'extra_specs': {}, u'rxtx_factor': 1.0, u'is_public': True, u'flavorid': u'2', u'id': 7, u'root_gb': 20, u'deleted_at': None, u'name': u'm1.small', u'created_at': u'2017-01-19T04:24:14.000000', u'memory_mb': 2048, u'vcpus': 1, u'swap': 0, u'vcpu_weight': 0}, u'image': {u'status': u'active', u'deleted': False, u'container_format': u'bare', u'min_ram': 0, u'updated_at': u'2017-01-19T04:28:13.000000', u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', u'min_disk': 0, u'is_public': True, u'deleted_at': None, u'properties': {u'os_distro': u'fedora-atomic'}, u'size': 697925632, u'name': u'fedora-atomic-latest', u'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'created_at': u'2017-01-19T04:22:26.000000', u'disk_format': u'qcow2', u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, u'num_instances': 1}, u'requested_networks': NetworkRequestList(objects=[NetworkRequest]), u'limits': {u'memory_mb': 23812.5, u'disk_gb': 442.0}, u'block_device_mapping': BlockDeviceMappingList(objects=[BlockDeviceMapping(4)]), u'image': {u'status': u'active', u'deleted': False, u'container_format': u'bare', u'min_ram': 0, u'updated_at': u'2017-01-19T04:28:13.000000', u'min_disk': 0, u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', u'is_public': True, u'deleted_at': None, u'properties': {u'os_distro': u'fedora-atomic'}, u'size': 697925632, u'name': u'fedora-atomic-latest', u'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'created_at': u'2017-01-19T04:22:26.000000', u'disk_format': u'qcow2', u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, u'filter_properties': {u'instance_type': Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), u'retry': {u'num_attempts': 1, u'hosts': [[u'vinhnt-LAB', u'vinhnt-LAB']]}, u'limits': {u'memory_mb': 23812.5, u'disk_gb': 442.0}, u'scheduler_hints': {}}, u'instance': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host=None,hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on=None,locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node=None,numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='scheduling',terminated_at=None,updated_at=None,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'admin_password': u'oTH8wdZGi2BD', u'injected_files': [], u'security_groups': [u'default']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "11cea21a-597a-4752-9210-58e595108134": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dce8f50>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 30, u'data': {u'input_data': {u'tuple:(31, True)': {u'status': u'COMPLETE', u'name': u'kube-master', u'reference_id': u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', u'attrs': {}, u'action': u'CREATE', u'id': 31, u'uuid': u'7f1ddeec-eed2-4533-9c33-49037c97677b'}, u'tuple:(45, True)': {u'status': u'COMPLETE', u'name': u'master_wait_handle', u'uuid': u'a2945342-364e-47ff-b85e-031d54510c8f', u'attrs': {u'curl_cli': u\"curl -i -X POST -H 'X-Auth-Token: gAAAAABYgF_Dm_W5wJupTBXAD8rFKYXiBc1NagMibr7j-iElX2tWTD4fvnRcyW0v_qA0AG9Mj83o0N5kF70bzfGyaeP4Z9414BbzRJGe5WFnaE-pPIgA40vMWN4yTws3B7TEV3Mnv0WQfvGcgLo4WcVGJnMb8K-m6bMK7MbHxcpAGcHk5meTeAQ' -H 'Content-Type: application/json' -H 'Accept: application/json' http://10.164.180.85:8004/v1/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/stacks/k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv/c3f7a50b-5fc9-4209-8728-2af4300e42de/resources/master_wait_handle/signal\"}, u'action': u'CREATE', u'id': 45, u'reference_id': u'096c46ddc97142db923b327828ed3ae5'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "51fd2426-079a-4571-bb74-892494e441eb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0e4a46f7-b416-4bfd-a352-9058c6331dde": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "1052b4d9-01c2-4995-bf91-f28ad40d14b8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bd1b1ea0-d248-4346-b2ff-0588c0f27a6c": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dfcbc50>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 10, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'e26ac53a-442d-4077-b980-74afdd7ee184'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f8ecfbae-fa87-4b7f-bbd9-136d62f3fe4d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "40f2066b-396d-4a0d-9bbc-68fc188adfe2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "aba5cd0c-43af-44e7-8713-e554a835e0a4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7a4d9c27-e3d3-4289-9495-541e0ab54e5f": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dfcba90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': 'f1c9e498-41d9-40a0-b89c-5cf02e00b8af'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "09dce5bc-0c8e-4c0f-b9cb-97994bc6c190": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dda5ad0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'2ec045f4-1df3-4e41-8209-1052d932a670'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fb2b44d7-0e1e-4bb7-8863-17c07a872ba7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "22cd2f48-3511-4fb0-83ce-cc60b928b7aa": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bd8c1d60-9de4-475b-8489-1286e2679bf8": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dce3390>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "872bd911-7b0f-43ca-9fd3-32f854565932": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d784600f-e82e-417d-85d4-e5fd9a3c4b33": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cd896e46-e205-428f-bd13-b66c3b8e94f6": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd6f550>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'b2686110-591f-4165-aa8e-46931b6bbf5f'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e454669b-688f-476e-ab35-ac3b209934ed": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6fecafc2-0582-41bd-9851-21dee6fc7e1b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7843a6f9-95b7-4f90-8f56-8efa6b28e2b4": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "f8a234bf-59d8-4708-97db-b03c64219187": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "40cb26f0-2fb4-49ce-a03d-7f3f1536449d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "47f65b61-dbe5-4638-b217-6c2a8c25851f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "64453f99-8faa-405e-8f6a-131940fc0cb3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8e733e61-58db-43b1-891f-005597bb1427": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a3d4a01b-ccc2-4aa9-91bf-6de2699f7df1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e59d8b29-84df-4cc7-9cba-e87e2e03ba8c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "84eae2c4-e05c-4680-9524-5b30ec53167f": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "4a241c51-884e-4f3b-97f2-ea423fbfa125": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, '/networks')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'f55f8258-835a-4732-ba02-0b3c78b6c1c1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7795925e-94d0-4099-b940-81cfcff9cd43": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "30012f79-6dad-4b50-8d26-c31c9a6bfd7c": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd19790>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-disable_selinux-c7cjpdjealiw', u'outputs': [], u'config': u\"#cloud-boothook\\n#!/bin/sh\\n\\nsetenforce 0\\n\\nsed -i '\\n    /^SELINUX=/ s/=.*/=permissive/\\n' /etc/selinux/config\\n\", u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3d5a3504-891d-4c87-84ee-2770c9d24000": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd6f810>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20141016 object at 0x7f952dd6fcd0>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "eef76a49-3cac-4f4d-8ed9-76076d7657ee": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff38003efd0>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ebe73774-7e63-4c4d-94d1-f695ebf3be79": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37ed01f90>, u'5299fdb3-2219-46f9-8c52-86fce045e372')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "618adb14-6414-4a33-87ca-ab53ed945dfe": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "83324d3e-b28f-4ecb-9271-548785dcd7e4": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd6f490>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-add_proxy-iphxvpxfyjdb', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nDOCKER_HTTP_PROXY_CONF=/etc/systemd/system/docker.service.d/http_proxy.conf\\n\\nDOCKER_HTTPS_PROXY_CONF=/etc/systemd/system/docker.service.d/https_proxy.conf\\n\\nDOCKER_NO_PROXY_CONF=/etc/systemd/system/docker.service.d/no_proxy.conf\\n\\nDOCKER_RESTART=0\\n\\nBASH_RC=/etc/bashrc\\n\\nmkdir -p /etc/systemd/system/docker.service.d\\n\\nif [ -n \"$HTTP_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_HTTP_PROXY_CONF\\n    [Service]\\n    Environment=HTTP_PROXY=$HTTP_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x http_proxy=$HTTP_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting http_proxy\"\\n    fi\\nfi\\n\\nif [ -n \"$HTTPS_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_HTTPS_PROXY_CONF\\n    [Service]\\n    Environment=HTTPS_PROXY=$HTTPS_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x https_proxy=$HTTPS_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting https_proxy\"\\n    fi\\nfi\\n\\nif [ -n \"$NO_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_NO_PROXY_CONF\\n    [Service]\\n    Environment=NO_PROXY=$NO_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x no_proxy=$NO_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting no_proxy\"\\n    fi\\nfi\\n\\nif [ \"$DOCKER_RESTART\" -eq 1 ]; then\\n    systemctl daemon-reload\\n    systemctl --no-block restart docker.service\\nfi\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ac815073-d801-4645-b2fb-b73657e50b0b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "67afbb86-41cc-49df-a334-d4b6eb847468": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.list_extensions of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "172df027-e9a2-41aa-97cb-be87a3d93920": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e8d4950>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': InstanceInfoCache(created_at=<?>,deleted=<?>,deleted_at=<?>,instance_uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,network_info=NetworkModel(2c0275e1-3f3e-4ca5-aa69-a0660197e312),updated_at=<?>), u'kwargs': {u'update_cells': True}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cad93bf3-dc42-4a6a-8d4d-ed6e12433623": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e016f10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 15, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'40018db4-87e5-4b4e-b4a0-d80da07e36a6'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1952044e-8d52-4bc2-9003-01884639a3d4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8a4f8c6a-7065-44c4-bdac-278e6ee63507": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e29aa10>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': ComputeNode(cpu_allocation_ratio=16.0,cpu_info='{\"vendor\": \"Intel\", \"model\": \"Broadwell\", \"arch\": \"x86_64\", \"features\": [\"smap\", \"avx\", \"clflush\", \"sep\", \"rtm\", \"vme\", \"dtes64\", \"invpcid\", \"tsc\", \"fsgsbase\", \"xsave\", \"pge\", \"vmx\", \"erms\", \"xtpr\", \"cmov\", \"hle\", \"smep\", \"ssse3\", \"est\", \"pat\", \"monitor\", \"smx\", \"pbe\", \"lm\", \"msr\", \"adx\", \"3dnowprefetch\", \"nx\", \"fxsr\", \"syscall\", \"tm\", \"sse4.1\", \"pae\", \"sse4.2\", \"pclmuldq\", \"acpi\", \"fma\", \"tsc-deadline\", \"mmx\", \"osxsave\", \"cx8\", \"mce\", \"de\", \"tm2\", \"ht\", \"pse\", \"lahf_lm\", \"abm\", \"rdseed\", \"popcnt\", \"mca\", \"pdpe1gb\", \"apic\", \"sse\", \"f16c\", \"ds\", \"mpx\", \"invtsc\", \"pni\", \"rdtscp\", \"avx2\", \"aes\", \"sse2\", \"ss\", \"ds_cpl\", \"bmi1\", \"bmi2\", \"pcid\", \"fpu\", \"cx16\", \"pse36\", \"mtrr\", \"movbe\", \"pdcm\", \"rdrand\", \"x2apic\"], \"topology\": {\"cores\": 4, \"cells\": 1, \"threads\": 2, \"sockets\": 1}}',created_at=2017-01-19T04:24:03Z,current_workload=0,deleted=False,deleted_at=None,disk_allocation_ratio=1.0,disk_available_least=351,free_disk_gb=382,free_ram_mb=9219,host='vinhnt-LAB',host_ip=10.164.180.85,hypervisor_hostname='vinhnt-LAB',hypervisor_type='QEMU',hypervisor_version=2005000,id=1,local_gb=442,local_gb_used=60,memory_mb=15875,memory_mb_used=6656,metrics='[]',numa_topology='{\"nova_object.version\": \"1.2\", \"nova_object.changes\": [\"cells\"], \"nova_object.name\": \"NUMATopology\", \"nova_object.data\": {\"cells\": [{\"nova_object.version\": \"1.2\", \"nova_object.changes\": [\"cpu_usage\", \"memory_usage\", \"cpuset\", \"pinned_cpus\", \"siblings\", \"memory\", \"mempages\", \"id\"], \"nova_object.name\": \"NUMACell\", \"nova_object.data\": {\"cpu_usage\": 0, \"memory_usage\": 0, \"cpuset\": [0, 1, 2, 3, 4, 5, 6, 7], \"pinned_cpus\": [], \"siblings\": [[1, 5], [2, 6], [3, 7], [0, 4]], \"memory\": 15875, \"mempages\": [{\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"used\", \"reserved\", \"size_kb\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 4064230, \"reserved\": 0, \"size_kb\": 4}, \"nova_object.namespace\": \"nova\"}, {\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"used\", \"reserved\", \"size_kb\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 0, \"reserved\": 0, \"size_kb\": 2048}, \"nova_object.namespace\": \"nova\"}, {\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"used\", \"reserved\", \"size_kb\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 0, \"reserved\": 0, \"size_kb\": 1048576}, \"nova_object.namespace\": \"nova\"}], \"id\": 0}, \"nova_object.namespace\": \"nova\"}]}, \"nova_object.namespace\": \"nova\"}',pci_device_pools=PciDevicePoolList,ram_allocation_ratio=1.5,running_vms=3,service_id=None,stats={io_workload='1',num_instances='3',num_os_type_None='3',num_proj_f789928a4f254f96965ff7f3dedd02be='3',num_task_None='3',num_vm_active='2',num_vm_building='1'},supported_hv_specs=[HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec],updated_at=2017-01-19T06:44:30Z,uuid=2a21119c-0f53-4ec4-b7b6-8390910f2abc,vcpus=8,vcpus_used=3), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2ef08dcd-decc-4967-ac9f-47211742d882": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "ad3c4453-8aed-486d-9a90-049ca4846cdc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "47401d53-193d-42d9-89e3-15bdac7b98d9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3a7bc9e9-0cce-4a4f-a398-53958cfb3600": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c174f3c6-dbfe-400d-9c5d-fad21da8ddc7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "32a4f14c-4e38-44a8-bee0-ee4c3866c116": {
            "function": {
                "args": "(<nova.compute.rpcapi.ComputeAPI object at 0x7ff381184990>, <nova.context.RequestContext object at 0x7ff37f1ff210>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=<?>,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=<?>,host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=<?>,launch_index=0,launched_at=2017-01-19T06:43:06Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node='vinhnt-LAB',numa_topology=<?>,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=<?>,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:43:07Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='active'), u'/dev/vdb', u'82c28688-a34b-4bc3-89c6-fdc04285570b')", 
                "name": "nova.compute.rpcapi.ComputeAPI.reserve_block_device_name", 
                "kwargs": "{'disk_bus': None, 'device_type': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a4a3bd43-a1e6-4a30-9e17-bec53e6a952d": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dbc2890>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': '3516bced-01b7-4999-b662-5216fae3ffd2'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "54aa4f0a-f081-41c3-85df-b47039ebc157": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "8988831e-1e43-4fb5-a8f8-0ad5e4c2e05b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "53acc128-cbf5-416c-953d-cf9d4d7baacb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper.list_networks of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3d736beb-1f7b-4809-a424-5f859c78f068": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8bab3aca-383f-4edf-ba06-aa062dafc68e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9b53f32a-57fb-4808-af1c-c0e82524ae31": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "eba9373d-270c-4250-8b67-18935e61c5fb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "169c18f3-1fd2-49c4-a8f3-a013f75d71f0": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd6f810>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "78128654-9496-49b4-9655-8d2dd2870f38": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fa85e8a2-965a-47a2-8d13-ee0c14edbdad": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d67469a4-2f20-472d-a316-f414d726ecbf": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dfd9a10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 38, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "59428c71-536e-4e8c-aa46-e14ae2d6cf05": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd50950>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 2, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 3600}, u'environment_files': None, u'parent_resource_name': u'0', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 13, u'owner_id': u'1af0458e-4d20-4c04-9b7f-d4038c206c12'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "91b3bcf2-4f45-488d-845d-24a162073f77": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "36b9cd81-4497-4711-886d-75862e19e6fb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, {'port': {'device_owner': 'compute:None', 'binding:host_id': u'vinhnt-LAB', 'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}})", 
                "name": "nova.network.neutronv2.api.ClientWrapper.serialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9d565e87-41b6-487f-ae1b-c80cb2a2fb1e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "77a6b050-cf31-4bcd-9cb7-3cade53065f8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f5518cbf-301f-4928-b275-278cbbb8a090": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4f59a050>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDeviceList': u'1.3', u'PciDevice': u'1.5'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'5299fdb3-2219-46f9-8c52-86fce045e372'], u'objname': u'PciDeviceList', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e28c6b9a-2f46-4e08-8605-98d9c4eec8c1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2afa7a64-c62b-4fe5-a58f-548373afff7d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5f02afe8-c4f7-4d45-a04d-de3696187b81": {
            "function": {
                "args": "(<nova.compute.manager.ComputeManager object at 0x7f67f7273f10>, <nova.context.RequestContext object at 0x7f67cc0a6d10>)", 
                "name": "nova.compute.manager.ComputeManager.build_and_run_instance", 
                "kwargs": "{u'node': u'vinhnt-LAB', u'request_spec': {u'instance_properties': {u'vm_state': u'building', u'pci_requests': {u'instance_uuid': u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', u'requests': []}, u'availability_zone': None, u'ephemeral_gb': 0, u'ec2_ids': {u'instance_id': u'i-00000002', u'kernel_id': None, u'ami_id': u'ami-00000004', u'ramdisk_id': None}, u'vm_mode': None, u'flavor': {u'deleted': False, u'ephemeral_gb': 0, u'updated_at': None, u'disabled': False, u'extra_specs': {}, u'rxtx_factor': 1.0, u'is_public': True, u'flavorid': u'2', u'id': 7, u'root_gb': 20, u'deleted_at': None, u'name': u'm1.small', u'created_at': u'2017-01-19T04:24:14.000000', u'memory_mb': 2048, u'vcpus': 1, u'swap': 0, u'vcpu_weight': 0}, u'reservation_id': u'r-kz80mc8r', u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'uuid': u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', u'default_swap_device': None, u'launched_on': None, u'power_state': 0, u'project_id': u'f789928a4f254f96965ff7f3dedd02be', u'access_ip_v6': None, u'access_ip_v4': None, u'vcpu_model': None, u'instance_type_id': 7, u'updated_at': None, u'system_metadata': {u'instance_type_vcpu_weight': 0, u'instance_type_root_gb': 20, u'instance_type_id': 7, u'instance_type_name': u'm1.small', u'instance_type_rxtx_factor': 1.0, u'instance_type_vcpus': 1, u'image_min_ram': u'0', u'image_disk_format': u'qcow2', u'image_os_distro': u'fedora-atomic', u'instance_type_memory_mb': 2048, u'instance_type_swap': 0, u'instance_type_ephemeral_gb': 0, u'instance_type_flavorid': u'2', u'image_container_format': u'bare', u'image_min_disk': u'20', u'image_base_image_ref': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, u'cell_name': None, u'ephemeral_key_uuid': None, u'locked': False, u'name': u'instance-00000002', u'locked_by': None, u'launch_index': 0, u'vcpus': 1, u'architecture': None, u'auto_disk_config': False, u'os_type': None, u'config_drive': u'', u'keypairs': [{u'public_key': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\\n', u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'name': u'testkey', u'deleted': False, u'created_at': u'2017-01-19T06:39:24.000000', u'updated_at': None, u'fingerprint': u'd4:e3:3f:e5:f8:ec:1c:8b:bc:cb:7a:5c:53:c4:93:f9', u'deleted_at': None, u'type': u'ssh', u'id': 1}], u'terminated_at': None, u'ramdisk_id': u'', u'old_flavor': None, u'user_data': u'', u'numa_topology': None, u'cleaned': False, u'deleted_at': None, u'id': 2, u'security_groups': [], u'disable_terminate': False, u'new_flavor': None, u'info_cache': {u'instance_uuid': u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', u'deleted': False, u'network_info': [], u'created_at': u'2017-01-19T06:42:20.000000', u'deleted_at': None, u'updated_at': None}, u'hostname': u'k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm', u'display_description': u'k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm', u'key_data': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\\n', u'deleted': False, u'device_metadata': None, u'default_ephemeral_device': None, u'progress': 0, u'launched_at': None, u'key_name': u'testkey', u'metadata': {}, u'node': None, u'kernel_id': u'', u'host': None, u'display_name': u'k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm', u'task_state': u'scheduling', u'shutdown_terminate': False, u'root_gb': 20, u'created_at': u'2017-01-19T06:42:20.000000', u'memory_mb': 2048, u'image_ref': u'63388f50-4450-4c85-8f3c-197af8f6f6cf', u'root_device_name': None}, u'instance_type': {u'deleted': False, u'ephemeral_gb': 0, u'updated_at': None, u'disabled': False, u'extra_specs': {}, u'rxtx_factor': 1.0, u'is_public': True, u'flavorid': u'2', u'id': 7, u'root_gb': 20, u'deleted_at': None, u'name': u'm1.small', u'created_at': u'2017-01-19T04:24:14.000000', u'memory_mb': 2048, u'vcpus': 1, u'swap': 0, u'vcpu_weight': 0}, u'image': {u'status': u'active', u'deleted': False, u'container_format': u'bare', u'min_ram': 0, u'updated_at': u'2017-01-19T04:28:13.000000', u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', u'min_disk': 0, u'is_public': True, u'deleted_at': None, u'properties': {u'os_distro': u'fedora-atomic'}, u'size': 697925632, u'name': u'fedora-atomic-latest', u'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'created_at': u'2017-01-19T04:22:26.000000', u'disk_format': u'qcow2', u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, u'num_instances': 1}, u'requested_networks': NetworkRequestList(objects=[NetworkRequest]), u'limits': {u'memory_mb': 23812.5, u'disk_gb': 442.0}, u'block_device_mapping': BlockDeviceMappingList(objects=[BlockDeviceMapping(2)]), u'image': {u'status': u'active', u'deleted': False, u'container_format': u'bare', u'min_ram': 0, u'updated_at': u'2017-01-19T04:28:13.000000', u'min_disk': 0, u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', u'is_public': True, u'deleted_at': None, u'properties': {u'os_distro': u'fedora-atomic'}, u'size': 697925632, u'name': u'fedora-atomic-latest', u'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'created_at': u'2017-01-19T04:22:26.000000', u'disk_format': u'qcow2', u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, u'filter_properties': {u'instance_type': Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), u'retry': {u'num_attempts': 1, u'hosts': [[u'vinhnt-LAB', u'vinhnt-LAB']]}, u'limits': {u'memory_mb': 23812.5, u'disk_gb': 442.0}, u'scheduler_hints': {}}, u'instance': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host=None,hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on=None,locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node=None,numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='scheduling',terminated_at=None,updated_at=None,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'admin_password': u'THgSMb6tDDNB', u'injected_files': [], u'security_groups': [u'default']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "06a62774-abfa-4a44-8218-95ea24a6d870": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.put of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ac797260-52d5-401f-8843-7419368dc217": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b984270f-2ec0-4138-baed-a77a8b6c3101": {
            "function": {
                "args": "(<nova.image.api.API object at 0x7ff3812e2d50>, <nova.context.RequestContext object at 0x7ff37ee8d090>, u'63388f50-4450-4c85-8f3c-197af8f6f6cf')", 
                "name": "nova.image.api.API.get", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b4cbc7d4-d49b-41bb-9518-1e9bd10c91c6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'network_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', 'device_owner': 'network:dhcp'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9b269858-cc1a-4731-955f-5773525546cb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fbb2e829-651d-4edd-8dea-404711a787ce": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a14ef1ba-3be5-4dc3-bf62-0c18e366ae2c": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e189490>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 45, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ed0c88c3-9436-4917-b0f1-4221445b9df1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>, u'{\"port\": {\"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"binding:vnic_type\": \"normal\"}}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ec975a4f-3f8b-4b65-9633-06d0d0c4e6f7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d485c64e-70b5-4466-b657-0346760033c3": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e640a50>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDevicePoolList': u'1.1', u'ServiceList': u'1.19', u'PciDevicePool': u'1.1', u'Service': u'1.20', u'TagList': u'1.1', u'InstancePCIRequests': u'1.1', u'VirtCPUModel': u'1.0', u'MigrationContext': u'1.1', u'SecurityGroup': u'1.2', u'Instance': u'2.3', u'KeyPair': u'1.4', u'KeyPairList': u'1.3', u'DeviceMetadata': u'1.0', u'InstancePCIRequest': u'1.1', u'EC2Ids': u'1.0', u'InstanceInfoCache': u'1.5', u'VirtCPUFeature': u'1.0', u'Flavor': u'1.1', u'SecurityGroupList': u'1.0', u'PciDevice': u'1.5', u'VirtCPUTopology': u'1.0', u'InstanceNUMACell': u'1.3', u'DeviceBus': u'1.0', u'ComputeNode': u'1.16', u'InstanceFault': u'1.2', u'Tag': u'1.1', u'HVSpec': u'1.2', u'InstanceDeviceMetadata': u'1.0', u'InstanceNUMATopology': u'1.3', u'PciDeviceList': u'1.3'}, u'objmethod': u'get_by_uuid', u'args': [], u'objname': u'Instance', u'kwargs': {u'uuid': u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', u'expected_attrs': [u'flavor', u'system_metadata']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ffe24c49-6476-4524-b719-0af82de927a6": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "2bb9463b-a7fd-446e-9602-facdbee3945d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>, 'GET', '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c31e9592-2485-4248-83d9-ab757c493f65": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd1c250>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-configure_kubernetes-cxdwzovexofb', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\necho \"configuring kubernetes (master)\"\\n\\nif [ -z \"$KUBE_NODE_IP\" ]; then\\n    # FIXME(yuanying): Set KUBE_NODE_IP correctly\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nsed -i \\'\\n    /^KUBE_ALLOW_PRIV=/ s/=.*/=\"--allow-privileged=\\'\"$KUBE_ALLOW_PRIV\"\\'\"/\\n\\' /etc/kubernetes/config\\n\\nKUBE_API_ARGS=\"--runtime-config=api/all=true\"\\nif [ \"$TLS_DISABLED\" == \"True\" ]; then\\n    KUBE_API_ADDRESS=\"--insecure-bind-address=0.0.0.0 --insecure-port=$KUBE_API_PORT\"\\nelse\\n    KUBE_API_ADDRESS=\"--bind-address=0.0.0.0 --secure-port=$KUBE_API_PORT\"\\n    # insecure port is used internaly\\n    KUBE_API_ADDRESS=\"$KUBE_API_ADDRESS --insecure-port=8080\"\\n    KUBE_API_ARGS=\"$KUBE_API_ARGS --tls-cert-file=/srv/kubernetes/server.crt\"\\n    KUBE_API_ARGS=\"$KUBE_API_ARGS --tls-private-key-file=/srv/kubernetes/server.key\"\\n    KUBE_API_ARGS=\"$KUBE_API_ARGS --client-ca-file=/srv/kubernetes/ca.crt\"\\nfi\\n\\nsed -i \\'\\n    /^KUBE_API_ADDRESS=/ s/=.*/=\"\\'\"${KUBE_API_ADDRESS}\"\\'\"/\\n    /^KUBE_SERVICE_ADDRESSES=/ s|=.*|=\"--service-cluster-ip-range=\\'\"$PORTAL_NETWORK_CIDR\"\\'\"|\\n    /^KUBE_API_ARGS=/ s/KUBE_API_ARGS.//\\n    /^KUBE_ETCD_SERVERS=/ s/=.*/=\"--etcd-servers=http:\\\\/\\\\/127.0.0.1:2379\"/\\n    /^KUBE_ADMISSION_CONTROL=/ s/=.*/=\"\"/\\n\\' /etc/kubernetes/apiserver\\ncat << _EOC_ >> /etc/kubernetes/apiserver\\n#Uncomment the following line to disable Load Balancer feature\\nKUBE_API_ARGS=\"$KUBE_API_ARGS\"\\n#Uncomment the following line to enable Load Balancer feature\\n#KUBE_API_ARGS=\"$KUBE_API_ARGS --cloud-config=/etc/sysconfig/kube_openstack_config --cloud-provider=openstack\"\\n_EOC_\\n\\nsed -i \\'\\n    /^KUBELET_ADDRESSES=/ s/=.*/=\"--machines=\\'\"\"\\'\"/\\n    /^KUBE_CONTROLLER_MANAGER_ARGS=/ s/KUBE_CONTROLLER_MANAGER_ARGS.*/#Uncomment the following line to enable Kubernetes Load Balancer feature \\\\n#KUBE_CONTROLLER_MANAGER_ARGS=\"--cloud-config=\\\\/etc\\\\/sysconfig\\\\/kube_openstack_config --cloud-provider=openstack\"/\\n\\' /etc/kubernetes/controller-manager\\n\\nKUBELET_ARGS=\"--register-node=true --register-schedulable=false --config=/etc/kubernetes/manifests --hostname-override=$KUBE_NODE_IP\"\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    KUBELET_ARGS=\"${KUBELET_ARGS} --pod-infra-container-image=${INSECURE_REGISTRY_URL}/google_containers/pause\\\\:0.8.0\"\\n    echo \"INSECURE_REGISTRY=\\'--insecure-registry ${INSECURE_REGISTRY_URL}\\'\" >> /etc/sysconfig/docker\\nfi\\n\\nsed -i \\'\\n    /^KUBELET_ADDRESS=/ s/=.*/=\"--address=0.0.0.0\"/\\n    /^KUBELET_HOSTNAME=/ s/=.*/=\"\"/\\n    /^KUBELET_ARGS=/ s|=.*|=\\'\"$KUBELET_ARGS\"\\'|\\n\\' /etc/kubernetes/kubelet\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0e2cf0ea-3e54-41ba-8901-51f324e8fd0b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9b0a016c-6868-45d1-9bda-3a6b4776520f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3d257f7d-3bcd-4f16-a064-5f0cc31f9f96": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cfd0ea31-d0cf-4503-8898-ffc0378b0dce": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "95128bdf-6b17-4ec1-8f91-f1fab04d1ab8": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "46bbd30b-acfd-418d-832c-131c2c69da5d": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ded6dd0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8d8a98fd-36ab-4b75-8193-03abbfc031c7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2bf69145-fd47-41ec-b340-867ca0e1750d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "80b12b96-01b3-4919-92df-220cf815af1f": {
            "function": {
                "args": "(<cinder.scheduler.manager.SchedulerManager object at 0x7fae70c79f90>, <cinder.context.RequestContext object at 0x7fae4f6b71d0>)", 
                "name": "cinder.scheduler.manager.SchedulerManager.create_volume", 
                "kwargs": "{u'volume': Volume(_name_id=None,admin_metadata=<?>,attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:42:12Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-docker_volume-4xhyfkrl657w',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host=None,id=82c28688-a34b-4bc3-89c6-fdc04285570b,launched_at=None,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth=None,provider_geometry=None,provider_id=None,provider_location=None,replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=None,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='creating',terminated_at=None,updated_at=None,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=<?>,volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), u'image_id': None, u'request_spec': RequestSpec(CG_backend=<?>,cgsnapshot_id=None,consistencygroup_id=None,group_backend=<?>,group_id=None,image_id=None,snapshot_id=None,source_replicaid=None,source_volid=None,volume=Volume(82c28688-a34b-4bc3-89c6-fdc04285570b),volume_id=82c28688-a34b-4bc3-89c6-fdc04285570b,volume_properties=VolumeProperties,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32)), u'filter_properties': {}, u'snapshot_id': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d73fafc3-9a8a-4f3f-adc6-eb8db206b70d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1186afb7-d39d-40b2-9553-260c96f31246": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "791948dc-192f-441f-bdba-2dd6959b2bcf": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>, u'{\"port\": {\"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"binding:vnic_type\": \"normal\"}}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "551b69ed-bf81-4c8f-aee5-33ed90b11716": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1949dae3-d975-46c6-b41c-27138066f94f": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ddafd90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "49b65a6a-47d3-4eb9-b91d-c3612295f7cd": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ded6dd0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': 'f9c5034d-b414-402c-8e7b-ba7a0ba02f1b'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0468b5fa-2864-4c2f-9bcc-f23ec8a1bd4e": {
            "function": {
                "args": "(<nova.scheduler.rpcapi.SchedulerAPI object at 0x7f67efae2350>, <nova.context.RequestContext object at 0x7f678d9c26d0>, 'vinhnt-LAB', InstanceList(objects=[Instance(5299fdb3-2219-46f9-8c52-86fce045e372)]))", 
                "name": "nova.scheduler.rpcapi.SchedulerAPI.update_instance_info", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "46bb513a-62b5-4880-80c0-844e6a062257": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6a6d4db3-d9eb-4117-9e25-93a1104cb030": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fd212271-0b3f-42b1-9799-25df43ce525e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0aad6ebe-77c9-4c2a-8105-3f6fe3a2cd4c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:cf:f0:f1\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:45:26Z\", \"device_owner\": \"compute:None\", \"revision_number\": 10, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.3\"}], \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"security_groups\": [\"a194cf94-7b7a-42dd-86a1-306e04d6c859\"], \"device_id\": \"5299fdb3-2219-46f9-8c52-86fce045e372\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_eth0-le73kun3tjst\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:cf:f0:f1\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:13Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f4726f30-8af4-43e7-ade2-e8bca500b104": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a786898f-ddb6-4097-b6f9-72ea8955a1ba": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ff149382-3879-4c91-a05b-b61dffd63bd8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4c0b444b-15e1-49df-98e6-8ed40821dae7": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dcb75d0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'405c09c8-3c5e-4995-b15e-5331b7bcf578'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6eedba43-5988-4dff-8959-5a1c8563c363": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_subnets", 
                "kwargs": "{'id': [u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "981df0d9-a0ac-48bb-b8b1-2da7f536894f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2331e532-8d81-4360-9670-ce53131895cf": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b9feab9f-b6d7-4aab-b444-44d46d9da7ed": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37eeb3fd0>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1e7b4109-eb0e-4451-ad52-fd94598173f8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7407a425-2028-4ade-8462-3e17b07ede6f": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e7cdf50>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='block_device_mapping',terminated_at=None,updated_at=2017-01-19T06:42:22Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e56df27e-09bc-4c18-bdfb-dc0884733273": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ddf2dd0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': u'54a4807d-a014-400b-a595-790da5540976'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "aa3ab408-adea-4609-8eea-d80dc9bb7c13": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e2f5c10>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host=None,hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on=None,locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node=None,numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=None,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'kwargs': {u'expected_task_state': [u'scheduling', None]}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3696bbe7-3be3-45d0-9af4-f686b608df79": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37ee8d090>, Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), {u'status': u'active', 'properties': {u'os_distro': u'fedora-atomic'}, 'name': u'fedora-atomic-latest', 'deleted': False, 'container_format': u'bare', u'created_at': datetime.datetime(2017, 1, 19, 4, 22, 26, tzinfo=<iso8601.Utc>), 'disk_format': u'qcow2', u'updated_at': datetime.datetime(2017, 1, 19, 4, 28, 13, tzinfo=<iso8601.Utc>), u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf', u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', 'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'min_disk': 0, 'is_public': True, 'deleted_at': None, u'min_ram': 0, u'size': 697925632}, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=<?>,cleaned=<?>,config_drive='',created_at=<?>,default_ephemeral_device=<?>,default_swap_device=<?>,deleted=<?>,deleted_at=<?>,device_metadata=<?>,disable_terminate=<?>,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=<?>,fault=<?>,flavor=<?>,host=<?>,hostname=<?>,id=<?>,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=<?>,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=<?>,launched_at=<?>,launched_on=<?>,locked=False,locked_by=<?>,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node=<?>,numa_topology=None,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name=None,root_gb=20,security_groups=<?>,services=<?>,shutdown_terminate=<?>,system_metadata={},tags=<?>,task_state=<?>,terminated_at=<?>,updated_at=<?>,user_data='Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT02ODgwNTk4NzM0MDE5NzI1ODA2PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTY4ODA1OTg3MzQwMTk3MjU4MDY9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojY2xvdWQtYm9vdGhvb2sKIyEvYmluL3NoCgpzZXRlbmZvcmNlIDAKCnNlZCAtaSAnCiAgICAvXlNFTElOVVg9LyBzLz0uKi89cGVybWlzc2l2ZS8KJyAvZXRjL3NlbGludXgvY29uZmlnCgotLT09PT09PT09PT09PT09PTY4ODA1OTg3MzQwMTk3MjU4MDY9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojY2xvdWQtY29uZmlnCm1lcmdlX2hvdzogZGljdChyZWN1cnNlX2FycmF5KStsaXN0KGFwcGVuZCkKd3JpdGVfZmlsZXM6CiAgLSBwYXRoOiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIEtVQkVfQUxMT1dfUFJJVj0idHJ1ZSIKICAgICAgS1VCRV9NQVNURVJfSVA9IjEwLjAuMC45IgogICAgICBLVUJFX0FQSV9QT1JUPSI4MDgwIgogICAgICBLVUJFX05PREVfUFVCTElDX0lQPSIxNzIuMjQuNC40IgogICAgICBLVUJFX05PREVfSVA9IjEwLjAuMC4zIgogICAgICBFVENEX1NFUlZFUl9JUD0iMTAuMC4wLjkiCiAgICAgIEVOQUJMRV9DSU5ERVI9IiRFTkFCTEVfQ0lOREVSIgogICAgICBET0NLRVJfVk9MVU1FPSIxYWQ0NDc5MS03MDRmLTQxNWEtYTkxNS1mYjRiYTJjN2M4N2UiCiAgICAgIERPQ0tFUl9WT0xVTUVfU0laRT0iMyIKICAgICAgRE9DS0VSX1NUT1JBR0VfRFJJVkVSPSJkZXZpY2VtYXBwZXIiCiAgICAgIE5FVFdPUktfRFJJVkVSPSJmbGFubmVsIgogICAgICBSRUdJU1RSWV9FTkFCTEVEPSJGYWxzZSIKICAgICAgUkVHSVNUUllfUE9SVD0iNTAwMCIKICAgICAgU1dJRlRfUkVHSU9OPSIiCiAgICAgIFJFR0lTVFJZX0NPTlRBSU5FUj0iY29udGFpbmVyIgogICAgICBSRUdJU1RSWV9JTlNFQ1VSRT0iVHJ1ZSIKICAgICAgUkVHSVNUUllfQ0hVTktTSVpFPSI1MjQyODgwIgogICAgICBUTFNfRElTQUJMRUQ9IlRydWUiCiAgICAgIENMVVNURVJfVVVJRD0iOWE4ZWEzN2MtZTlkMy00YTdhLWEyYjEtZGMxNjRmYjIxZDY3IgogICAgICBNQUdOVU1fVVJMPSJodHRwOi8vMTAuMTY0LjE4MC44NTo5NTExL3YxIgogICAgICBBVVRIX1VSTD0iaHR0cDovLzEwLjE2NC4xODAuODU6NTAwMC92MyIKICAgICAgVVNFUk5BTUU9ImFkbWluIgogICAgICBQQVNTV09SRD0iQ2hhbmdlTWUiCiAgICAgIFZPTFVNRV9EUklWRVI9ImNpbmRlciIKICAgICAgUkVHSU9OX05BTUU9IlJlZ2lvbk9uZSIKICAgICAgVEVOQU5UX05BTUU9ImY3ODk5MjhhNGYyNTRmOTY5NjVmZjdmM2RlZGQwMmJlIgogICAgICBIVFRQX1BST1hZPSJodHRwOi8vMTAuMTY0LjE3Ny4xNjg6ODA4MC8iCiAgICAgIEhUVFBTX1BST1hZPSJodHRwOi8vMTAuMTY0LjE3Ny4xNjg6ODA4MC8iCiAgICAgIE5PX1BST1hZPSIxMC4xNjQuMTgwLjg1LDEwLjAuMC4wLzgsMTcyLjAuMC4wLzgiCiAgICAgIFdBSVRfQ1VSTD0iY3VybCAtaSAtWCBQT1NUIC1IICdYLUF1dGgtVG9rZW46IGdBQUFBQUJZZ0dCNW5vWEREU2JqOE5nM2VIcEhnQ2JPWU03ekVnbHNPZ2dpZkN6Q0JPY2xDY20zLU9OcE1WWUVaLTM2Y1dLTUJQX05ZN05HZmFYdjhXUE9MeHVITFpFUmJTWXhZdEt6WTBWazktcE5ScDdUUjlIRVd6ZHlXUV95WTAxTDBBVmR0SDJjU1F0U21Tbldnc3BVc3lwcXNMV0xxR3hUemlhbmZONDBDcnFJU3EyWlppUScgLUggJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicgLUggJ0FjY2VwdDogYXBwbGljYXRpb24vanNvbicgaHR0cDovLzEwLjE2NC4xODAuODU6ODAwNC92MS8zZmJkNmExZmQ1ZjA0ZTMyYmY1ODRkZmQ0YjRmOWM1ZS9zdGFja3MvazhzLWNsdXN0ZXItdWk0ZjRvZ2V6aG03LWt1YmVfbWluaW9ucy0zZDQ2c3c1cDRna3YtMC1tdGZ1aHZ6d2p2anIvMDEzNTYzNjAtYTI4My00NTVkLWI4NzMtY2FmZmE3YmM0M2M3L3Jlc291cmNlcy9taW5pb25fd2FpdF9oYW5kbGUvc2lnbmFsIgogICAgICBLVUJFX1ZFUlNJT049InYxLjIuMCIKICAgICAgVFJVU1RFRV9VU0VSX0lEPSI0NGY3NjNlNTcyNzc0N2VlYmE2ZjMwOTVkN2E4Njk1MiIKICAgICAgVFJVU1RFRV9VU0VSTkFNRT0iOWE4ZWEzN2MtZTlkMy00YTdhLWEyYjEtZGMxNjRmYjIxZDY3IgogICAgICBUUlVTVEVFX1BBU1NXT1JEPSI3QlhwOUFCcEJnZUs1emF0ZFQiCiAgICAgIFRSVVNURUVfRE9NQUlOX0lEPSI4OWM4ZWFmMWM0ZWE0YmFhODUyMWFiNzg2ODY1Zjg1NyIKICAgICAgVFJVU1RfSUQ9ImE2ZjVjZGQzZWY4MTRjMzJiZDM2YjEzMzc4MTc4NmJjIgogICAgICBJTlNFQ1VSRV9SRUdJU1RSWV9VUkw9IiIKCi0tPT09PT09PT09PT09PT09Njg4MDU5ODczNDAxOTcyNTgwNj09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiNjbG91ZC1jb25maWcKbWVyZ2VfaG93OiBkaWN0KHJlY3Vyc2VfYXJyYXkpK2xpc3QoYXBwZW5kKQp3cml0ZV9maWxlczoKICAtIHBhdGg6IC9zcnYva3ViZXJuZXRlcy9rdWJlY29uZmlnLnlhbWwKICAgIG93bmVyOiAicm9vdDpyb290IgogICAgcGVybWlzc2lvbnM6ICIwNjQ0IgogICAgY29udGVudDogfAogICAgICBhcGlWZXJzaW9uOiB2MQogICAgICBraW5kOiBDb25maWcKICAgICAgdXNlcnM6CiAgICAgIC0gbmFtZToga3ViZWNsaWVudAogICAgICAgIHVzZXI6CiAgICAgICAgICBjbGllbnQtY2VydGlmaWNhdGU6IENMSUVOVF9DRVJUCiAgICAgICAgICBjbGllbnQta2V5OiBDTElFTlRfS0VZCiAgICAgIGNsdXN0ZXJzOgogICAgICAtIG5hbWU6IGt1YmVybmV0ZXMKICAgICAgICBjbHVzdGVyOgogICAgICAgICAgY2VydGlmaWNhdGUtYXV0aG9yaXR5OiBDQV9DRVJUCiAgICAgIGNvbnRleHRzOgogICAgICAtIGNvbnRleHQ6CiAgICAgICAgICBjbHVzdGVyOiBrdWJlcm5ldGVzCiAgICAgICAgICB1c2VyOiBrdWJlY2xpZW50CiAgICAgICAgbmFtZTogc2VydmljZS1hY2NvdW50LWNvbnRleHQKICAgICAgY3VycmVudC1jb250ZXh0OiBzZXJ2aWNlLWFjY291bnQtY29udGV4dAoKLS09PT09PT09PT09PT09PT02ODgwNTk4NzM0MDE5NzI1ODA2PT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgojIENvcHlyaWdodCAyMDE0IFRoZSBLdWJlcm5ldGVzIEF1dGhvcnMgQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwojIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KIyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKIwojICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKIwojIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKIyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAojIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgojIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKIyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCnNldCAtbyBlcnJleGl0CnNldCAtbyBub3Vuc2V0CnNldCAtbyBwaXBlZmFpbAoKaWYgWyAiJFRMU19ESVNBQkxFRCIgPT0gIlRydWUiIF07IHRoZW4KICAgIGV4aXQgMApmaQoKY2VydF9kaXI9L3Nydi9rdWJlcm5ldGVzCmNlcnRfY29uZl9kaXI9JHtjZXJ0X2Rpcn0vY29uZgoKbWtkaXIgLXAgIiRjZXJ0X2RpciIKbWtkaXIgLXAgIiRjZXJ0X2NvbmZfZGlyIgoKQ0FfQ0VSVD0kY2VydF9kaXIvY2EuY3J0CkNMSUVOVF9DRVJUPSRjZXJ0X2Rpci9jbGllbnQuY3J0CkNMSUVOVF9DU1I9JGNlcnRfZGlyL2NsaWVudC5jc3IKQ0xJRU5UX0tFWT0kY2VydF9kaXIvY2xpZW50LmtleQoKI0dldCBhIHRva2VuIGJ5IHVzZXIgY3JlZGVudGlhbHMgYW5kIHRydXN0CmF1dGhfanNvbj0kKGNhdCA8PCBFT0YKewogICAgImF1dGgiOiB7CiAgICAgICAgImlkZW50aXR5IjogewogICAgICAgICAgICAibWV0aG9kcyI6IFsKICAgICAgICAgICAgICAgICJwYXNzd29yZCIKICAgICAgICAgICAgXSwKICAgICAgICAgICAgInBhc3N3b3JkIjogewogICAgICAgICAgICAgICAgInVzZXIiOiB7CiAgICAgICAgICAgICAgICAgICAgImlkIjogIiRUUlVTVEVFX1VTRVJfSUQiLAogICAgICAgICAgICAgICAgICAgICJwYXNzd29yZCI6ICIkVFJVU1RFRV9QQVNTV09SRCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInNjb3BlIjogewogICAgICAgICAgICAiT1MtVFJVU1Q6dHJ1c3QiOiB7CiAgICAgICAgICAgICAgICAiaWQiOiAiJFRSVVNUX0lEIgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9CkVPRgopCgojdHJ1c3QgaXMgaW50cm9kdWNlZCBpbiBLZXlzdG9uZSB2MyB2ZXJzaW9uCkFVVEhfVVJMPSR7QVVUSF9VUkwvdjIuMC92M30KY29udGVudF90eXBlPSdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nCnVybD0iJEFVVEhfVVJML2F1dGgvdG9rZW5zIgpVU0VSX1RPS0VOPWBjdXJsIC1rIC1zIC1pIC1YIFBPU1QgLUggIiRjb250ZW50X3R5cGUiIC1kICIkYXV0aF9qc29uIiAkdXJsIFwKICAgIHwgZ3JlcCBYLVN1YmplY3QtVG9rZW4gfCBhd2sgJ3twcmludCAkMn0nIHwgdHIgLWQgJ1tbOnNwYWNlOl1dJ2AKCiMgR2V0IENBIGNlcnRpZmljYXRlIGZvciB0aGlzIGNsdXN0ZXIKY3VybCAtayAtWCBHRVQgXAogICAgLUggIlgtQXV0aC1Ub2tlbjogJFVTRVJfVE9LRU4iIFwKICAgICRNQUdOVU1fVVJML2NlcnRpZmljYXRlcy8kQ0xVU1RFUl9VVUlEIHwgcHl0aG9uIC1jICdpbXBvcnQgc3lzLCBqc29uOyBwcmludCBqc29uLmxvYWQoc3lzLnN0ZGluKVsicGVtIl0nID4gJENBX0NFUlQKCiMgQ3JlYXRlIGNvbmZpZyBmb3IgY2xpZW50J3MgY3NyCmNhdCA+ICR7Y2VydF9jb25mX2Rpcn0vY2xpZW50LmNvbmYgPDxFT0YKW3JlcV0KZGlzdGluZ3Vpc2hlZF9uYW1lID0gcmVxX2Rpc3Rpbmd1aXNoZWRfbmFtZQpyZXFfZXh0ZW5zaW9ucyAgICAgPSByZXFfZXh0CnByb21wdCA9IG5vCltyZXFfZGlzdGluZ3Vpc2hlZF9uYW1lXQpDTiA9IGt1YmVybmV0ZXMuaW52YWxpZApbcmVxX2V4dF0Ka2V5VXNhZ2U9Y3JpdGljYWwsZGlnaXRhbFNpZ25hdHVyZSxrZXlFbmNpcGhlcm1lbnQKZXh0ZW5kZWRLZXlVc2FnZT1jbGllbnRBdXRoCnN1YmplY3RBbHROYW1lPWRpck5hbWU6a3ViZWxldCxkaXJOYW1lOmt1YmVwcm94eQpba3ViZWxldF0KQ049a3ViZWxldApba3ViZXByb3h5XQpDTj1rdWJlLXByb3h5CkVPRgoKIyBHZW5lcmF0ZSBjbGllbnQncyBwcml2YXRlIGtleSBhbmQgY3NyCm9wZW5zc2wgZ2VucnNhIC1vdXQgIiR7Q0xJRU5UX0tFWX0iIDQwOTYKY2htb2QgNDAwICIke0NMSUVOVF9LRVl9IgpvcGVuc3NsIHJlcSAtbmV3IC1kYXlzIDEwMDAgXAogICAgICAgIC1rZXkgIiR7Q0xJRU5UX0tFWX0iIFwKICAgICAgICAtb3V0ICIke0NMSUVOVF9DU1J9IiBcCiAgICAgICAgLXJlcWV4dHMgcmVxX2V4dCBcCiAgICAgICAgLWNvbmZpZyAiJHtjZXJ0X2NvbmZfZGlyfS9jbGllbnQuY29uZiIKCiMgU2VuZCBjc3IgdG8gTWFnbnVtIHRvIGhhdmUgaXQgc2lnbmVkCmNzcl9yZXE9JChweXRob24gLWMgImltcG9ydCBqc29uOyBmcCA9IG9wZW4oJyR7Q0xJRU5UX0NTUn0nKTsgcHJpbnQganNvbi5kdW1wcyh7J2NsdXN0ZXJfdXVpZCc6ICckQ0xVU1RFUl9VVUlEJywgJ2Nzcic6IGZwLnJlYWQoKX0pOyBmcC5jbG9zZSgpIikKY3VybCAtayAtWCBQT1NUIFwKICAgIC1IICJYLUF1dGgtVG9rZW46ICRVU0VSX1RPS0VOIiBcCiAgICAtSCAiQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uIiBcCiAgICAtZCAiJGNzcl9yZXEiIFwKICAgICRNQUdOVU1fVVJML2NlcnRpZmljYXRlcyB8IHB5dGhvbiAtYyAnaW1wb3J0IHN5cywganNvbjsgcHJpbnQganNvbi5sb2FkKHN5cy5zdGRpbilbInBlbSJdJyA+ICR7Q0xJRU5UX0NFUlR9CgojIENvbW1vbiBjZXJ0cyBhbmQga2V5IGFyZSBjcmVhdGVkIGZvciBib3RoIGV0Y2QgYW5kIGt1YmVybmV0ZXMgc2VydmljZXMuCiMgQm90aCBldGNkIGFuZCBrdWJlIHVzZXIgc2hvdWxkIGhhdmUgcGVybWlzc2lvbiB0byBhY2Nlc3MgdGhlIGNlcnRzIGFuZCBrZXkuCmdyb3VwYWRkIGt1YmVfZXRjZAp1c2VybW9kIC1hIC1HIGt1YmVfZXRjZCBldGNkCnVzZXJtb2QgLWEgLUcga3ViZV9ldGNkIGt1YmUKY2htb2QgNTUwICIke2NlcnRfZGlyfSIKY2hvd24gLVIga3ViZTprdWJlX2V0Y2QgIiR7Y2VydF9kaXJ9IgpjaG1vZCA0NDAgJENMSUVOVF9LRVkKCnNlZCAtaSAnCiAgICBzfENBX0NFUlR8JyIkQ0FfQ0VSVCInfAogICAgc3xDTElFTlRfQ0VSVHwnIiRDTElFTlRfQ0VSVCInfAogICAgc3xDTElFTlRfS0VZfCciJENMSUVOVF9LRVkiJ3wKJyAvc3J2L2t1YmVybmV0ZXMva3ViZWNvbmZpZy55YW1sCgotLT09PT09PT09PT09PT09PTY4ODA1OTg3MzQwMTk3MjU4MDY9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojY2xvdWQtY29uZmlnCm1lcmdlX2hvdzogZGljdChyZWN1cnNlX2FycmF5KStsaXN0KGFwcGVuZCkKd3JpdGVfZmlsZXM6CiAgLSBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvcmVwbGljYXRpb24tY29udHJvbGxlci55YW1sCiAgICBvd25lcjogInJvb3Q6cm9vdCIKICAgIHBlcm1pc3Npb25zOiAiMDY0NCIKICAgIGNvbnRlbnQ6IHwKICAgICAgYXBpVmVyc2lvbjogdjEKICAgICAga2luZDogUmVwbGljYXRpb25Db250cm9sbGVyCiAgICAgIG1ldGFkYXRhOgogICAgICAgIG5hbWU6IG5naW54LWNvbnRyb2xsZXIKICAgICAgc3BlYzoKICAgICAgICByZXBsaWNhczogMgogICAgICAgICMgc2VsZWN0b3IgaWRlbnRpZmllcyB0aGUgc2V0IG9mIHBvZHMgdGhhdCB0aGlzCiAgICAgICAgIyByZXBsaWNhdGlvbiBjb250cm9sbGVyIGlzIHJlc3BvbnNpYmxlIGZvciBtYW5hZ2luZwogICAgICAgIHNlbGVjdG9yOgogICAgICAgICAgbmFtZTogbmdpbngKICAgICAgICAjIHRlbXBsYXRlIGRlZmluZXMgdGhlICdjb29raWUgY3V0dGVyJyB1c2VkIGZvciBjcmVhdGluZwogICAgICAgICMgbmV3IHBvZHMgd2hlbiBuZWNlc3NhcnkKICAgICAgICB0ZW1wbGF0ZToKICAgICAgICAgIG1ldGFkYXRhOgogICAgICAgICAgICBsYWJlbHM6CiAgICAgICAgICAgICAgIyBJbXBvcnRhbnQ6IHRoZXNlIGxhYmVscyBuZWVkIHRvIG1hdGNoIHRoZSBzZWxlY3RvciBhYm92ZQogICAgICAgICAgICAgICMgVGhlIGFwaSBzZXJ2ZXIgZW5mb3JjZXMgdGhpcyBjb25zdHJhaW50LgogICAgICAgICAgICAgIGFwcDogbmdpbngKICAgICAgICAgIHNwZWM6CiAgICAgICAgICAgIGNvbnRhaW5lcnM6CiAgICAgICAgICAgICAgLSBuYW1lOiBuZ2lueAogICAgICAgICAgICAgICAgaW1hZ2U6IG5naW54CiAgICAgICAgICAgICAgICBwb3J0czoKICAgICAgICAgICAgICAgICAgLSBjb250YWluZXJQb3J0OiA4MAoKICAtIHBhdGg6IC9ldGMva3ViZXJuZXRlcy9leGFtcGxlcy9wb2Qtbmdpbngtd2l0aC1sYWJlbC55YW1sCiAgICBvd25lcjogInJvb3Q6cm9vdCIKICAgIHBlcm1pc3Npb25zOiAiMDY0NCIKICAgIGNvbnRlbnQ6IHwKICAgICAgYXBpVmVyc2lvbjogdjEKICAgICAga2luZDogUG9kCiAgICAgIG1ldGFkYXRhOgogICAgICAgIG5hbWU6IG5naW54CiAgICAgICAgbGFiZWxzOgogICAgICAgICAgYXBwOiBuZ2lueAogICAgICBzcGVjOgogICAgICAgIGNvbnRhaW5lcnM6CiAgICAgICAgLSBuYW1lOiBuZ2lueAogICAgICAgICAgaW1hZ2U6IG5naW54CiAgICAgICAgICBwb3J0czoKICAgICAgICAgIC0gY29udGFpbmVyUG9ydDogODAKCiAgLSBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvc2VydmljZS55YW1sCiAgICBvd25lcjogInJvb3Q6cm9vdCIKICAgIHBlcm1pc3Npb25zOiAiMDY0NCIKICAgIGNvbnRlbnQ6IHwKICAgICAgYXBpVmVyc2lvbjogdjEKICAgICAga2luZDogU2VydmljZQogICAgICBtZXRhZGF0YToKICAgICAgICBuYW1lOiBuZ2lueC1zZXJ2aWNlCiAgICAgIHNwZWM6CiAgICAgICAgcG9ydHM6CiAgICAgICAgLSBwb3J0OiA4MDAwICMgdGhlIHBvcnQgdGhhdCB0aGlzIHNlcnZpY2Ugc2hvdWxkIHNlcnZlIG9uCiAgICAgICAgICAjIHRoZSBjb250YWluZXIgb24gZWFjaCBwb2QgdG8gY29ubmVjdCB0bywgY2FuIGJlIGEgbmFtZQogICAgICAgICAgIyAoZS5nLiAnd3d3Jykgb3IgYSBudW1iZXIgKGUuZy4gODApCiAgICAgICAgICB0YXJnZXRQb3J0OiA4MAogICAgICAgICAgcHJvdG9jb2w6IFRDUAogICAgICAgICMganVzdCBsaWtlIHRoZSBzZWxlY3RvciBpbiB0aGUgcmVwbGljYXRpb24gY29udHJvbGxlciwKICAgICAgICAjIGJ1dCB0aGlzIHRpbWUgaXQgaWRlbnRpZmllcyB0aGUgc2V0IG9mIHBvZHMgdG8gbG9hZCBiYWxhbmNlCiAgICAgICAgIyB0cmFmZmljIHRvLgogICAgICAgIHNlbGVjdG9yOgogICAgICAgICAgYXBwOiBuZ2lueAoKICAtIHBhdGg6IC9ldGMva3ViZXJuZXRlcy9leGFtcGxlcy9SRUFETUUubWQKICAgIG93bmVyOiAicm9vdDpyb290IgogICAgcGVybWlzc2lvbnM6ICIwNjQ0IgogICAgY29udGVudDogfAogICAgICBLdWJlcm5ldGVzIDEwMSAoaHR0cDovL2t1YmVybmV0ZXMuaW8vdjEuMC9kb2NzL3VzZXItZ3VpZGUvd2Fsa3Rocm91Z2gvUkVBRE1FLmh0bWwpCiAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KCiAgICAgIExpc3QgYWxsIG5vZGVzOgoKICAgICAgICAgIGt1YmVjdGwgZ2V0IG5vZGVzCgogICAgICBSZXBsaWNhdGlvbiBDb250cm9sbGVyczoKCiAgICAgICAgICBrdWJlY3RsIGNyZWF0ZSAtZiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvcmVwbGljYXRpb24tY29udHJvbGxlci55YW1sCiAgICAgICAgICBrdWJlY3RsIGdldCByYwogICAgICAgICAga3ViZWN0bCBkZWxldGUgcmMgbmdpbngtY29udHJvbGxlcgoKICAgICAgUG9kczoKCiAgICAgICAgICBrdWJlY3RsIGNyZWF0ZSAtZiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvcG9kLW5naW54LXdpdGgtbGFiZWwueWFtbAogICAgICAgICAga3ViZWN0bCBnZXQgcG9kcwogICAgICAgICAgY3VybCBodHRwOi8vJChrdWJlY3RsIGdldCBwb2QgbmdpbnggLW89dGVtcGxhdGUgLXQ9e3suc3RhdHVzLnBvZElQfX0pCgogICAgICBTZXJ2aWNlczoKCiAgICAgICAgICBrdWJlY3RsIGNyZWF0ZSAtZiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvc2VydmljZS55YW1sCiAgICAgICAgICBrdWJlY3RsIGdldCBzZXJ2aWNlcwoKICAgICAgICAgIGV4cG9ydCBTRVJWSUNFX0lQPSQoa3ViZWN0bCBnZXQgc2VydmljZSBuZ2lueC1zZXJ2aWNlIC1vPXRlbXBsYXRlIC10PXt7LnNwZWMuY2x1c3RlcklQfX0pCiAgICAgICAgICBleHBvcnQgU0VSVklDRV9QT1JUPSQoa3ViZWN0bCBnZXQgc2VydmljZSBuZ2lueC1zZXJ2aWNlIC1vPXRlbXBsYXRlICctdD17eyhpbmRleCAuc3BlYy5wb3J0cyAwKS5wb3J0fX0nKQogICAgICAgICAgY3VybCBodHRwOi8vJHtTRVJWSUNFX0lQfToke1NFUlZJQ0VfUE9SVH0KCiAgICAgICAgICBrdWJlY3RsIGRlbGV0ZSBzZXJ2aWNlIG5naW54LXNlcnZpY2UKCiAgICAgIFRyb3VibGVzaG9vdGluZzoKCiAgICAgICAgICBrdWJlY3RsIGdldCBldmVudHMKCiAgICAgICAgICBrdWJlY3RsIGRlc2NyaWJlIHJjIG5naW54LWNvbnRyb2xsZXIKCiAgICAgICAgICBrdWJlY3RsIGRlc2NyaWJlIHBvZCBuZ2lueAoKICAgICAgICAgIGt1YmVjdGwgZGVzY3JpYmUgc2VydmljZSBuZ2lueC1zZXJ2aWNlCgogICAgICAgICAga3ViZWN0bCBleGVjIG5naW54IGVudgoKICAgICAgICAgIGt1YmVjdGwgZXhlYyAtdGkgbmdpbnggLS0gYmFzaAoKLS09PT09PT09PT09PT09PT02ODgwNTk4NzM0MDE5NzI1ODA2PT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbIC1uICIkRE9DS0VSX1ZPTFVNRV9TSVpFIiBdICYmIFsgIiRET0NLRVJfVk9MVU1FX1NJWkUiIC1ndCAwIF07IHRoZW4KICAgIGlmIFsgIiRFTkFCTEVfQ0lOREVSIiA9PSAiRmFsc2UiIF07IHRoZW4KICAgICAgICAjIEZJWE1FKHl1YW55aW5nKTogVXNlIGVwaGVtZXJhbCBkaXNrIGZvciBkb2NrZXIgc3RvcmFnZQogICAgICAgICMgQ3VycmVudGx5IElyb25pYyBkb2Vzbid0IHN1cHBvcnQgY2luZGVyIHZvbHVtZXMsCiAgICAgICAgIyBzbyB3ZSBtdXN0IHVzZSBwcmVzZXJ2ZWQgZXBoZW1lcmFsIGRpc2sgaW5zdGVhZCBvZiBhIGNpbmRlciB2b2x1bWUuCiAgICAgICAgZGV2aWNlX3BhdGg9JChyZWFkbGluayAtZiAvZGV2L2Rpc2svYnktbGFiZWwvZXBoZW1lcmFsMCkKICAgIGVsc2UKICAgICAgICBhdHRlbXB0cz02MAogICAgICAgIHdoaWxlIFsgJHthdHRlbXB0c30gLWd0IDAgXTsgZG8KICAgICAgICAgICAgZGV2aWNlX25hbWU9JChscyAvZGV2L2Rpc2svYnktaWQgfCBncmVwICR7RE9DS0VSX1ZPTFVNRTowOjIwfSQpCiAgICAgICAgICAgIGlmIFsgLW4gIiR7ZGV2aWNlX25hbWV9IiBdOyB0aGVuCiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBmaQogICAgICAgICAgICBlY2hvICJ3YWl0aW5nIGZvciBkaXNrIGRldmljZSIKICAgICAgICAgICAgc2xlZXAgMC41CiAgICAgICAgICAgIHVkZXZhZG0gdHJpZ2dlcgogICAgICAgICAgICBsZXQgYXR0ZW1wdHMtLQogICAgICAgIGRvbmUKCiAgICAgICAgaWYgWyAteiAiJHtkZXZpY2VfbmFtZX0iIF07IHRoZW4KICAgICAgICAgICAgZWNobyAiRVJST1I6IGRpc2sgZGV2aWNlIGRvZXMgbm90IGV4aXN0IiA+JjIKICAgICAgICAgICAgZXhpdCAxCiAgICAgICAgZmkKCiAgICAgICAgZGV2aWNlX3BhdGg9L2Rldi9kaXNrL2J5LWlkLyR7ZGV2aWNlX25hbWV9CiAgICBmaQpmaQoKIyBUaGlzIGZpbGUgY29udGFpbnMgZG9ja2VyIHN0b3JhZ2UgZHJpdmVycyBjb25maWd1cmF0aW9uIGZvciBmZWRvcmEKIyBhdG9taWMgaG9zdHMuIEN1cnJlbnRseSwgZGV2aWNlbWFwcGVyIGFuZCBvdmVybGF5IGFyZSBzdXBwb3J0ZWQuCgojIFJlbW92ZSBhbnkgZXhpc3RpbmcgZG9ja2VyLXN0b3JhZ2UgY29uZmlndXJhdGlvbi4gSW4gY2FzZSBvZiBhbgojIGV4aXN0aW5nIGNvbmZpZ3VyYXRpb24sIGRvY2tlci1zdG9yYWdlLXNldHVwIHdpbGwgZmFpbC4KY2xlYXJfZG9ja2VyX3N0b3JhZ2VfY29uZmlndXJhdGlvbiAoKSB7CiAgICBpZiBbIC1mIC9ldGMvc3lzY29uZmlnL2RvY2tlci1zdG9yYWdlIF07IHRoZW4KICAgICAgICBzZWQgLWkgIi9eRE9DS0VSX1NUT1JBR0VfT1BUSU9OUz0vIHMvPS4qLz0vIiAvZXRjL3N5c2NvbmZpZy9kb2NrZXItc3RvcmFnZQogICAgZmkKfQoKIyBDb25maWd1cmUgZG9ja2VyIHN0b3JhZ2Ugd2l0aCB4ZnMgYXMgYmFja2luZyBmaWxlc3lzdGVtLgpjb25maWd1cmVfb3ZlcmxheSAoKSB7CiAgICBjbGVhcl9kb2NrZXJfc3RvcmFnZV9jb25maWd1cmF0aW9uCgogICAgcm0gLXJmIC92YXIvbGliL2RvY2tlci8qCgogICAgaWYgWyAtbiAiJERPQ0tFUl9WT0xVTUVfU0laRSIgXSAmJiBbICIkRE9DS0VSX1ZPTFVNRV9TSVpFIiAtZ3QgMCBdOyB0aGVuCiAgICAgICAgbWtmcy54ZnMgLWYgJHtkZXZpY2VfcGF0aH0KICAgICAgICBlY2hvICIke2RldmljZV9wYXRofSAvdmFyL2xpYi9kb2NrZXIgeGZzIGRlZmF1bHRzIDAgMCIgPj4gL2V0Yy9mc3RhYgogICAgICAgIG1vdW50IC1hCiAgICBmaQoKICAgIGVjaG8gIlNUT1JBR0VfRFJJVkVSPW92ZXJsYXkiID4gL2V0Yy9zeXNjb25maWcvZG9ja2VyLXN0b3JhZ2Utc2V0dXAKCiAgICAjIFNFTGludXggbXVzdCBiZSBlbmFibGVkIGFuZCBpbiBlbmZvcmNpbmcgbW9kZSBvbiB0aGUgcGh5c2ljYWwKICAgICMgbWFjaGluZSwgYnV0IG11c3QgYmUgZGlzYWJsZWQgaW4gdGhlIGNvbnRhaW5lciB3aGVuIHBlcmZvcm1pbmcKICAgICMgY29udGFpbmVyIHNlcGFyYXRpb24KICAgIHNlZCAtaSAiL15PUFRJT05TPS8gcy8tLXNlbGludXgtZW5hYmxlZC8tLXNlbGludXgtZW5hYmxlZD1mYWxzZS8iIC9ldGMvc3lzY29uZmlnL2RvY2tlcgp9CgojIENvbmZpZ3VyZSBkb2NrZXIgc3RvcmFnZSB3aXRoIGRldmljZW1hcHBlciB1c2luZyBkaXJlY3QgTFZNCmNvbmZpZ3VyZV9kZXZpY2VtYXBwZXIgKCkgewogICAgY2xlYXJfZG9ja2VyX3N0b3JhZ2VfY29uZmlndXJhdGlvbgoKICAgIGlmIFsgLW4gIiRET0NLRVJfVk9MVU1FX1NJWkUiIF0gJiYgWyAiJERPQ0tFUl9WT0xVTUVfU0laRSIgLWd0IDAgXTsgdGhlbgogICAgICAgIHB2Y3JlYXRlIC1mICR7ZGV2aWNlX3BhdGh9CiAgICAgICAgdmdjcmVhdGUgZG9ja2VyICR7ZGV2aWNlX3BhdGh9CgogICAgICAgIGVjaG8gIlZHPWRvY2tlciIgPiAvZXRjL3N5c2NvbmZpZy9kb2NrZXItc3RvcmFnZS1zZXR1cAogICAgZmkKfQoKCmlmIFsgIiRET0NLRVJfU1RPUkFHRV9EUklWRVIiID0gIm92ZXJsYXkiIF07IHRoZW4KICAgIGlmIFsgJChlY2hvIC1lICIkKHVuYW1lIC1yKVxuMy4xOCIgfCBzb3J0IC1WIHwgaGVhZCAtMSkgPSAkKHVuYW1lIC1yKSBdOyB0aGVuCiAgICAgICAgRVJST1JfTUVTU0FHRT0iT3ZlcmxheUZTIHJlcXVpcmVzIGF0IGxlYXN0IExpbnV4IGtlcm5lbCAzLjE4LiBDbHVzdGVyIG5vZGUga2VybmVsIHZlcnNpb246ICQodW5hbWUgLXIpIgogICAgICAgIGVjaG8gIkVSUk9SOiAke0VSUk9SX01FU1NBR0V9IiA+JjIKICAgICAgICBzaCAtYyAiJHtXQUlUX0NVUkx9IC0tZGF0YS1iaW5hcnkgJ3tcInN0YXR1c1wiOiBcIkZBSUxVUkVcIiwgXCJyZWFzb25cIjogXCIke0VSUk9SX01FU1NBR0V9XCJ9JyIKICAgIGVsc2UKICAgICAgICBjb25maWd1cmVfb3ZlcmxheQogICAgZmkKZWxzZQogICAgY29uZmlndXJlX2RldmljZW1hcHBlcgpmaQoKLS09PT09PT09PT09PT09PT02ODgwNTk4NzM0MDE5NzI1ODA2PT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbICIkUkVHSVNUUllfRU5BQkxFRCIgPSAiRmFsc2UiIF07IHRoZW4KICAgIGV4aXQgMApmaQoKY2F0ID4gL2V0Yy9zeXNjb25maWcvcmVnaXN0cnktY29uZmlnLnltbCA8PCBFT0YKdmVyc2lvbjogMC4xCmxvZzoKICBmaWVsZHM6CiAgICBzZXJ2aWNlOiByZWdpc3RyeQpzdG9yYWdlOgogIGNhY2hlOgogICAgbGF5ZXJpbmZvOiBpbm1lbW9yeQogIHN3aWZ0OgogICAgYXV0aHVybDogIiRBVVRIX1VSTCIKICAgIHJlZ2lvbjogIiRTV0lGVF9SRUdJT04iCiAgICB1c2VybmFtZTogIiRUUlVTVEVFX1VTRVJOQU1FIgogICAgcGFzc3dvcmQ6ICIkVFJVU1RFRV9QQVNTV09SRCIKICAgIGRvbWFpbmlkOiAiJFRSVVNURUVfRE9NQUlOX0lEIgogICAgdHJ1c3RpZDogIiRUUlVTVF9JRCIKICAgIGNvbnRhaW5lcjogIiRSRUdJU1RSWV9DT05UQUlORVIiCiAgICBpbnNlY3VyZXNraXB2ZXJpZnk6ICRSRUdJU1RSWV9JTlNFQ1VSRQogICAgY2h1bmtzaXplOiAkUkVHSVNUUllfQ0hVTktTSVpFCmh0dHA6CiAgICBhZGRyOiA6NTAwMApFT0YKCmNhdCA+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vcmVnaXN0cnkuc2VydmljZSA8PCBFT0YKW1VuaXRdCkRlc2NyaXB0aW9uPURvY2tlciByZWdpc3RyeSB2MgpSZXF1aXJlcz1kb2NrZXIuc2VydmljZQpBZnRlcj1kb2NrZXIuc2VydmljZQoKW1NlcnZpY2VdClR5cGU9b25lc2hvdApSZW1haW5BZnRlckV4aXQ9eWVzCkV4ZWNTdGFydD0vdXNyL2Jpbi9kb2NrZXIgcnVuIC1kIC1wICRSRUdJU1RSWV9QT1JUOjUwMDAgLS1yZXN0YXJ0PWFsd2F5cyAtLW5hbWUgcmVnaXN0cnkgLXYgL2V0Yy9zeXNjb25maWcvcmVnaXN0cnktY29uZmlnLnltbDovZXRjL2RvY2tlci9yZWdpc3RyeS9jb25maWcueW1sIHJlZ2lzdHJ5OjIKRXhlY1N0b3A9L3Vzci9iaW4vZG9ja2VyIHJtIC1mIHJlZ2lzdHJ5CgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCgotLT09PT09PT09PT09PT09PTY4ODA1OTg3MzQwMTk3MjU4MDY9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmVjaG8gImNvbmZpZ3VyaW5nIGt1YmVybmV0ZXMgKG1pbmlvbikiCgppZiBbIC16ICIkS1VCRV9OT0RFX0lQIiBdOyB0aGVuCiAgICAjIEZJWE1FKHl1YW55aW5nKTogU2V0IEtVQkVfTk9ERV9JUCBjb3JyZWN0bHkKICAgIEtVQkVfTk9ERV9JUD0kKGN1cmwgLXMgaHR0cDovLzE2OS4yNTQuMTY5LjI1NC9sYXRlc3QvbWV0YS1kYXRhL2xvY2FsLWlwdjQpCmZpCgpDRVJUX0RJUj0vc3J2L2t1YmVybmV0ZXMKUFJPVE9DT0w9aHR0cHMKRkxBTk5FTF9PUFRJT05TPSItZXRjZC1jYWZpbGUgJENFUlRfRElSL2NhLmNydCBcCi1ldGNkLWNlcnRmaWxlICRDRVJUX0RJUi9jbGllbnQuY3J0IFwKLWV0Y2Qta2V5ZmlsZSAkQ0VSVF9ESVIvY2xpZW50LmtleSIKRVRDRF9DVVJMX09QVElPTlM9Ii0tY2FjZXJ0ICRDRVJUX0RJUi9jYS5jcnQgXAotLWNlcnQgJENFUlRfRElSL2NsaWVudC5jcnQgLS1rZXkgJENFUlRfRElSL2NsaWVudC5rZXkiCkVUQ0RfU0VSVkVSX0lQPSR7RVRDRF9TRVJWRVJfSVA6LSRLVUJFX01BU1RFUl9JUH0KS1VCRV9QUk9UT0NPTD0iaHR0cHMiCktVQkVfQ09ORklHPSIiCkZMQU5ORUxEX0NPTkZJRz0vZXRjL3N5c2NvbmZpZy9mbGFubmVsZAoKaWYgWyAiJFRMU19ESVNBQkxFRCIgPSAiVHJ1ZSIgXTsgdGhlbgogICAgUFJPVE9DT0w9aHR0cAogICAgRkxBTk5FTF9PUFRJT05TPSIiCiAgICBFVENEX0NVUkxfT1BUSU9OUz0iIgpmaQoKc2VkIC1pICcvRkxBTk5FTF9PUFRJT05TLydkICRGTEFOTkVMRF9DT05GSUcKCmNhdCA+PiAkRkxBTk5FTERfQ09ORklHIDw8RU9GCkZMQU5ORUxfT1BUSU9OUz0iJEZMQU5ORUxfT1BUSU9OUyIKRU9GCgppZiBbICIkVExTX0RJU0FCTEVEIiA9ICJUcnVlIiBdOyB0aGVuCiAgICBLVUJFX1BST1RPQ09MPSJodHRwIgplbHNlCiAgICBLVUJFX0NPTkZJRz0iLS1rdWJlY29uZmlnPS9zcnYva3ViZXJuZXRlcy9rdWJlY29uZmlnLnlhbWwiCmZpCktVQkVfTUFTVEVSX1VSST0iJEtVQkVfUFJPVE9DT0w6Ly8kS1VCRV9NQVNURVJfSVA6JEtVQkVfQVBJX1BPUlQiCgpzZWQgLWkgJwogICAgL15LVUJFX0FMTE9XX1BSSVY9LyBzLz0uKi89Ii0tYWxsb3ctcHJpdmlsZWdlZD0nIiRLVUJFX0FMTE9XX1BSSVYiJyIvCiAgICAvXktVQkVfRVRDRF9TRVJWRVJTPS8gc3w9Lip8PSItLWV0Y2Qtc2VydmVycz1odHRwOi8vJyIkRVRDRF9TRVJWRVJfSVAiJzoyMzc5InwKICAgIC9eS1VCRV9NQVNURVI9LyBzfD0uKnw9Ii0tbWFzdGVyPSciJEtVQkVfTUFTVEVSX1VSSSInInwKJyAvZXRjL2t1YmVybmV0ZXMvY29uZmlnCgojIE5PVEU6ICBLdWJlcm5ldGVzIHBsdWdpbiBmb3IgT3BlbnN0YWNrIHJlcXVpcmVzIHRoYXQgdGhlIG5vZGUgbmFtZSByZWdpc3RlcmVkCiMgaW4gdGhlIGt1YmUtYXBpc2VydmVyIGJlIHRoZSBzYW1lIGFzIHRoZSBOb3ZhIG5hbWUgb2YgdGhlIGluc3RhbmNlLCBzbyB0aGF0CiMgdGhlIHBsdWdpbiBjYW4gdXNlIHRoZSBuYW1lIHRvIHF1ZXJ5IGZvciBhdHRyaWJ1dGVzIHN1Y2ggYXMgSVAsIGV0Yy4KIyBUaGUgaG9zdG5hbWUgb2YgdGhlIG5vZGUgaXMgc2V0IHRvIGJlIHRoZSBOb3ZhIG5hbWUgb2YgdGhlIGluc3RhbmNlLCBhbmQKIyB0aGUgb3B0aW9uIC0taG9zdG5hbWUtb3ZlcnJpZGUgZm9yIGt1YmVsZXQgdXNlcyB0aGUgaG9zdG5hbWUgdG8gcmVnaXN0ZXIgdGhlIG5vZGUuCiMgVXNpbmcgYW55IG90aGVyIG5hbWUgd2lsbCBicmVhayB0aGUgbG9hZCBiYWxhbmNlciBhbmQgY2luZGVyIHZvbHVtZSBmZWF0dXJlcy4KSE9TVE5BTUU9JChob3N0bmFtZSAtLXNob3J0IHwgc2VkICdzL1wubm92YWxvY2FsLy8nKQpLVUJFTEVUX0FSR1M9Ii0tY29uZmlnPS9ldGMva3ViZXJuZXRlcy9tYW5pZmVzdHMgLS1jYWR2aXNvci1wb3J0PTQxOTQgJHtLVUJFX0NPTkZJR30gLS1ob3N0bmFtZS1vdmVycmlkZT0ke0hPU1ROQU1FfSIKCmlmIFsgLW4gIiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfSIgXTsgdGhlbgogICAgS1VCRUxFVF9BUkdTPSIke0tVQkVMRVRfQVJHU30gLS1wb2QtaW5mcmEtY29udGFpbmVyLWltYWdlPSR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfS9nb29nbGVfY29udGFpbmVycy9wYXVzZVw6MC44LjAiCiAgICBlY2hvICJJTlNFQ1VSRV9SRUdJU1RSWT0nLS1pbnNlY3VyZS1yZWdpc3RyeSAke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0nIiA+PiAvZXRjL3N5c2NvbmZpZy9kb2NrZXIKZmkKCnNlZCAtaSAnCiAgICAvXktVQkVMRVRfQUREUkVTUz0vIHMvPS4qLz0iLS1hZGRyZXNzPTAuMC4wLjAiLwogICAgL15LVUJFTEVUX0hPU1ROQU1FPS8gcy89LiovPSIiLwogICAgL15LVUJFTEVUX0FQSV9TRVJWRVI9LyBzfD0uKnw9Ii0tYXBpLXNlcnZlcnM9JyIkS1VCRV9NQVNURVJfVVJJIicifAogICAgL15LVUJFTEVUX0FSR1M9LyBzfD0uKnw9IiciJHtLVUJFTEVUX0FSR1N9IicifAonIC9ldGMva3ViZXJuZXRlcy9rdWJlbGV0CgpzZWQgLWkgJwogICAgL15LVUJFX1BST1hZX0FSR1M9LyBzfD0uKnw9JyIkS1VCRV9DT05GSUciJ3wKJyAvZXRjL2t1YmVybmV0ZXMvcHJveHkKCmlmIFsgIiRORVRXT1JLX0RSSVZFUiIgPSAiZmxhbm5lbCIgXTsgdGhlbgogICAgc2VkIC1pICcKICAgICAgICAvXkZMQU5ORUxfRVRDRD0vIHN8PS4qfD0iJyIkUFJPVE9DT0wiJzovLyciJEVUQ0RfU0VSVkVSX0lQIic6MjM3OSJ8CiAgICAnICRGTEFOTkVMRF9DT05GSUcKCiAgICAjIE1ha2Ugc3VyZSBldGNkIGhhcyBhIGZsYW5uZWwgY29uZmlndXJhdGlvbgogICAgLiAkRkxBTk5FTERfQ09ORklHCiAgICB1bnRpbCBjdXJsIC1zZiAkRVRDRF9DVVJMX09QVElPTlMgXAogICAgICAgICIkRkxBTk5FTF9FVENEL3YyL2tleXMke0ZMQU5ORUxfRVRDRF9LRVl9L2NvbmZpZz9xdW9ydW09ZmFsc2UmcmVjdXJzaXZlPWZhbHNlJnNvcnRlZD1mYWxzZSIKICAgIGRvCiAgICAgICAgZWNobyAiV2FpdGluZyBmb3IgZmxhbm5lbCBjb25maWd1cmF0aW9uIGluIGV0Y2QuLi4iCiAgICAgICAgc2xlZXAgNQogICAgZG9uZQpmaQoKaWYgWyAiJFZPTFVNRV9EUklWRVIiID0gImNpbmRlciIgXTsgdGhlbgogICAgQ0xPVURfQ09ORklHPS9ldGMva3ViZXJuZXRlcy9rdWJlX29wZW5zdGFja19jb25maWcKICAgIEtVQkVSTkVURVM9L2V0Yy9rdWJlcm5ldGVzCiAgICBpZiBbICEgLWQgJHtLVUJFUk5FVEVTfSAtbyAhIC1mICR7Q0xPVURfQ09ORklHfSBdOyB0aGVuCiAgICAgICAgbWtkaXIgLXAgJEtVQkVSTkVURVMKICAgIGZpCiAgICBBVVRIX1VSTD0ke0FVVEhfVVJML3YzL3YyLjB9CmNhdCA+ICRDTE9VRF9DT05GSUcgPDxFT0YKW0dsb2JhbF0KYXV0aC11cmw9JEFVVEhfVVJMCnVzZXJuYW1lPSRVU0VSTkFNRQpwYXNzd29yZD0kUEFTU1dPUkQKcmVnaW9uPSRSRUdJT05fTkFNRQp0ZW5hbnQtbmFtZT0kVEVOQU5UX05BTUUKRU9GCgpjYXQgPDwgX0VPQ18gPj4gL2V0Yy9rdWJlcm5ldGVzL2t1YmVsZXQKI0tVQkVMRVRfQVJHUz0iJEtVQkVMRVRfQVJHUyAtLWNsb3VkLXByb3ZpZGVyPW9wZW5zdGFjayAtLWNsb3VkLWNvbmZpZz0vZXRjL2t1YmVybmV0ZXMva3ViZV9vcGVuc3RhY2tfY29uZmlnIgpfRU9DXwoKICAgIGlmIFsgISAtZiAvdXNyL2Jpbi91ZGV2YWRtIF07IHRoZW4KICAgICAgICBsbiAtcyAvc2Jpbi91ZGV2YWRtIC91c3IvYmluL3VkZXZhZG0KICAgIGZpCgpmaQoKY2F0ID4+IC9ldGMvZW52aXJvbm1lbnQgPDxFT0YKS1VCRVJORVRFU19NQVNURVI9JEtVQkVfTUFTVEVSX1VSSQpFT0YKCmhvc3RuYW1lIGBob3N0bmFtZSB8IHNlZCAncy8ubm92YWxvY2FsLy8nYAoKLS09PT09PT09PT09PT09PT02ODgwNTk4NzM0MDE5NzI1ODA2PT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbICIkTkVUV09SS19EUklWRVIiICE9ICJmbGFubmVsIiBdOyB0aGVuCiAgICBleGl0IDAKZmkKCkZMQU5ORUxfRE9DS0VSX0JSSURHRV9CSU49L3Vzci9sb2NhbC9iaW4vZmxhbm5lbC1kb2NrZXItYnJpZGdlCkZMQU5ORUxfRE9DS0VSX0JSSURHRV9TRVJWSUNFPS9ldGMvc3lzdGVtZC9zeXN0ZW0vZmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKRE9DS0VSX0ZMQU5ORUxfQ09ORj0vZXRjL3N5c3RlbWQvc3lzdGVtL2RvY2tlci5zZXJ2aWNlLmQvZmxhbm5lbC5jb25mCkZMQU5ORUxfRE9DS0VSX0JSSURHRV9DT05GPS9ldGMvc3lzdGVtZC9zeXN0ZW0vZmxhbm5lbGQuc2VydmljZS5kL2ZsYW5uZWwtZG9ja2VyLWJyaWRnZS5jb25mCgpta2RpciAtcCAvZXRjL3N5c3RlbWQvc3lzdGVtL2RvY2tlci5zZXJ2aWNlLmQKbWtkaXIgLXAgL2V0Yy9zeXN0ZW1kL3N5c3RlbS9mbGFubmVsZC5zZXJ2aWNlLmQKCmNhdCA+PiAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX0JJTiA8PEVPRjEKIyEvYmluL3NoCgppZiAhIFsgIlwkRkxBTk5FTF9TVUJORVQiIF0gJiYgWyAiXCRGTEFOTkVMX01UVSIgXSA7IHRoZW4KICBlY2hvICJFUlJPUjogbWlzc2luZyByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMuIiA+JjIKICBleGl0IDEKZmkKCm1rZGlyIC1wIC9ydW4vZmxhbm5lbC8KY2F0ID4gL3J1bi9mbGFubmVsL2RvY2tlciA8PEVPRjIKRE9DS0VSX05FVFdPUktfT1BUSU9OUz0iLS1iaXA9XCRGTEFOTkVMX1NVQk5FVCAtLW10dT1cJEZMQU5ORUxfTVRVIgpFT0YyCkVPRjEKCmNob3duIHJvb3Q6cm9vdCAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX0JJTgpjaG1vZCAwNzU1ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQklOCgpjYXQgPj4gJEZMQU5ORUxfRE9DS0VSX0JSSURHRV9TRVJWSUNFIDw8RU9GCltVbml0XQpBZnRlcj1mbGFubmVsZC5zZXJ2aWNlCkJlZm9yZT1kb2NrZXIuc2VydmljZQpSZXF1aXJlcz1mbGFubmVsZC5zZXJ2aWNlCgpbU2VydmljZV0KVHlwZT1vbmVzaG90CkVudmlyb25tZW50RmlsZT0vcnVuL2ZsYW5uZWwvc3VibmV0LmVudgpFeGVjU3RhcnQ9L3Vzci9sb2NhbC9iaW4vZmxhbm5lbC1kb2NrZXItYnJpZGdlCgpbSW5zdGFsbF0KV2FudGVkQnk9ZG9ja2VyLnNlcnZpY2UKRU9GCgpjaG93biByb290OnJvb3QgJEZMQU5ORUxfRE9DS0VSX0JSSURHRV9TRVJWSUNFCmNobW9kIDA2NDQgJEZMQU5ORUxfRE9DS0VSX0JSSURHRV9TRVJWSUNFCgpjYXQgPj4gJERPQ0tFUl9GTEFOTkVMX0NPTkYgPDxFT0YKW1VuaXRdClJlcXVpcmVzPWZsYW5uZWwtZG9ja2VyLWJyaWRnZS5zZXJ2aWNlCkFmdGVyPWZsYW5uZWwtZG9ja2VyLWJyaWRnZS5zZXJ2aWNlCgpbU2VydmljZV0KRW52aXJvbm1lbnRGaWxlPS9ydW4vZmxhbm5lbC9kb2NrZXIKRU9GCgpjaG93biByb290OnJvb3QgJERPQ0tFUl9GTEFOTkVMX0NPTkYKY2htb2QgMDY0NCAkRE9DS0VSX0ZMQU5ORUxfQ09ORgoKY2F0ID4+ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQ09ORiA8PEVPRgpbVW5pdF0KUmVxdWlyZXM9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKQmVmb3JlPWZsYW5uZWwtZG9ja2VyLWJyaWRnZS5zZXJ2aWNlCgpbSW5zdGFsbF0KQWxzbz1mbGFubmVsLWRvY2tlci1icmlkZ2Uuc2VydmljZQpFT0YKCmNob3duIHJvb3Q6cm9vdCAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX0NPTkYKY2htb2QgMDY0NCAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX0NPTkYKCmVjaG8gImFjdGl2YXRpbmcgc2VydmljZSBmbGFubmVsZCIKc3lzdGVtY3RsIGVuYWJsZSBmbGFubmVsZApzeXN0ZW1jdGwgLS1uby1ibG9jayBzdGFydCBmbGFubmVsZAoKLS09PT09PT09PT09PT09PT02ODgwNTk4NzM0MDE5NzI1ODA2PT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgpET0NLRVJfSFRUUF9QUk9YWV9DT05GPS9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZC9odHRwX3Byb3h5LmNvbmYKCkRPQ0tFUl9IVFRQU19QUk9YWV9DT05GPS9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZC9odHRwc19wcm94eS5jb25mCgpET0NLRVJfTk9fUFJPWFlfQ09ORj0vZXRjL3N5c3RlbWQvc3lzdGVtL2RvY2tlci5zZXJ2aWNlLmQvbm9fcHJveHkuY29uZgoKRE9DS0VSX1JFU1RBUlQ9MAoKQkFTSF9SQz0vZXRjL2Jhc2hyYwoKbWtkaXIgLXAgL2V0Yy9zeXN0ZW1kL3N5c3RlbS9kb2NrZXIuc2VydmljZS5kCgppZiBbIC1uICIkSFRUUF9QUk9YWSIgXTsgdGhlbgogICAgY2F0IDw8RU9GIHwgc2VkICJzL14gKi8vIiA+ICRET0NLRVJfSFRUUF9QUk9YWV9DT05GCiAgICBbU2VydmljZV0KICAgIEVudmlyb25tZW50PUhUVFBfUFJPWFk9JEhUVFBfUFJPWFkKRU9GCgogICAgRE9DS0VSX1JFU1RBUlQ9MQoKICAgIGlmIFsgLWYgIiRCQVNIX1JDIiBdOyB0aGVuCiAgICAgICAgZWNobyAiZGVjbGFyZSAteCBodHRwX3Byb3h5PSRIVFRQX1BST1hZIiA+PiAkQkFTSF9SQwogICAgZWxzZQogICAgICAgIGVjaG8gIkZpbGUgJEJBU0hfUkMgZG9lcyBub3QgZXhpc3QsIG5vdCBzZXR0aW5nIGh0dHBfcHJveHkiCiAgICBmaQpmaQoKaWYgWyAtbiAiJEhUVFBTX1BST1hZIiBdOyB0aGVuCiAgICBjYXQgPDxFT0YgfCBzZWQgInMvXiAqLy8iID4gJERPQ0tFUl9IVFRQU19QUk9YWV9DT05GCiAgICBbU2VydmljZV0KICAgIEVudmlyb25tZW50PUhUVFBTX1BST1hZPSRIVFRQU19QUk9YWQpFT0YKCiAgICBET0NLRVJfUkVTVEFSVD0xCgogICAgaWYgWyAtZiAiJEJBU0hfUkMiIF07IHRoZW4KICAgICAgICBlY2hvICJkZWNsYXJlIC14IGh0dHBzX3Byb3h5PSRIVFRQU19QUk9YWSIgPj4gJEJBU0hfUkMKICAgIGVsc2UKICAgICAgICBlY2hvICJGaWxlICRCQVNIX1JDIGRvZXMgbm90IGV4aXN0LCBub3Qgc2V0dGluZyBodHRwc19wcm94eSIKICAgIGZpCmZpCgppZiBbIC1uICIkTk9fUFJPWFkiIF07IHRoZW4KICAgIGNhdCA8PEVPRiB8IHNlZCAicy9eICovLyIgPiAkRE9DS0VSX05PX1BST1hZX0NPTkYKICAgIFtTZXJ2aWNlXQogICAgRW52aXJvbm1lbnQ9Tk9fUFJPWFk9JE5PX1BST1hZCkVPRgoKICAgIERPQ0tFUl9SRVNUQVJUPTEKCiAgICBpZiBbIC1mICIkQkFTSF9SQyIgXTsgdGhlbgogICAgICAgIGVjaG8gImRlY2xhcmUgLXggbm9fcHJveHk9JE5PX1BST1hZIiA+PiAkQkFTSF9SQwogICAgZWxzZQogICAgICAgIGVjaG8gIkZpbGUgJEJBU0hfUkMgZG9lcyBub3QgZXhpc3QsIG5vdCBzZXR0aW5nIG5vX3Byb3h5IgogICAgZmkKZmkKCmlmIFsgIiRET0NLRVJfUkVTVEFSVCIgLWVxIDEgXTsgdGhlbgogICAgc3lzdGVtY3RsIGRhZW1vbi1yZWxvYWQKICAgIHN5c3RlbWN0bCAtLW5vLWJsb2NrIHJlc3RhcnQgZG9ja2VyLnNlcnZpY2UKZmkKCi0tPT09PT09PT09PT09PT09Njg4MDU5ODczNDAxOTcyNTgwNj09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKIyBkb2NrZXIgaXMgYWxyZWFkeSBlbmFibGVkIGFuZCBwb3NzaWJseSBydW5uaW5nIG9uIGNlbnRvcyBhdG9taWMgaG9zdAojIHNvIHdlIG5lZWQgdG8gc3RvcCBpdCBmaXJzdCBhbmQgZGVsZXRlIHRoZSBkb2NrZXIwIGJyaWRnZSAod2hpY2ggd2lsbAojIGJlIHJlLWNyZWF0ZWQgdXNpbmcgdGhlIGZsYW5uZWwtcHJvdmlkZWQgc3VibmV0KS4KZWNobyAic3RvcHBpbmcgZG9ja2VyIgpzeXN0ZW1jdGwgc3RvcCBkb2NrZXIKaXAgbGluayBkZWwgZG9ja2VyMAoKIyBtYWtlIHN1cmUgd2UgcGljayB1cCBhbnkgbW9kaWZpZWQgdW5pdCBmaWxlcwpzeXN0ZW1jdGwgZGFlbW9uLXJlbG9hZAoKZm9yIHNlcnZpY2UgaW4gZG9ja2VyIGt1YmVsZXQ7IGRvCiAgICBlY2hvICJhY3RpdmF0aW5nIHNlcnZpY2UgJHNlcnZpY2UiCiAgICBzeXN0ZW1jdGwgZW5hYmxlICRzZXJ2aWNlCiAgICBzeXN0ZW1jdGwgLS1uby1ibG9jayBzdGFydCAkc2VydmljZQpkb25lCgotLT09PT09PT09PT09PT09PTY4ODA1OTg3MzQwMTk3MjU4MDY9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLW4gIiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfSIgXTsgdGhlbgogICAgSFlQRVJLVUJFX0lNQUdFPSIke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0vZ29vZ2xlX2NvbnRhaW5lcnMvaHlwZXJrdWJlOiR7S1VCRV9WRVJTSU9OfSIKZWxzZQogICAgSFlQRVJLVUJFX0lNQUdFPSJnY3IuaW8vZ29vZ2xlX2NvbnRhaW5lcnMvaHlwZXJrdWJlOiR7S1VCRV9WRVJTSU9OfSIKZmkKCmluaXRfdGVtcGxhdGVzICgpIHsKICAgIGxvY2FsIEtVQkVfUFJPVE9DT0w9Imh0dHBzIgogICAgbG9jYWwgS1VCRV9DT05GSUc9Ii9zcnYva3ViZXJuZXRlcy9rdWJlY29uZmlnLnlhbWwiCiAgICBpZiBbICIke1RMU19ESVNBQkxFRH0iID0gIlRydWUiIF07IHRoZW4KICAgICAgICBLVUJFX1BST1RPQ09MPSJodHRwIgogICAgICAgIEtVQkVfQ09ORklHPQogICAgZmkKCiAgICBsb2NhbCBNQVNURVI9IiR7S1VCRV9QUk9UT0NPTH06Ly8ke0tVQkVfTUFTVEVSX0lQfToke0tVQkVfQVBJX1BPUlR9IgogICAgbG9jYWwgVEVNUExBVEU9L2V0Yy9rdWJlcm5ldGVzL21hbmlmZXN0cy9rdWJlLXByb3h5LnlhbWwKICAgIFsgLWYgJHtURU1QTEFURX0gXSB8fCB7CiAgICAgICAgZWNobyAiVEVNUExBVEU6ICRURU1QTEFURSIKICAgICAgICBta2RpciAtcCAkKGRpcm5hbWUgJHtURU1QTEFURX0pCiAgICAgICAgY2F0IDw8IEVPRiA+ICR7VEVNUExBVEV9CmFwaVZlcnNpb246IHYxCmtpbmQ6IFBvZAptZXRhZGF0YToKICBuYW1lOiBrdWJlLXByb3h5CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtcHJveHkKICAgIGltYWdlOiAke0hZUEVSS1VCRV9JTUFHRX0KICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1tYXN0ZXI9JHtNQVNURVJ9CiAgICAtIC0ta3ViZWNvbmZpZz0ke0tVQkVfQ09ORklHfQogICAgLSAtLWxvZ3Rvc3RkZXJyPXRydWUKICAgIC0gLS12PTAKICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgdm9sdW1lTW91bnRzOgogICAgLSBtb3VudFBhdGg6IC9zcnYva3ViZXJuZXRlcwogICAgICBuYW1lOiAic3J2LWt1YmUiCiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgdm9sdW1lczoKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAiL3Nydi9rdWJlcm5ldGVzIgogICAgbmFtZTogInNydi1rdWJlIgpFT0YKICAgIH0KfQoKaW5pdF90ZW1wbGF0ZXMKCi0tPT09PT09PT09PT09PT09Njg4MDU5ODczNDAxOTcyNTgwNj09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKaWYgWyAiJFJFR0lTVFJZX0VOQUJMRUQiID0gIkZhbHNlIiBdOyB0aGVuCiAgICBleGl0IDAKZmkKCmVjaG8gInN0YXJ0aW5nIGRvY2tlciByZWdpc3RyeSAuLi4iCnN5c3RlbWN0bCBkYWVtb24tcmVsb2FkCnN5c3RlbWN0bCBlbmFibGUgcmVnaXN0cnkKc3lzdGVtY3RsIC0tbm8tYmxvY2sgc3RhcnQgcmVnaXN0cnkKCi0tPT09PT09PT09PT09PT09Njg4MDU5ODczNDAxOTcyNTgwNj09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9iYXNoIC12CmN1cmwgLWkgLVggUE9TVCAtSCAnWC1BdXRoLVRva2VuOiBnQUFBQUFCWWdHQjVub1hERFNiajhOZzNlSHBIZ0NiT1lNN3pFZ2xzT2dnaWZDekNCT2NsQ2NtMy1PTnBNVllFWi0zNmNXS01CUF9OWTdOR2ZhWHY4V1BPTHh1SExaRVJiU1l4WXRLelkwVms5LXBOUnA3VFI5SEVXemR5V1FfeVkwMUwwQVZkdEgyY1NRdFNtU25XZ3NwVXN5cHFzTFdMcUd4VHppYW5mTjQwQ3JxSVNxMlpaaVEnIC1IICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nIC1IICdBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24nIGh0dHA6Ly8xMC4xNjQuMTgwLjg1OjgwMDQvdjEvM2ZiZDZhMWZkNWYwNGUzMmJmNTg0ZGZkNGI0ZjljNWUvc3RhY2tzL2s4cy1jbHVzdGVyLXVpNGY0b2dlemhtNy1rdWJlX21pbmlvbnMtM2Q0NnN3NXA0Z2t2LTAtbXRmdWh2endqdmpyLzAxMzU2MzYwLWEyODMtNDU1ZC1iODczLWNhZmZhN2JjNDNjNy9yZXNvdXJjZXMvbWluaW9uX3dhaXRfaGFuZGxlL3NpZ25hbCAtLWRhdGEtYmluYXJ5ICd7InN0YXR1cyI6ICJTVUNDRVNTIn0nCgotLT09PT09PT09PT09PT09PTY4ODA1OTg3MzQwMTk3MjU4MDY9PS0tCg==',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='building'), SecurityGroupList(objects=[SecurityGroup(UNKNOWN)]), BlockDeviceMappingList(objects=[BlockDeviceMapping(UNKNOWN)]), 1, 0, False)", 
                "name": "nova.compute.api.API.create_db_entry_for_new_instance", 
                "kwargs": "{'create_instance': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b151ff9f-d2b3-42a4-b179-c1d9adedfd37": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'GET', '/floatingips')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'fixed_ip_address': u'10.0.0.3', 'port_id': u'fcff5957-172c-4937-8341-670d27155ef6'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c9cc8599-0983-4b69-a148-0a6fdcd05c2f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8d1d1b19-8a6e-4bc7-83c6-268f8a300f85": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ddafd90>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20141016 object at 0x7f952ddafad0>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4e373de1-fa75-456b-a353-0fb09296c7a4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "92640f64-882c-47b6-af09-1877715aee4c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "acc9d34d-ef4f-4918-8624-f5ab5ea29d5e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3af440ed-48ee-4c61-a2c0-168169bb5978": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a72298c1-c2ca-4ec6-8d62-1a4891ae234c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "092a5f0c-8cd3-47e3-8168-08921d3bbfe1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b9ac106f-6c58-4c2c-8b37-ef9094bfbc7a": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd0f6d0>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-network_service-m3kf6vpasirg', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$NETWORK_DRIVER\" != \"flannel\" ]; then\\n    exit 0\\nfi\\n\\nFLANNEL_DOCKER_BRIDGE_BIN=/usr/local/bin/flannel-docker-bridge\\nFLANNEL_DOCKER_BRIDGE_SERVICE=/etc/systemd/system/flannel-docker-bridge.service\\nDOCKER_FLANNEL_CONF=/etc/systemd/system/docker.service.d/flannel.conf\\nFLANNEL_DOCKER_BRIDGE_CONF=/etc/systemd/system/flanneld.service.d/flannel-docker-bridge.conf\\n\\nmkdir -p /etc/systemd/system/docker.service.d\\nmkdir -p /etc/systemd/system/flanneld.service.d\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_BIN <<EOF1\\n#!/bin/sh\\n\\nif ! [ \"\\\\$FLANNEL_SUBNET\" ] && [ \"\\\\$FLANNEL_MTU\" ] ; then\\n  echo \"ERROR: missing required environment variables.\" >&2\\n  exit 1\\nfi\\n\\nmkdir -p /run/flannel/\\ncat > /run/flannel/docker <<EOF2\\nDOCKER_NETWORK_OPTIONS=\"--bip=\\\\$FLANNEL_SUBNET --mtu=\\\\$FLANNEL_MTU\"\\nEOF2\\nEOF1\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_BIN\\nchmod 0755 $FLANNEL_DOCKER_BRIDGE_BIN\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_SERVICE <<EOF\\n[Unit]\\nAfter=flanneld.service\\nBefore=docker.service\\nRequires=flanneld.service\\n\\n[Service]\\nType=oneshot\\nEnvironmentFile=/run/flannel/subnet.env\\nExecStart=/usr/local/bin/flannel-docker-bridge\\n\\n[Install]\\nWantedBy=docker.service\\nEOF\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_SERVICE\\nchmod 0644 $FLANNEL_DOCKER_BRIDGE_SERVICE\\n\\ncat >> $DOCKER_FLANNEL_CONF <<EOF\\n[Unit]\\nRequires=flannel-docker-bridge.service\\nAfter=flannel-docker-bridge.service\\n\\n[Service]\\nEnvironmentFile=/run/flannel/docker\\nEOF\\n\\nchown root:root $DOCKER_FLANNEL_CONF\\nchmod 0644 $DOCKER_FLANNEL_CONF\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_CONF <<EOF\\n[Unit]\\nRequires=flannel-docker-bridge.service\\nBefore=flannel-docker-bridge.service\\n\\n[Install]\\nAlso=flannel-docker-bridge.service\\nEOF\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_CONF\\nchmod 0644 $FLANNEL_DOCKER_BRIDGE_CONF\\n\\necho \"activating service flanneld\"\\nsystemctl enable flanneld\\nsystemctl --no-block start flanneld\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6c543393-6591-4ef2-aa56-65e62d094e25": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "1880527a-dc63-4dc1-894c-a0d30a34a40b": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "04cb3b86-c1bf-4ed7-8745-626ea363c1dd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "741dba0b-e4ab-4884-81b9-4db0618a726d": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dce3390>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c353a972-7008-49b5-9819-ab2147523de1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4006c049-0a58-4717-8267-e2d734065691": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e50d710>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDevicePool': u'1.1', u'Service': u'1.20', u'InstancePCIRequests': u'1.1', u'SecurityGroup': u'1.2', u'BlockDeviceMappingList': u'1.17', u'Instance': u'2.3', u'DeviceMetadata': u'1.0', u'SecurityGroupList': u'1.0', u'VirtCPUTopology': u'1.0', u'InstanceFault': u'1.2', u'InstanceDeviceMetadata': u'1.0', u'PciDeviceList': u'1.3', u'PciDevicePoolList': u'1.1', u'ServiceList': u'1.19', u'BlockDeviceMapping': u'1.17', u'VirtCPUModel': u'1.0', u'MigrationContext': u'1.1', u'KeyPair': u'1.4', u'KeyPairList': u'1.3', u'InstancePCIRequest': u'1.1', u'Flavor': u'1.1', u'InstanceInfoCache': u'1.5', u'VirtCPUFeature': u'1.0', u'PciDevice': u'1.5', u'InstanceNUMACell': u'1.3', u'DeviceBus': u'1.0', u'ComputeNode': u'1.16', u'Tag': u'1.1', u'HVSpec': u'1.2', u'EC2Ids': u'1.0', u'InstanceNUMATopology': u'1.3', u'TagList': u'1.1'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'], u'objname': u'BlockDeviceMappingList', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d53841c1-eae3-4c59-9185-6587ba647188": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, 'GET', '/networks')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'f55f8258-835a-4732-ba02-0b3c78b6c1c1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0cb780fe-b57a-4003-8f8a-c3deb2247dd0": {
            "function": {
                "args": "(<cinder.scheduler.manager.SchedulerManager object at 0x7fae70c79f90>, <cinder.context.RequestContext object at 0x7fae4f521950>)", 
                "name": "cinder.scheduler.manager.SchedulerManager.create_volume", 
                "kwargs": "{u'volume': Volume(_name_id=None,admin_metadata=<?>,attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:45:13Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-docker_volume-mepwnfw7kzo7',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host=None,id=1ad44791-704f-415a-a915-fb4ba2c7c87e,launched_at=None,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth=None,provider_geometry=None,provider_id=None,provider_location=None,replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=None,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='creating',terminated_at=None,updated_at=None,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=<?>,volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), u'image_id': None, u'request_spec': RequestSpec(CG_backend=<?>,cgsnapshot_id=None,consistencygroup_id=None,group_backend=<?>,group_id=None,image_id=None,snapshot_id=None,source_replicaid=None,source_volid=None,volume=Volume(1ad44791-704f-415a-a915-fb4ba2c7c87e),volume_id=1ad44791-704f-415a-a915-fb4ba2c7c87e,volume_properties=VolumeProperties,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32)), u'filter_properties': {}, u'snapshot_id': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "742ab336-931c-4704-899a-7c85c8ebc043": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "20295839-9932-495d-905b-3101e33201d6": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/users", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "b2081c92-7a20-4a72-acb5-0ed4992afd61": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dcfa750>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2889289c-10f7-4ec6-a743-b50342d1eb79": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e1910d0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': u'13c87b99-27dd-4a69-bf6c-ed4447cbb04f'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "18925172-c19e-4996-92cd-5bdba7b8ad88": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e42411e2-bc8e-442e-9ae0-39cbdb60f69e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/extensions", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "557609d9-a860-43f1-8a53-3b78927f6056": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3b2c952d-3017-4ccd-b3a5-f244d8b496bd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "beffc606-1756-460b-a5a0-727cc5ff6dc4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4652eccd-2180-4a1c-bc0f-3926155244ef": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd1af90>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 56, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'13c87b99-27dd-4a69-bf6c-ed4447cbb04f'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "20cac311-a6f8-4705-9b77-3758be6967a8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3ec02151-f7fd-4c73-822e-439ae7799365": {
            "function": {
                "args": "(<nova.virt.libvirt.vif.LibvirtGenericVIFDriver object at 0x7f67efb80e90>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic',network_allocated='True'},tags=<?>,task_state='spawning',terminated_at=None,updated_at=2017-01-19T06:42:23Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=VirtCPUModel,vcpus=1,vm_mode=None,vm_state='building'), {\"profile\": {}, \"ovs_interfaceid\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"preserve_on_delete\": true, \"network\": {\"bridge\": \"br-int\", \"subnets\": [{\"ips\": [{\"meta\": {}, \"version\": 4, \"type\": \"fixed\", \"floating_ips\": [{\"meta\": {}, \"version\": 4, \"type\": \"floating\", \"address\": \"172.24.4.11\"}], \"address\": \"10.0.0.9\"}], \"version\": 4, \"meta\": {\"dhcp_server\": \"10.0.0.2\"}, \"dns\": [{\"meta\": {}, \"version\": 4, \"type\": \"dns\", \"address\": \"8.8.8.8\"}], \"routes\": [], \"cidr\": \"10.0.0.0/24\", \"gateway\": {\"meta\": {}, \"version\": 4, \"type\": \"gateway\", \"address\": \"10.0.0.1\"}}], \"meta\": {\"injected\": false, \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"mtu\": 1450}, \"id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"label\": \"private\"}, \"devname\": \"tap2c0275e1-3f\", \"vnic_type\": \"normal\", \"qbh_params\": null, \"meta\": {}, \"details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"address\": \"fa:16:3e:a9:11:04\", \"active\": false, \"type\": \"ovs\", \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"qbg_params\": null}, ImageMeta(checksum='1db43e5c5f8fda49dc4324cbb391bc55',container_format='bare',created_at=2017-01-19T04:22:26Z,direct_url=<?>,disk_format='qcow2',id=63388f50-4450-4c85-8f3c-197af8f6f6cf,min_disk=0,min_ram=0,name='fedora-atomic-latest',owner='952ab5c3e12a4e4093bed04b75f3afc5',properties=ImageMetaProps,protected=<?>,size=697925632,status='active',tags=<?>,updated_at=2017-01-19T04:28:13Z,virtual_size=<?>,visibility=<?>), Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), 'kvm', <nova.virt.libvirt.host.Host object at 0x7f67efb80d50>)", 
                "name": "nova.virt.libvirt.vif.LibvirtGenericVIFDriver.get_config", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "137dfd8b-caa2-46f8-bf6f-f97f07fdd08e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors/m1.small", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "aae551ef-30e9-4fc3-ba35-5c3d8842478f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>, 'fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.show_port", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "94b01368-50ff-4b63-9d2a-f864331811c0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "20b4ed71-ad53-4388-a569-4fd71ff88982": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e6eb5937-7998-4ae9-859b-86204eb5ecd0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1638bce3-40fb-4ecb-979b-4b9249026076": {
            "function": {
                "args": "(<magnum.conductor.api.API object at 0x7f1a3a290e10>, <magnum.common.context.RequestContext object at 0x7f1a39890f50>, 'ClusterTemplate', 'get_by_uuid', '1.17', (u'020f1324-a3e1-45d6-9373-f4f353810eda',), {})", 
                "name": "magnum.conductor.api.API.object_class_action", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4bc72e98-d0ba-49c1-8a44-dc340e8407bd": {
            "function": {
                "args": "(<nova.compute.rpcapi.ComputeAPI object at 0x7faa4f5be310>, <nova.context.RequestContext object at 0x7faa4e2f5250>)", 
                "name": "nova.compute.rpcapi.ComputeAPI.build_and_run_instance", 
                "kwargs": "{'node': u'vinhnt-LAB', 'request_spec': {'instance_properties': {'vm_state': u'building', 'keypairs': [{'public_key': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\\n', 'user_id': u'34b35d595bf84b739aefa6458d6facb7', 'name': u'testkey', 'deleted': False, 'created_at': '2017-01-19T06:39:24.000000', 'updated_at': None, 'fingerprint': u'd4:e3:3f:e5:f8:ec:1c:8b:bc:cb:7a:5c:53:c4:93:f9', 'deleted_at': None, 'type': u'ssh', 'id': 1}], 'pci_requests': {'instance_uuid': '5299fdb3-2219-46f9-8c52-86fce045e372', 'requests': []}, 'availability_zone': None, 'terminated_at': None, 'ephemeral_gb': 0, 'old_flavor': None, 'updated_at': None, 'numa_topology': None, 'display_description': u'k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll', 'cleaned': False, 'vm_mode': None, 'flavor': {'memory_mb': 2048, 'root_gb': 20, 'deleted_at': None, 'name': u'm1.small', 'deleted': False, 'created_at': '2017-01-19T04:24:14.000000', 'ephemeral_gb': 0, 'updated_at': None, 'disabled': False, 'vcpus': 1, 'extra_specs': {}, 'swap': 0, 'rxtx_factor': 1.0, 'is_public': True, 'flavorid': u'2', 'vcpu_weight': 0, 'id': 7}, 'deleted_at': None, 'reservation_id': u'r-sp4hc8rx', 'id': 3, 'security_groups': [], 'disable_terminate': False, 'instance_type_id': 7, 'user_id': u'34b35d595bf84b739aefa6458d6facb7', 'uuid': '5299fdb3-2219-46f9-8c52-86fce045e372', 'default_swap_device': None, 'info_cache': {'instance_uuid': '5299fdb3-2219-46f9-8c52-86fce045e372', 'deleted': False, 'created_at': '2017-01-19T06:45:21.000000', 'updated_at': None, 'network_info': [], 'deleted_at': None}, 'hostname': u'k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll', 'launched_on': None, 'ec2_ids': {'instance_id': u'i-00000003', 'kernel_id': None, 'ami_id': u'ami-00000004', 'ramdisk_id': None}, 'key_data': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\\n', 'vcpu_model': None, 'power_state': 0, 'device_metadata': None, 'default_ephemeral_device': None, 'progress': 0, 'project_id': u'f789928a4f254f96965ff7f3dedd02be', 'launched_at': None, 'config_drive': u'', 'node': None, 'ramdisk_id': u'', 'access_ip_v6': None, 'access_ip_v4': None, 'deleted': False, 'key_name': u'testkey', 'user_data': u'', 'host': None, 'ephemeral_key_uuid': None, 'architecture': None, 'display_name': u'k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll', 'system_metadata': {u'image_os_distro': u'fedora-atomic', 'instance_type_memory_mb': 2048, 'instance_type_swap': 0, 'instance_type_vcpu_weight': 0, 'instance_type_root_gb': 20, 'instance_type_id': 7, 'instance_type_name': u'm1.small', 'instance_type_ephemeral_gb': 0, 'instance_type_rxtx_factor': 1.0, u'image_min_disk': u'20', 'instance_type_flavorid': u'2', u'image_container_format': u'bare', 'instance_type_vcpus': 1, u'image_min_ram': u'0', u'image_disk_format': u'qcow2', u'image_base_image_ref': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, 'task_state': u'scheduling', 'shutdown_terminate': False, 'cell_name': None, 'root_gb': 20, 'kernel_id': u'', 'name': 'instance-00000003', 'created_at': '2017-01-19T06:45:20.000000', 'locked_by': None, 'launch_index': 0, 'locked': False, 'memory_mb': 2048, 'vcpus': 1, 'image_ref': u'63388f50-4450-4c85-8f3c-197af8f6f6cf', 'root_device_name': None, 'auto_disk_config': False, 'os_type': None, 'metadata': {}, 'new_flavor': None}, 'instance_type': {'memory_mb': 2048, 'root_gb': 20, 'deleted_at': None, 'name': u'm1.small', 'deleted': False, 'created_at': '2017-01-19T04:24:14.000000', 'ephemeral_gb': 0, 'updated_at': None, 'disabled': False, 'vcpus': 1, 'extra_specs': {}, 'swap': 0, 'rxtx_factor': 1.0, 'is_public': True, 'flavorid': u'2', 'vcpu_weight': 0, 'id': 7}, 'image': {u'status': u'active', u'created_at': u'2017-01-19T04:22:26.000000', u'name': u'fedora-atomic-latest', u'deleted': False, u'container_format': u'bare', u'min_ram': 0, u'disk_format': u'qcow2', u'updated_at': u'2017-01-19T04:28:13.000000', u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf', u'min_disk': 0, u'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', u'is_public': True, u'deleted_at': None, u'properties': {u'os_distro': u'fedora-atomic'}, u'size': 697925632}, 'num_instances': 1}, 'requested_networks': NetworkRequestList(objects=[NetworkRequest]), 'limits': {u'memory_mb': 23812.5, u'disk_gb': 442.0}, 'block_device_mapping': BlockDeviceMappingList(objects=[BlockDeviceMapping(4)]), 'image': {u'status': u'active', u'deleted': False, u'container_format': u'bare', u'min_ram': 0, u'updated_at': u'2017-01-19T04:28:13.000000', u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', u'min_disk': 0, u'is_public': True, u'deleted_at': None, u'properties': {u'os_distro': u'fedora-atomic'}, u'size': 697925632, u'name': u'fedora-atomic-latest', u'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'created_at': u'2017-01-19T04:22:26.000000', u'disk_format': u'qcow2', u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, 'filter_properties': {u'instance_type': Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), 'retry': {'num_attempts': 1, 'hosts': [[u'vinhnt-LAB', u'vinhnt-LAB']]}, 'limits': {u'memory_mb': 23812.5, u'disk_gb': 442.0}, u'scheduler_hints': {}}, 'instance': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host=None,hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on=None,locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node=None,numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='scheduling',terminated_at=None,updated_at=None,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), 'host': u'vinhnt-LAB', 'admin_password': u'oTH8wdZGi2BD', 'injected_files': [], 'security_groups': [u'default']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3d498e0c-4f78-4156-95eb-5d79e0656a89": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "6f5d51e7-90ab-446b-ba6f-33792194ff8c": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "786b1384-7cec-4c58-a02f-8ea61b6fff13": {
            "function": {
                "args": "(<nova.conductor.manager.ComputeTaskManager object at 0x7faa4f20ea10>, <nova.context.RequestContext object at 0x7faa4e2f5250>)", 
                "name": "nova.conductor.manager.ComputeTaskManager.build_instances", 
                "kwargs": "{u'requested_networks': NetworkRequestList(objects=[NetworkRequest]), u'image': {u'status': u'active', u'deleted': False, u'container_format': u'bare', u'min_ram': 0, u'updated_at': u'2017-01-19T04:28:13.000000', u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', u'min_disk': 0, u'is_public': True, u'deleted_at': None, u'properties': {u'os_distro': u'fedora-atomic'}, u'size': 697925632, u'name': u'fedora-atomic-latest', u'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'created_at': u'2017-01-19T04:22:26.000000', u'disk_format': u'qcow2', u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, u'filter_properties': {u'instance_type': Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), u'scheduler_hints': {}}, u'instances': [Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host=None,hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on=None,locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node=None,numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='scheduling',terminated_at=None,updated_at=None,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building')], u'admin_password': u'oTH8wdZGi2BD', u'injected_files': [], u'security_groups': [u'default']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "24c4a5d4-8896-428a-9f24-b30af091d423": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "aacba03e-f4ce-4967-9f2b-ebe4cb554de1": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "cb3dbbe4-5527-41e8-87fe-68fdf5cd32f7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4f781a7a-5e33-49ce-9308-785c0e00c5d9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cf761653-9423-4b95-b80c-18f46be43675": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "ed3dc027-bf4e-4a79-bc79-74e7654b0603": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "06bd90df-b314-43fc-aaf8-7d8c5c0f6319": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "eef3bfcc-6beb-4f62-b073-48bb2a847a0e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/5299fdb3-2219-46f9-8c52-86fce045e372", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "389326e1-ea50-4372-8408-99dc2185634a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "06ccd1f6-b406-458c-ad99-9d11f2415b39": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "290e22ef-b6ed-4358-b254-c8088efb7278": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "67d3da67-68a3-4b92-95c6-624e7a9a54b0": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e363c50>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': InstanceInfoCache(created_at=<?>,deleted=<?>,deleted_at=<?>,instance_uuid=5299fdb3-2219-46f9-8c52-86fce045e372,network_info=NetworkModel(fcff5957-172c-4937-8341-670d27155ef6),updated_at=<?>), u'kwargs': {u'update_cells': True}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "673ddd31-3276-4671-a812-7eb59a4b4c5e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dea0fb68-77b0-4e6a-9cd9-d2d3370b8223": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "05f6efdd-ef60-46da-a243-5be688d6887b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "244926e3-4d2f-4487-9d7e-ef6e2a329bc7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1c617f25-2a6e-433d-a48c-34084d651899": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd7aed0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 5, u'data': {u'input_data': {u'tuple:(6, True)': {u'status': u'COMPLETE', u'name': u'etcd_lb', u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-etcd_lb-kbhpmtcuvob2/a1cc2b35-433b-4395-af9a-299915cb643d', u'attrs': {u'pool_id': u'eaebe04d-665b-44e0-b618-38b9d529f6b0', u'address': None}, u'action': u'CREATE', u'id': 6, u'uuid': u'c54ab83a-ef64-4504-ace8-30ad9520a9b8'}, u'tuple:(9, True)': {u'status': u'COMPLETE', u'name': u'network', u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-network-bsueqzfm4pjs/4f715e6a-6c85-4397-adb1-c21fee6efcbb', u'attrs': {u'fixed_network': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', u'fixed_subnet': u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257'}, u'action': u'CREATE', u'id': 9, u'uuid': u'4ace3d32-8486-40ca-9045-69b97b368568'}, u'tuple:(7, True)': {u'status': u'COMPLETE', u'name': u'secgroup_kube_master', u'uuid': u'98e91487-4bed-4dc5-a10b-0a3ed7baee88', u'attrs': {}, u'action': u'CREATE', u'id': 7, u'reference_id': u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1'}, u'tuple:(8, True)': {u'status': u'COMPLETE', u'name': u'api_lb', u'uuid': u'a1f01882-6176-4f7d-b0f6-f9cd5c065e5a', u'attrs': {u'floating_address': None, u'pool_id': u'aec31665-24b9-47af-bd4e-25280a0bb5bb', u'address': None}, u'action': u'CREATE', u'id': 8, u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-api_lb-67lbo2q7agec/e4fa21f9-93ac-49a8-9433-3f4b1be63733'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'e26ac53a-442d-4077-b980-74afdd7ee184'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "afbb089f-60b7-4348-92a7-f4ce005f911c": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dce8610>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b2d941b3-262d-4b6b-ab22-869cc7fec931": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e5ebe10>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': BlockDeviceMapping(boot_index=None,connection_info='{\"driver_volume_type\": \"iscsi\", \"connector\": {\"platform\": \"x86_64\", \"host\": \"vinhnt-LAB\", \"do_local_attach\": false, \"ip\": \"10.164.180.85\", \"os_type\": \"linux2\", \"multipath\": false, \"initiator\": \"iqn.1993-08.org.debian:01:1cd767b1343d\"}, \"serial\": \"1ad44791-704f-415a-a915-fb4ba2c7c87e\", \"data\": {\"access_mode\": \"rw\", \"target_discovered\": false, \"encrypted\": false, \"qos_specs\": null, \"target_iqn\": \"iqn.2010-10.org.openstack:volume-1ad44791-704f-415a-a915-fb4ba2c7c87e\", \"target_portal\": \"10.164.180.85:3260\", \"volume_id\": \"1ad44791-704f-415a-a915-fb4ba2c7c87e\", \"target_lun\": 1, \"device_path\": \"/dev/disk/by-path/ip-10.164.180.85:3260-iscsi-iqn.2010-10.org.openstack:volume-1ad44791-704f-415a-a915-fb4ba2c7c87e-lun-1\", \"auth_password\": \"***\", \"auth_username\": \"TDW5RwwS3v4Lc7vMtMSQ\", \"auth_method\": \"CHAP\"}}',created_at=2017-01-19T06:45:31Z,delete_on_termination=False,deleted=False,deleted_at=None,destination_type='volume',device_name='/dev/vdb',device_type=None,disk_bus=None,guest_format=None,id=5,image_id=None,instance=<?>,instance_uuid=5299fdb3-2219-46f9-8c52-86fce045e372,no_device=False,snapshot_id=None,source_type='volume',tag=None,updated_at=None,volume_id='1ad44791-704f-415a-a915-fb4ba2c7c87e',volume_size=3), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1f11c3b0-ac60-432b-9578-6f01e2f665ce": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f17d6685-3e72-48bc-a3e1-0ed38f46d3db": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "794d8f1c-34e7-442e-9c7f-a878f9b26226": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cc45919f-a884-4630-9f5f-ceb83cb6d8da": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952ddd1910>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'dbc7bdcd-4deb-49e2-97bb-5c6f2684f42b'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ef9ef264-0fd2-4345-8496-1b4ac2caeb1f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_floatingips", 
                "kwargs": "{'fixed_ip_address': u'10.0.0.9', 'port_id': u'2c0275e1-3f3e-4ca5-aa69-a0660197e312'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d34a33d5-b58b-4327-98fb-29756c128288": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "33437341-260d-4671-a91b-fe1b0e09a81f": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e193610>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-enable_kube_controller_manager_scheduler-nmioi5jctc5k', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    HYPERKUBE_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/hyperkube:${KUBE_VERSION}\"\\nelse\\n    HYPERKUBE_IMAGE=\"gcr.io/google_containers/hyperkube:${KUBE_VERSION}\"\\nfi\\n\\n# vars also used by the Kubernetes config files\\nunset KUBE_API_PORT\\nunset KUBE_ALLOW_PRIV\\n\\n# this function generate a list of args (one per line) from a list of possibly nested args\\n# the first parameter is the prefix to be added before each arg\\n# empty args are ignored\\ngenerate_pod_args() {\\n    prefix=$1\\n\\n    for var in \"${@:2}\" ; do\\n        for arg in \"$var\" ; do\\n            echo \"$prefix$arg\"\\n        done\\n    done\\n}\\n\\n\\ninit_templates () {\\n    . /etc/kubernetes/config\\n\\n    . /etc/kubernetes/controller-manager\\n\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-controller-manager.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-controller-manager\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-controller-manager\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - controller-manager\\n    - --leader-elect=true\\n$(generate_pod_args \"    - \" $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBE_MASTER $KUBE_CONTROLLER_MANAGER_ARGS)\\n    livenessProbe:\\n      httpGet:\\n        host: 127.0.0.1\\n        path: /healthz\\n        port: 10252\\n      initialDelaySeconds: 15\\n      timeoutSeconds: 1\\n    volumeMounts:\\n    - mountPath: /etc/ssl/certs\\n      name: ssl-certs-host\\n      readOnly: true\\n    - mountPath: /srv/kubernetes\\n      name: kubernetes-config\\n      readOnly: true\\n    - mountPath: /etc/sysconfig\\n      name: sysconfig\\n      readOnly: true\\n  volumes:\\n  - hostPath:\\n      path: /etc/ssl/certs\\n    name: ssl-certs-host\\n  - hostPath:\\n      path: /srv/kubernetes\\n    name: kubernetes-config\\n  - hostPath:\\n      path: /etc/sysconfig\\n    name: sysconfig\\nEOF\\n    }\\n\\n    . /etc/kubernetes/scheduler\\n\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-scheduler.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-scheduler\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-scheduler\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - scheduler\\n    - --leader-elect=true\\n$(generate_pod_args \"    - \" $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBE_MASTER $KUBE_SCHEDULER_ARGS)\\n    livenessProbe:\\n      httpGet:\\n        host: 127.0.0.1\\n        path: /healthz\\n        port: 10251\\n      initialDelaySeconds: 15\\n      timeoutSeconds: 1\\n    volumeMounts:\\n    - mountPath: /etc/ssl/certs\\n      name: ssl-certs-host\\n      readOnly: true\\n    - mountPath: /srv/kubernetes\\n      name: kubernetes-config\\n      readOnly: true\\n    - mountPath: /etc/sysconfig\\n      name: sysconfig\\n      readOnly: true\\n  volumes:\\n  - hostPath:\\n      path: /etc/ssl/certs\\n    name: ssl-certs-host\\n  - hostPath:\\n      path: /srv/kubernetes\\n    name: kubernetes-config\\n  - hostPath:\\n      path: /etc/sysconfig\\n    name: sysconfig\\nEOF\\n    }\\n}\\n\\ninit_templates\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "896c2b21-4178-4797-81dc-b8a75fb0205f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0e780f66-6968-4aaa-aec2-85c5d450a6a4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.put", 
                "kwargs": "{'body': {'port': {'device_owner': 'compute:None', 'binding:host_id': u'vinhnt-LAB', 'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cfd5911c-c3a3-4250-a8fd-ef605e8f9e7f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8f7c5d37-caa2-4d8b-8475-1f46441504ea": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0087eff3-f535-4898-b0a2-249a2989de58": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cd9bcdaa-2ce5-44de-a3a1-cde328b48f03": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e014cd0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 77, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bc448ca8-c4cd-4a8f-96c9-ba0bad2163bc": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "8375251b-cbaa-4c2e-a9b2-a55eb5cd9dde": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>, <bound method ClientWrapper.show_port of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "749c13e6-ef0d-40a6-837e-ac1d9fac0f53": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "1a59454c-7a96-4e47-94b7-27e971a22bed": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "a8478e2b-38e7-4863-aa78-0c73acdf1bc4": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "d9e2eff3-b726-4451-895c-1fbd93931b7a": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952d821410>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8c88c02b-9037-4162-a907-01e77c2a70a5": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dcfafd0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'21f1511e-39b4-49f1-9102-29b76ccef381'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c65a14b2-390f-49e9-b5f3-8f40251ff6b7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "adde0b74-4035-47c8-826e-64810b605984": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dfcba90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d7f31db1-30dc-42d1-8e4c-1a56472d55ae": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "565cc932-352f-4978-8040-7727122b2c7d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "181b32d9-7328-4879-8945-4c8ce25b9f03": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6dc42b98-6151-410f-8482-169850d0d020": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/5299fdb3-2219-46f9-8c52-86fce045e372/os-volume_attachments", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "24a2d3d5-23bc-4641-8f6e-e74bbb87a827": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "21446daa-fa00-41aa-93ba-5aad774703a5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>, <bound method ClientWrapper.show_port of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "28bfcb5f-99d9-4f0b-9fd9-12463d912dcb": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors/2", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "34b3e5fc-033f-48cd-b991-156e096bef2b": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "12e357e6-7494-46fe-8ff6-c46397ec2e73": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f9009431-f9e1-464d-81c1-e34145a8fa9b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "243fd766-5291-4fa7-91b9-6ddc39126fb9": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e016390>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 1, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-network-bsueqzfm4pjs', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 60}, u'environment_files': None, u'parent_resource_name': u'network', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 2, u'owner_id': u'bf103727-c468-4586-a97c-2c940f7e4d29'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6c0e4c8c-e001-44cb-a667-bd7139202f81": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "313f7117-465c-4d87-813e-c1edc4ace81c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7dc81e3b-c2fc-4109-a023-bb83d7e1270c": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3813785d0>, <nova.context.RequestContext object at 0x7ff37e930710>, u'5299fdb3-2219-46f9-8c52-86fce045e372')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "501c1220-b144-4d0d-bd71-e88063a9f26c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "de89f025-b4e8-4843-906c-f35d40e7a78b": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952db2c3d0>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'Heat::Ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_init-nsnwwnrbxhxa', u'outputs': [], u'config': u'Content-Type: multipart/mixed; boundary=\"===============6880598734019725806==\"\\nMIME-Version: 1.0\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#cloud-boothook\\n#!/bin/sh\\n\\nsetenforce 0\\n\\nsed -i \\'\\n    /^SELINUX=/ s/=.*/=permissive/\\n\\' /etc/selinux/config\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /etc/sysconfig/heat-params\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      KUBE_ALLOW_PRIV=\"true\"\\n      KUBE_MASTER_IP=\"10.0.0.9\"\\n      KUBE_API_PORT=\"8080\"\\n      KUBE_NODE_PUBLIC_IP=\"172.24.4.4\"\\n      KUBE_NODE_IP=\"10.0.0.3\"\\n      ETCD_SERVER_IP=\"10.0.0.9\"\\n      ENABLE_CINDER=\"$ENABLE_CINDER\"\\n      DOCKER_VOLUME=\"1ad44791-704f-415a-a915-fb4ba2c7c87e\"\\n      DOCKER_VOLUME_SIZE=\"3\"\\n      DOCKER_STORAGE_DRIVER=\"devicemapper\"\\n      NETWORK_DRIVER=\"flannel\"\\n      REGISTRY_ENABLED=\"False\"\\n      REGISTRY_PORT=\"5000\"\\n      SWIFT_REGION=\"\"\\n      REGISTRY_CONTAINER=\"container\"\\n      REGISTRY_INSECURE=\"True\"\\n      REGISTRY_CHUNKSIZE=\"5242880\"\\n      TLS_DISABLED=\"True\"\\n      CLUSTER_UUID=\"9a8ea37c-e9d3-4a7a-a2b1-dc164fb21d67\"\\n      MAGNUM_URL=\"http://10.164.180.85:9511/v1\"\\n      AUTH_URL=\"http://10.164.180.85:5000/v3\"\\n      USERNAME=\"admin\"\\n      PASSWORD=\"ChangeMe\"\\n      VOLUME_DRIVER=\"cinder\"\\n      REGION_NAME=\"RegionOne\"\\n      TENANT_NAME=\"f789928a4f254f96965ff7f3dedd02be\"\\n      HTTP_PROXY=\"http://10.164.177.168:8080/\"\\n      HTTPS_PROXY=\"http://10.164.177.168:8080/\"\\n      NO_PROXY=\"10.164.180.85,10.0.0.0/8,172.0.0.0/8\"\\n      WAIT_CURL=\"curl -i -X POST -H \\'X-Auth-Token: gAAAAABYgGB5noXDDSbj8Ng3eHpHgCbOYM7zEglsOggifCzCBOclCcm3-ONpMVYEZ-36cWKMBP_NY7NGfaXv8WPOLxuHLZERbSYxYtKzY0Vk9-pNRp7TR9HEWzdyWQ_yY01L0AVdtH2cSQtSmSnWgspUsypqsLWLqGxTzianfN40CrqISq2ZZiQ\\' -H \\'Content-Type: application/json\\' -H \\'Accept: application/json\\' http://10.164.180.85:8004/v1/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/stacks/k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr/01356360-a283-455d-b873-caffa7bc43c7/resources/minion_wait_handle/signal\"\\n      KUBE_VERSION=\"v1.2.0\"\\n      TRUSTEE_USER_ID=\"44f763e5727747eeba6f3095d7a86952\"\\n      TRUSTEE_USERNAME=\"9a8ea37c-e9d3-4a7a-a2b1-dc164fb21d67\"\\n      TRUSTEE_PASSWORD=\"7BXp9ABpBgeK5zatdT\"\\n      TRUSTEE_DOMAIN_ID=\"89c8eaf1c4ea4baa8521ab786865f857\"\\n      TRUST_ID=\"a6f5cdd3ef814c32bd36b133781786bc\"\\n      INSECURE_REGISTRY_URL=\"\"\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /srv/kubernetes/kubeconfig.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Config\\n      users:\\n      - name: kubeclient\\n        user:\\n          client-certificate: CLIENT_CERT\\n          client-key: CLIENT_KEY\\n      clusters:\\n      - name: kubernetes\\n        cluster:\\n          certificate-authority: CA_CERT\\n      contexts:\\n      - context:\\n          cluster: kubernetes\\n          user: kubeclient\\n        name: service-account-context\\n      current-context: service-account-context\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n# Copyright 2014 The Kubernetes Authors All rights reserved.\\n#\\n# Licensed under the Apache License, Version 2.0 (the \"License\");\\n# you may not use this file except in compliance with the License.\\n# You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \"AS IS\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n. /etc/sysconfig/heat-params\\n\\nset -o errexit\\nset -o nounset\\nset -o pipefail\\n\\nif [ \"$TLS_DISABLED\" == \"True\" ]; then\\n    exit 0\\nfi\\n\\ncert_dir=/srv/kubernetes\\ncert_conf_dir=${cert_dir}/conf\\n\\nmkdir -p \"$cert_dir\"\\nmkdir -p \"$cert_conf_dir\"\\n\\nCA_CERT=$cert_dir/ca.crt\\nCLIENT_CERT=$cert_dir/client.crt\\nCLIENT_CSR=$cert_dir/client.csr\\nCLIENT_KEY=$cert_dir/client.key\\n\\n#Get a token by user credentials and trust\\nauth_json=$(cat << EOF\\n{\\n    \"auth\": {\\n        \"identity\": {\\n            \"methods\": [\\n                \"password\"\\n            ],\\n            \"password\": {\\n                \"user\": {\\n                    \"id\": \"$TRUSTEE_USER_ID\",\\n                    \"password\": \"$TRUSTEE_PASSWORD\"\\n                }\\n            }\\n        },\\n        \"scope\": {\\n            \"OS-TRUST:trust\": {\\n                \"id\": \"$TRUST_ID\"\\n            }\\n        }\\n    }\\n}\\nEOF\\n)\\n\\n#trust is introduced in Keystone v3 version\\nAUTH_URL=${AUTH_URL/v2.0/v3}\\ncontent_type=\\'Content-Type: application/json\\'\\nurl=\"$AUTH_URL/auth/tokens\"\\nUSER_TOKEN=`curl -k -s -i -X POST -H \"$content_type\" -d \"$auth_json\" $url \\\\\\n    | grep X-Subject-Token | awk \\'{print $2}\\' | tr -d \\'[[:space:]]\\'`\\n\\n# Get CA certificate for this cluster\\ncurl -k -X GET \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    $MAGNUM_URL/certificates/$CLUSTER_UUID | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > $CA_CERT\\n\\n# Create config for client\\'s csr\\ncat > ${cert_conf_dir}/client.conf <<EOF\\n[req]\\ndistinguished_name = req_distinguished_name\\nreq_extensions     = req_ext\\nprompt = no\\n[req_distinguished_name]\\nCN = kubernetes.invalid\\n[req_ext]\\nkeyUsage=critical,digitalSignature,keyEncipherment\\nextendedKeyUsage=clientAuth\\nsubjectAltName=dirName:kubelet,dirName:kubeproxy\\n[kubelet]\\nCN=kubelet\\n[kubeproxy]\\nCN=kube-proxy\\nEOF\\n\\n# Generate client\\'s private key and csr\\nopenssl genrsa -out \"${CLIENT_KEY}\" 4096\\nchmod 400 \"${CLIENT_KEY}\"\\nopenssl req -new -days 1000 \\\\\\n        -key \"${CLIENT_KEY}\" \\\\\\n        -out \"${CLIENT_CSR}\" \\\\\\n        -reqexts req_ext \\\\\\n        -config \"${cert_conf_dir}/client.conf\"\\n\\n# Send csr to Magnum to have it signed\\ncsr_req=$(python -c \"import json; fp = open(\\'${CLIENT_CSR}\\'); print json.dumps({\\'cluster_uuid\\': \\'$CLUSTER_UUID\\', \\'csr\\': fp.read()}); fp.close()\")\\ncurl -k -X POST \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    -H \"Content-Type: application/json\" \\\\\\n    -d \"$csr_req\" \\\\\\n    $MAGNUM_URL/certificates | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > ${CLIENT_CERT}\\n\\n# Common certs and key are created for both etcd and kubernetes services.\\n# Both etcd and kube user should have permission to access the certs and key.\\ngroupadd kube_etcd\\nusermod -a -G kube_etcd etcd\\nusermod -a -G kube_etcd kube\\nchmod 550 \"${cert_dir}\"\\nchown -R kube:kube_etcd \"${cert_dir}\"\\nchmod 440 $CLIENT_KEY\\n\\nsed -i \\'\\n    s|CA_CERT|\\'\"$CA_CERT\"\\'|\\n    s|CLIENT_CERT|\\'\"$CLIENT_CERT\"\\'|\\n    s|CLIENT_KEY|\\'\"$CLIENT_KEY\"\\'|\\n\\' /srv/kubernetes/kubeconfig.yaml\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /etc/kubernetes/examples/replication-controller.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: ReplicationController\\n      metadata:\\n        name: nginx-controller\\n      spec:\\n        replicas: 2\\n        # selector identifies the set of pods that this\\n        # replication controller is responsible for managing\\n        selector:\\n          name: nginx\\n        # template defines the \\'cookie cutter\\' used for creating\\n        # new pods when necessary\\n        template:\\n          metadata:\\n            labels:\\n              # Important: these labels need to match the selector above\\n              # The api server enforces this constraint.\\n              app: nginx\\n          spec:\\n            containers:\\n              - name: nginx\\n                image: nginx\\n                ports:\\n                  - containerPort: 80\\n\\n  - path: /etc/kubernetes/examples/pod-nginx-with-label.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Pod\\n      metadata:\\n        name: nginx\\n        labels:\\n          app: nginx\\n      spec:\\n        containers:\\n        - name: nginx\\n          image: nginx\\n          ports:\\n          - containerPort: 80\\n\\n  - path: /etc/kubernetes/examples/service.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Service\\n      metadata:\\n        name: nginx-service\\n      spec:\\n        ports:\\n        - port: 8000 # the port that this service should serve on\\n          # the container on each pod to connect to, can be a name\\n          # (e.g. \\'www\\') or a number (e.g. 80)\\n          targetPort: 80\\n          protocol: TCP\\n        # just like the selector in the replication controller,\\n        # but this time it identifies the set of pods to load balance\\n        # traffic to.\\n        selector:\\n          app: nginx\\n\\n  - path: /etc/kubernetes/examples/README.md\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      Kubernetes 101 (http://kubernetes.io/v1.0/docs/user-guide/walkthrough/README.html)\\n      ==================================================================================\\n\\n      List all nodes:\\n\\n          kubectl get nodes\\n\\n      Replication Controllers:\\n\\n          kubectl create -f /etc/kubernetes/examples/replication-controller.yaml\\n          kubectl get rc\\n          kubectl delete rc nginx-controller\\n\\n      Pods:\\n\\n          kubectl create -f /etc/kubernetes/examples/pod-nginx-with-label.yaml\\n          kubectl get pods\\n          curl http://$(kubectl get pod nginx -o=template -t={{.status.podIP}})\\n\\n      Services:\\n\\n          kubectl create -f /etc/kubernetes/examples/service.yaml\\n          kubectl get services\\n\\n          export SERVICE_IP=$(kubectl get service nginx-service -o=template -t={{.spec.clusterIP}})\\n          export SERVICE_PORT=$(kubectl get service nginx-service -o=template \\'-t={{(index .spec.ports 0).port}}\\')\\n          curl http://${SERVICE_IP}:${SERVICE_PORT}\\n\\n          kubectl delete service nginx-service\\n\\n      Troubleshooting:\\n\\n          kubectl get events\\n\\n          kubectl describe rc nginx-controller\\n\\n          kubectl describe pod nginx\\n\\n          kubectl describe service nginx-service\\n\\n          kubectl exec nginx env\\n\\n          kubectl exec -ti nginx -- bash\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n    if [ \"$ENABLE_CINDER\" == \"False\" ]; then\\n        # FIXME(yuanying): Use ephemeral disk for docker storage\\n        # Currently Ironic doesn\\'t support cinder volumes,\\n        # so we must use preserved ephemeral disk instead of a cinder volume.\\n        device_path=$(readlink -f /dev/disk/by-label/ephemeral0)\\n    else\\n        attempts=60\\n        while [ ${attempts} -gt 0 ]; do\\n            device_name=$(ls /dev/disk/by-id | grep ${DOCKER_VOLUME:0:20}$)\\n            if [ -n \"${device_name}\" ]; then\\n                break\\n            fi\\n            echo \"waiting for disk device\"\\n            sleep 0.5\\n            udevadm trigger\\n            let attempts--\\n        done\\n\\n        if [ -z \"${device_name}\" ]; then\\n            echo \"ERROR: disk device does not exist\" >&2\\n            exit 1\\n        fi\\n\\n        device_path=/dev/disk/by-id/${device_name}\\n    fi\\nfi\\n\\n# This file contains docker storage drivers configuration for fedora\\n# atomic hosts. Currently, devicemapper and overlay are supported.\\n\\n# Remove any existing docker-storage configuration. In case of an\\n# existing configuration, docker-storage-setup will fail.\\nclear_docker_storage_configuration () {\\n    if [ -f /etc/sysconfig/docker-storage ]; then\\n        sed -i \"/^DOCKER_STORAGE_OPTIONS=/ s/=.*/=/\" /etc/sysconfig/docker-storage\\n    fi\\n}\\n\\n# Configure docker storage with xfs as backing filesystem.\\nconfigure_overlay () {\\n    clear_docker_storage_configuration\\n\\n    rm -rf /var/lib/docker/*\\n\\n    if [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n        mkfs.xfs -f ${device_path}\\n        echo \"${device_path} /var/lib/docker xfs defaults 0 0\" >> /etc/fstab\\n        mount -a\\n    fi\\n\\n    echo \"STORAGE_DRIVER=overlay\" > /etc/sysconfig/docker-storage-setup\\n\\n    # SELinux must be enabled and in enforcing mode on the physical\\n    # machine, but must be disabled in the container when performing\\n    # container separation\\n    sed -i \"/^OPTIONS=/ s/--selinux-enabled/--selinux-enabled=false/\" /etc/sysconfig/docker\\n}\\n\\n# Configure docker storage with devicemapper using direct LVM\\nconfigure_devicemapper () {\\n    clear_docker_storage_configuration\\n\\n    if [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n        pvcreate -f ${device_path}\\n        vgcreate docker ${device_path}\\n\\n        echo \"VG=docker\" > /etc/sysconfig/docker-storage-setup\\n    fi\\n}\\n\\n\\nif [ \"$DOCKER_STORAGE_DRIVER\" = \"overlay\" ]; then\\n    if [ $(echo -e \"$(uname -r)\\\\n3.18\" | sort -V | head -1) = $(uname -r) ]; then\\n        ERROR_MESSAGE=\"OverlayFS requires at least Linux kernel 3.18. Cluster node kernel version: $(uname -r)\"\\n        echo \"ERROR: ${ERROR_MESSAGE}\" >&2\\n        sh -c \"${WAIT_CURL} --data-binary \\'{\\\\\"status\\\\\": \\\\\"FAILURE\\\\\", \\\\\"reason\\\\\": \\\\\"${ERROR_MESSAGE}\\\\\"}\\'\"\\n    else\\n        configure_overlay\\n    fi\\nelse\\n    configure_devicemapper\\nfi\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$REGISTRY_ENABLED\" = \"False\" ]; then\\n    exit 0\\nfi\\n\\ncat > /etc/sysconfig/registry-config.yml << EOF\\nversion: 0.1\\nlog:\\n  fields:\\n    service: registry\\nstorage:\\n  cache:\\n    layerinfo: inmemory\\n  swift:\\n    authurl: \"$AUTH_URL\"\\n    region: \"$SWIFT_REGION\"\\n    username: \"$TRUSTEE_USERNAME\"\\n    password: \"$TRUSTEE_PASSWORD\"\\n    domainid: \"$TRUSTEE_DOMAIN_ID\"\\n    trustid: \"$TRUST_ID\"\\n    container: \"$REGISTRY_CONTAINER\"\\n    insecureskipverify: $REGISTRY_INSECURE\\n    chunksize: $REGISTRY_CHUNKSIZE\\nhttp:\\n    addr: :5000\\nEOF\\n\\ncat > /etc/systemd/system/registry.service << EOF\\n[Unit]\\nDescription=Docker registry v2\\nRequires=docker.service\\nAfter=docker.service\\n\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nExecStart=/usr/bin/docker run -d -p $REGISTRY_PORT:5000 --restart=always --name registry -v /etc/sysconfig/registry-config.yml:/etc/docker/registry/config.yml registry:2\\nExecStop=/usr/bin/docker rm -f registry\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\necho \"configuring kubernetes (minion)\"\\n\\nif [ -z \"$KUBE_NODE_IP\" ]; then\\n    # FIXME(yuanying): Set KUBE_NODE_IP correctly\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nCERT_DIR=/srv/kubernetes\\nPROTOCOL=https\\nFLANNEL_OPTIONS=\"-etcd-cafile $CERT_DIR/ca.crt \\\\\\n-etcd-certfile $CERT_DIR/client.crt \\\\\\n-etcd-keyfile $CERT_DIR/client.key\"\\nETCD_CURL_OPTIONS=\"--cacert $CERT_DIR/ca.crt \\\\\\n--cert $CERT_DIR/client.crt --key $CERT_DIR/client.key\"\\nETCD_SERVER_IP=${ETCD_SERVER_IP:-$KUBE_MASTER_IP}\\nKUBE_PROTOCOL=\"https\"\\nKUBE_CONFIG=\"\"\\nFLANNELD_CONFIG=/etc/sysconfig/flanneld\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    PROTOCOL=http\\n    FLANNEL_OPTIONS=\"\"\\n    ETCD_CURL_OPTIONS=\"\"\\nfi\\n\\nsed -i \\'/FLANNEL_OPTIONS/\\'d $FLANNELD_CONFIG\\n\\ncat >> $FLANNELD_CONFIG <<EOF\\nFLANNEL_OPTIONS=\"$FLANNEL_OPTIONS\"\\nEOF\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    KUBE_PROTOCOL=\"http\"\\nelse\\n    KUBE_CONFIG=\"--kubeconfig=/srv/kubernetes/kubeconfig.yaml\"\\nfi\\nKUBE_MASTER_URI=\"$KUBE_PROTOCOL://$KUBE_MASTER_IP:$KUBE_API_PORT\"\\n\\nsed -i \\'\\n    /^KUBE_ALLOW_PRIV=/ s/=.*/=\"--allow-privileged=\\'\"$KUBE_ALLOW_PRIV\"\\'\"/\\n    /^KUBE_ETCD_SERVERS=/ s|=.*|=\"--etcd-servers=http://\\'\"$ETCD_SERVER_IP\"\\':2379\"|\\n    /^KUBE_MASTER=/ s|=.*|=\"--master=\\'\"$KUBE_MASTER_URI\"\\'\"|\\n\\' /etc/kubernetes/config\\n\\n# NOTE:  Kubernetes plugin for Openstack requires that the node name registered\\n# in the kube-apiserver be the same as the Nova name of the instance, so that\\n# the plugin can use the name to query for attributes such as IP, etc.\\n# The hostname of the node is set to be the Nova name of the instance, and\\n# the option --hostname-override for kubelet uses the hostname to register the node.\\n# Using any other name will break the load balancer and cinder volume features.\\nHOSTNAME=$(hostname --short | sed \\'s/\\\\.novalocal//\\')\\nKUBELET_ARGS=\"--config=/etc/kubernetes/manifests --cadvisor-port=4194 ${KUBE_CONFIG} --hostname-override=${HOSTNAME}\"\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    KUBELET_ARGS=\"${KUBELET_ARGS} --pod-infra-container-image=${INSECURE_REGISTRY_URL}/google_containers/pause\\\\:0.8.0\"\\n    echo \"INSECURE_REGISTRY=\\'--insecure-registry ${INSECURE_REGISTRY_URL}\\'\" >> /etc/sysconfig/docker\\nfi\\n\\nsed -i \\'\\n    /^KUBELET_ADDRESS=/ s/=.*/=\"--address=0.0.0.0\"/\\n    /^KUBELET_HOSTNAME=/ s/=.*/=\"\"/\\n    /^KUBELET_API_SERVER=/ s|=.*|=\"--api-servers=\\'\"$KUBE_MASTER_URI\"\\'\"|\\n    /^KUBELET_ARGS=/ s|=.*|=\"\\'\"${KUBELET_ARGS}\"\\'\"|\\n\\' /etc/kubernetes/kubelet\\n\\nsed -i \\'\\n    /^KUBE_PROXY_ARGS=/ s|=.*|=\\'\"$KUBE_CONFIG\"\\'|\\n\\' /etc/kubernetes/proxy\\n\\nif [ \"$NETWORK_DRIVER\" = \"flannel\" ]; then\\n    sed -i \\'\\n        /^FLANNEL_ETCD=/ s|=.*|=\"\\'\"$PROTOCOL\"\\'://\\'\"$ETCD_SERVER_IP\"\\':2379\"|\\n    \\' $FLANNELD_CONFIG\\n\\n    # Make sure etcd has a flannel configuration\\n    . $FLANNELD_CONFIG\\n    until curl -sf $ETCD_CURL_OPTIONS \\\\\\n        \"$FLANNEL_ETCD/v2/keys${FLANNEL_ETCD_KEY}/config?quorum=false&recursive=false&sorted=false\"\\n    do\\n        echo \"Waiting for flannel configuration in etcd...\"\\n        sleep 5\\n    done\\nfi\\n\\nif [ \"$VOLUME_DRIVER\" = \"cinder\" ]; then\\n    CLOUD_CONFIG=/etc/kubernetes/kube_openstack_config\\n    KUBERNETES=/etc/kubernetes\\n    if [ ! -d ${KUBERNETES} -o ! -f ${CLOUD_CONFIG} ]; then\\n        mkdir -p $KUBERNETES\\n    fi\\n    AUTH_URL=${AUTH_URL/v3/v2.0}\\ncat > $CLOUD_CONFIG <<EOF\\n[Global]\\nauth-url=$AUTH_URL\\nusername=$USERNAME\\npassword=$PASSWORD\\nregion=$REGION_NAME\\ntenant-name=$TENANT_NAME\\nEOF\\n\\ncat << _EOC_ >> /etc/kubernetes/kubelet\\n#KUBELET_ARGS=\"$KUBELET_ARGS --cloud-provider=openstack --cloud-config=/etc/kubernetes/kube_openstack_config\"\\n_EOC_\\n\\n    if [ ! -f /usr/bin/udevadm ]; then\\n        ln -s /sbin/udevadm /usr/bin/udevadm\\n    fi\\n\\nfi\\n\\ncat >> /etc/environment <<EOF\\nKUBERNETES_MASTER=$KUBE_MASTER_URI\\nEOF\\n\\nhostname `hostname | sed \\'s/.novalocal//\\'`\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$NETWORK_DRIVER\" != \"flannel\" ]; then\\n    exit 0\\nfi\\n\\nFLANNEL_DOCKER_BRIDGE_BIN=/usr/local/bin/flannel-docker-bridge\\nFLANNEL_DOCKER_BRIDGE_SERVICE=/etc/systemd/system/flannel-docker-bridge.service\\nDOCKER_FLANNEL_CONF=/etc/systemd/system/docker.service.d/flannel.conf\\nFLANNEL_DOCKER_BRIDGE_CONF=/etc/systemd/system/flanneld.service.d/flannel-docker-bridge.conf\\n\\nmkdir -p /etc/systemd/system/docker.service.d\\nmkdir -p /etc/systemd/system/flanneld.service.d\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_BIN <<EOF1\\n#!/bin/sh\\n\\nif ! [ \"\\\\$FLANNEL_SUBNET\" ] && [ \"\\\\$FLANNEL_MTU\" ] ; then\\n  echo \"ERROR: missing required environment variables.\" >&2\\n  exit 1\\nfi\\n\\nmkdir -p /run/flannel/\\ncat > /run/flannel/docker <<EOF2\\nDOCKER_NETWORK_OPTIONS=\"--bip=\\\\$FLANNEL_SUBNET --mtu=\\\\$FLANNEL_MTU\"\\nEOF2\\nEOF1\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_BIN\\nchmod 0755 $FLANNEL_DOCKER_BRIDGE_BIN\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_SERVICE <<EOF\\n[Unit]\\nAfter=flanneld.service\\nBefore=docker.service\\nRequires=flanneld.service\\n\\n[Service]\\nType=oneshot\\nEnvironmentFile=/run/flannel/subnet.env\\nExecStart=/usr/local/bin/flannel-docker-bridge\\n\\n[Install]\\nWantedBy=docker.service\\nEOF\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_SERVICE\\nchmod 0644 $FLANNEL_DOCKER_BRIDGE_SERVICE\\n\\ncat >> $DOCKER_FLANNEL_CONF <<EOF\\n[Unit]\\nRequires=flannel-docker-bridge.service\\nAfter=flannel-docker-bridge.service\\n\\n[Service]\\nEnvironmentFile=/run/flannel/docker\\nEOF\\n\\nchown root:root $DOCKER_FLANNEL_CONF\\nchmod 0644 $DOCKER_FLANNEL_CONF\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_CONF <<EOF\\n[Unit]\\nRequires=flannel-docker-bridge.service\\nBefore=flannel-docker-bridge.service\\n\\n[Install]\\nAlso=flannel-docker-bridge.service\\nEOF\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_CONF\\nchmod 0644 $FLANNEL_DOCKER_BRIDGE_CONF\\n\\necho \"activating service flanneld\"\\nsystemctl enable flanneld\\nsystemctl --no-block start flanneld\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nDOCKER_HTTP_PROXY_CONF=/etc/systemd/system/docker.service.d/http_proxy.conf\\n\\nDOCKER_HTTPS_PROXY_CONF=/etc/systemd/system/docker.service.d/https_proxy.conf\\n\\nDOCKER_NO_PROXY_CONF=/etc/systemd/system/docker.service.d/no_proxy.conf\\n\\nDOCKER_RESTART=0\\n\\nBASH_RC=/etc/bashrc\\n\\nmkdir -p /etc/systemd/system/docker.service.d\\n\\nif [ -n \"$HTTP_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_HTTP_PROXY_CONF\\n    [Service]\\n    Environment=HTTP_PROXY=$HTTP_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x http_proxy=$HTTP_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting http_proxy\"\\n    fi\\nfi\\n\\nif [ -n \"$HTTPS_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_HTTPS_PROXY_CONF\\n    [Service]\\n    Environment=HTTPS_PROXY=$HTTPS_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x https_proxy=$HTTPS_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting https_proxy\"\\n    fi\\nfi\\n\\nif [ -n \"$NO_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_NO_PROXY_CONF\\n    [Service]\\n    Environment=NO_PROXY=$NO_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x no_proxy=$NO_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting no_proxy\"\\n    fi\\nfi\\n\\nif [ \"$DOCKER_RESTART\" -eq 1 ]; then\\n    systemctl daemon-reload\\n    systemctl --no-block restart docker.service\\nfi\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n# docker is already enabled and possibly running on centos atomic host\\n# so we need to stop it first and delete the docker0 bridge (which will\\n# be re-created using the flannel-provided subnet).\\necho \"stopping docker\"\\nsystemctl stop docker\\nip link del docker0\\n\\n# make sure we pick up any modified unit files\\nsystemctl daemon-reload\\n\\nfor service in docker kubelet; do\\n    echo \"activating service $service\"\\n    systemctl enable $service\\n    systemctl --no-block start $service\\ndone\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    HYPERKUBE_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/hyperkube:${KUBE_VERSION}\"\\nelse\\n    HYPERKUBE_IMAGE=\"gcr.io/google_containers/hyperkube:${KUBE_VERSION}\"\\nfi\\n\\ninit_templates () {\\n    local KUBE_PROTOCOL=\"https\"\\n    local KUBE_CONFIG=\"/srv/kubernetes/kubeconfig.yaml\"\\n    if [ \"${TLS_DISABLED}\" = \"True\" ]; then\\n        KUBE_PROTOCOL=\"http\"\\n        KUBE_CONFIG=\\n    fi\\n\\n    local MASTER=\"${KUBE_PROTOCOL}://${KUBE_MASTER_IP}:${KUBE_API_PORT}\"\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-proxy.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-proxy\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-proxy\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - proxy\\n    - --master=${MASTER}\\n    - --kubeconfig=${KUBE_CONFIG}\\n    - --logtostderr=true\\n    - --v=0\\n    securityContext:\\n      privileged: true\\n    volumeMounts:\\n    - mountPath: /srv/kubernetes\\n      name: \"srv-kube\"\\n      readOnly: true\\n  volumes:\\n  - hostPath:\\n      path: \"/srv/kubernetes\"\\n    name: \"srv-kube\"\\nEOF\\n    }\\n}\\n\\ninit_templates\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$REGISTRY_ENABLED\" = \"False\" ]; then\\n    exit 0\\nfi\\n\\necho \"starting docker registry ...\"\\nsystemctl daemon-reload\\nsystemctl enable registry\\nsystemctl --no-block start registry\\n\\n--===============6880598734019725806==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/bash -v\\ncurl -i -X POST -H \\'X-Auth-Token: gAAAAABYgGB5noXDDSbj8Ng3eHpHgCbOYM7zEglsOggifCzCBOclCcm3-ONpMVYEZ-36cWKMBP_NY7NGfaXv8WPOLxuHLZERbSYxYtKzY0Vk9-pNRp7TR9HEWzdyWQ_yY01L0AVdtH2cSQtSmSnWgspUsypqsLWLqGxTzianfN40CrqISq2ZZiQ\\' -H \\'Content-Type: application/json\\' -H \\'Accept: application/json\\' http://10.164.180.85:8004/v1/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/stacks/k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr/01356360-a283-455d-b873-caffa7bc43c7/resources/minion_wait_handle/signal --data-binary \\'{\"status\": \"SUCCESS\"}\\'\\n\\n--===============6880598734019725806==--\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ebde9548-8cd4-4d5f-bc86-e63e23a0850d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ec7cdace-e0eb-4bfd-b863-98aaa8621bd2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "772fb4b5-2ce8-4ba5-a6d0-9e54276200f9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e79e690c-9e7b-491f-890a-ace39d54d8db": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "22b688d7-23b2-4b61-b3c8-f17683800965": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "a4953489-f404-4b5f-b76e-1009c6ac69fc": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": "allow_expired=1"
            }
        }, 
        "22f559d9-a7bf-4cd3-9b62-ddf0a6227a8c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7392b8e3-f255-4c08-b1ec-5bf6e3fe15b3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "68219103-725d-4ecc-b8c6-2189fde29816": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952df8bb50>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 54, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "838430f4-e3bb-4ef7-9678-6da52f0b0045": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "626158a4-3ce0-4aa1-af9e-9b6f9c380b40": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "07ee34bd-b4d9-401c-bbb2-b373e258f786": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7df6bdab-ec1a-4dd3-ba9a-5b295c5d22a9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "df715bc3-34df-4864-a8a7-00e2bfe3ed92": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dcfa750>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': 'd5c2d0a0-1c56-492e-b7af-b401ed49cb31'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "22a72425-6c3e-4e3c-9dad-55721d67d8f6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c6984af4-e756-442a-8d9f-0bdb5421cf8f": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b86de3f3-5d41-4c03-9d95-932065557d68": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "76ac7018-fb6f-4e52-a52e-7f8ebb3abb24": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.list_floatingips of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1ba6140d-88c0-403f-8f0e-66ddb9b61173": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "de9142b5-1608-4257-9e7c-ab3b35b0c5b7": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dcfa750>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': '7e33fa63-5f05-403a-9128-04c2ed6de1dd'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2936cf54-614e-47f4-8e04-6f39372a70da": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a13eb475-92ec-4313-b94a-aa83b6924bd2": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "9430b7d4-74cf-4053-a07d-dbeb21ef254a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f32996a5-1639-49bd-949a-7020416c9f9e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "927a82c5-5617-4890-9fe7-0b55d690f020": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e29ac10>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=None,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0ea74c3b-b47a-43c4-b669-2d2e5120d841": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4d375670-192b-4d1a-abdb-7fa61a11de0e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:02Z\", \"device_owner\": \"network:dhcp\", \"revision_number\": 7, \"port_security_enabled\": false, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.2\"}], \"id\": \"96e9f982-71d4-446c-b2cf-fa9de18783a8\", \"security_groups\": [], \"device_id\": \"dhcpaa770327-bd14-5133-b64a-23cefe630767-f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"name\": \"\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:ee:c8:ee\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:57Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d0132bf1-d44c-49a8-af17-42f8c01a0f4c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6a993391-b5aa-4aac-83d2-557e38a00cac": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a2012b59-02ef-42c0-9127-4c8ae3da6ead": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "afcf0a50-ee01-4afc-b17c-13f2e5542284": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1789c2e8-89dc-488f-9f29-03ef24ffd7c8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "21fbccc3-a1d7-4f8b-bf41-191376e5d197": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9641e77a-5295-426a-9773-f480af2bad96": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "beb3138b-cd1f-4467-ad9a-b4d310bea579": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6aeace61-702a-40b9-9f20-c863d5d33268": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "efed7260-c4ea-4438-baa5-7250140100d6": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "06488925-eb64-4d3e-b042-2a6cc01bf739": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ad53dc43-97ca-4964-9b3d-acae4c8a66fc": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e0386d0>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 1, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-etcd_address_lb_switch-662saapqlh4q', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 60}, u'environment_files': None, u'parent_resource_name': u'etcd_address_lb_switch', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 9, u'owner_id': u'bf103727-c468-4586-a97c-2c940f7e4d29'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b1b6b723-b24c-40ec-92ad-202f6952fba3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "05528346-ee4d-4df8-bf7a-8d32193c7b6f": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dfcba90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "03b8f542-5705-4e3f-9a7c-082a8cc17da2": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "aafa8bb6-b339-433a-9051-8a72b430e2e8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fcabf84d-8d78-4bab-9344-c3673506ac66": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "87eb719f-4b16-4f41-ad55-9afc2977bf66": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5fd341c6-e39d-4198-9dd5-43509d60e69e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "403909a2-5575-4f76-979c-a03f48db715b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9cc825c6-959b-4671-acf7-f029e3a155f7": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b548afeb-6e06-4833-884b-7e4887907909": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e50d1d0>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': BlockDeviceMapping(boot_index=None,connection_info='{\"driver_volume_type\": \"iscsi\", \"connector\": {\"platform\": \"x86_64\", \"host\": \"vinhnt-LAB\", \"do_local_attach\": false, \"ip\": \"10.164.180.85\", \"os_type\": \"linux2\", \"multipath\": false, \"initiator\": \"iqn.1993-08.org.debian:01:1cd767b1343d\"}, \"serial\": \"82c28688-a34b-4bc3-89c6-fdc04285570b\", \"data\": {\"access_mode\": \"rw\", \"target_discovered\": false, \"encrypted\": false, \"qos_specs\": null, \"target_iqn\": \"iqn.2010-10.org.openstack:volume-82c28688-a34b-4bc3-89c6-fdc04285570b\", \"target_portal\": \"10.164.180.85:3260\", \"volume_id\": \"82c28688-a34b-4bc3-89c6-fdc04285570b\", \"target_lun\": 1, \"device_path\": \"/dev/disk/by-path/ip-10.164.180.85:3260-iscsi-iqn.2010-10.org.openstack:volume-82c28688-a34b-4bc3-89c6-fdc04285570b-lun-1\", \"auth_password\": \"***\", \"auth_username\": \"THyZ8adaN383MNpA3jyq\", \"auth_method\": \"CHAP\"}}',created_at=2017-01-19T06:43:09Z,delete_on_termination=False,deleted=False,deleted_at=None,destination_type='volume',device_name='/dev/vdb',device_type=None,disk_bus=None,guest_format=None,id=3,image_id=None,instance=<?>,instance_uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,no_device=False,snapshot_id=None,source_type='volume',tag=None,updated_at=None,volume_id='82c28688-a34b-4bc3-89c6-fdc04285570b',volume_size=3), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9c9a3e0a-da45-4f91-aa58-94593f998c2a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8f593f35-8506-4129-b3bc-e884448d88ac": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd0c2d0>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "eb671147-07a2-4969-9cc6-de7c7e8c45ab": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e09e3199-6638-415d-9dd9-7ca350800680": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1ccb33da-8038-4c29-b7ea-c2333a743f41": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "f4081be6-d97e-4f6e-9093-a13c48336669": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "27265f10-f698-455e-a799-6dd6c00f1201": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f5b402c1-6f38-4d55-ae0b-2a4f56982b3d": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e5a16d0>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='networking',terminated_at=None,updated_at=2017-01-19T06:45:22Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'kwargs': {u'expected_task_state': [None]}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5439fec3-d227-4ea2-851b-4054bf94fe77": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0421c65d-9178-4819-b375-b4953469d89e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e4c2a173-a51d-4b55-a398-90935527ac3a": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952ddd80d0>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-api_address_lb_switch-giqcpj3ubkxa', u'stack_id': u'54f157d2-b705-4a81-8680-2eaec5fcbd06', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6f486209-dfb7-48d0-b284-a91d233d5893": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'PUT', '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': {'port': {'device_owner': 'compute:None', 'binding:host_id': u'vinhnt-LAB', 'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}}, 'headers': None, 'params': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a53cb830-74b2-48f9-b292-d66baab029ad": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fdacaf37-42b3-45ac-b7ce-6867b08c56b7": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dbc54d0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 35, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "05e42b2f-888e-4e0e-b89c-6f2cee8710e8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9db75a95-b41f-48e0-847a-dd00f9707ee6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c1e8a6a6-987c-45e0-8fea-410cfdea5cef": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "7c4fcc28-c3f1-4863-9d53-5b9762aadd6e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "931a01cd-f1ed-4431-82f3-c86c7d6a5fc5": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e6ef590>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': ComputeNode(cpu_allocation_ratio=16.0,cpu_info='{\"vendor\": \"Intel\", \"model\": \"Broadwell\", \"arch\": \"x86_64\", \"features\": [\"smap\", \"avx\", \"clflush\", \"sep\", \"rtm\", \"vme\", \"dtes64\", \"invpcid\", \"tsc\", \"fsgsbase\", \"xsave\", \"pge\", \"vmx\", \"erms\", \"xtpr\", \"cmov\", \"hle\", \"smep\", \"ssse3\", \"est\", \"pat\", \"monitor\", \"smx\", \"pbe\", \"lm\", \"msr\", \"adx\", \"3dnowprefetch\", \"nx\", \"fxsr\", \"syscall\", \"tm\", \"sse4.1\", \"pae\", \"sse4.2\", \"pclmuldq\", \"acpi\", \"fma\", \"tsc-deadline\", \"mmx\", \"osxsave\", \"cx8\", \"mce\", \"de\", \"tm2\", \"ht\", \"pse\", \"lahf_lm\", \"abm\", \"rdseed\", \"popcnt\", \"mca\", \"pdpe1gb\", \"apic\", \"sse\", \"f16c\", \"ds\", \"mpx\", \"invtsc\", \"pni\", \"rdtscp\", \"avx2\", \"aes\", \"sse2\", \"ss\", \"ds_cpl\", \"bmi1\", \"bmi2\", \"pcid\", \"fpu\", \"cx16\", \"pse36\", \"mtrr\", \"movbe\", \"pdcm\", \"rdrand\", \"x2apic\"], \"topology\": {\"cores\": 4, \"cells\": 1, \"threads\": 2, \"sockets\": 1}}',created_at=2017-01-19T04:24:03Z,current_workload=0,deleted=False,deleted_at=None,disk_allocation_ratio=1.0,disk_available_least=373,free_disk_gb=402,free_ram_mb=11267,host='vinhnt-LAB',host_ip=10.164.180.85,hypervisor_hostname='vinhnt-LAB',hypervisor_type='QEMU',hypervisor_version=2005000,id=1,local_gb=442,local_gb_used=40,memory_mb=15875,memory_mb_used=4608,metrics='[]',numa_topology='{\"nova_object.version\": \"1.2\", \"nova_object.changes\": [\"cells\"], \"nova_object.name\": \"NUMATopology\", \"nova_object.data\": {\"cells\": [{\"nova_object.version\": \"1.2\", \"nova_object.changes\": [\"cpu_usage\", \"memory_usage\", \"cpuset\", \"pinned_cpus\", \"siblings\", \"memory\", \"mempages\", \"id\"], \"nova_object.name\": \"NUMACell\", \"nova_object.data\": {\"cpu_usage\": 0, \"memory_usage\": 0, \"cpuset\": [0, 1, 2, 3, 4, 5, 6, 7], \"pinned_cpus\": [], \"siblings\": [[1, 5], [2, 6], [3, 7], [0, 4]], \"memory\": 15875, \"mempages\": [{\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"reserved\", \"size_kb\", \"used\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 4064230, \"reserved\": 0, \"size_kb\": 4}, \"nova_object.namespace\": \"nova\"}, {\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"reserved\", \"size_kb\", \"used\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 0, \"reserved\": 0, \"size_kb\": 2048}, \"nova_object.namespace\": \"nova\"}, {\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"reserved\", \"size_kb\", \"used\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 0, \"reserved\": 0, \"size_kb\": 1048576}, \"nova_object.namespace\": \"nova\"}], \"id\": 0}, \"nova_object.namespace\": \"nova\"}]}, \"nova_object.namespace\": \"nova\"}',pci_device_pools=PciDevicePoolList,ram_allocation_ratio=1.5,running_vms=2,service_id=None,stats={io_workload='1',num_instances='2',num_os_type_None='2',num_proj_f789928a4f254f96965ff7f3dedd02be='2',num_task_None='2',num_vm_active='1',num_vm_building='1'},supported_hv_specs=[HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec],updated_at=2017-01-19T06:41:28Z,uuid=2a21119c-0f53-4ec4-b7b6-8390910f2abc,vcpus=8,vcpus_used=2), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e1eb8b46-3514-48fc-88ff-92f8f25f798c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:55Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5cecfa75-0cb9-4b12-93f6-7cdeb1f816cd\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"9f30a188-364e-4d5f-b1a1-d4385bf9f402\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a2021987-017e-4cde-92c0-4fdde9a6cc3f\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"udp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a3cb2896-fc2a-4d4c-829f-0ec2895e8f3c\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"e0dfc1a7-2dad-42a1-8c64-88c542eb0f03\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 4, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_minion-tj5ln4ifneos\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1f519542-37a4-4a0d-b376-0e8ddeff7649": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, u'{\"port\": {\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:cf:f0:f1\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:45:23Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.3\"}], \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"security_groups\": [\"a194cf94-7b7a-42dd-86a1-306e04d6c859\"], \"device_id\": \"5299fdb3-2219-46f9-8c52-86fce045e372\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_eth0-le73kun3tjst\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:cf:f0:f1\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:13Z\"}}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f140f0cb-0071-446f-a0b0-8ec4a1955f7c": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37f1ae0d0>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "169cb97c-3f9e-4d56-b19b-52aafc55f3ff": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b085921d-1615-495b-8aad-4b41532ed05e": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ddafd90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': '52102bb3-fbeb-48d9-9623-107531f6eca4'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b7d2ed9b-a4fc-48a6-9d4f-4b5483d23803": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e3a8415b-8c77-4dbd-8290-7a977b2044a0": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e6e5e10>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'InstancePCIRequests': u'1.1', u'InstancePCIRequest': u'1.1'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'], u'objname': u'InstancePCIRequests', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "85427198-bb3b-43bf-9ac4-dd71b6f83647": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "00b4e58a-f881-4fc5-9079-87900d7b45fa": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e5a1450>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='block_device_mapping',terminated_at=None,updated_at=2017-01-19T06:45:22Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "eb4de5e6-aae0-444b-a239-62b72b160608": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dbc2890>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "76e0e3df-9116-4773-8910-45245acea13e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e/action", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "9452d7c3-afd4-4db2-a98a-107bda36395d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "10b8b3ca-8131-4d0d-97b2-11fa3b5710a3": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dcb7fd0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'b1843646-8649-4a33-8ddc-1206b8359316'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "53f32243-de16-41e0-9b0e-967c52bdd5a5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6dc61433-0d70-495d-a6d0-3dde9c949f27": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b1c2678d-7cc7-4f24-b096-e3f8f4974e4b": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dfd9a10>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 1, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-api_address_lb_switch-giqcpj3ubkxa', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 60}, u'environment_files': None, u'parent_resource_name': u'api_address_lb_switch', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 10, u'owner_id': u'bf103727-c468-4586-a97c-2c940f7e4d29'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e824271d-6ef5-4113-b1da-346e8e75c763": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd1ac10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 49, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5cb2098d-3903-4f8a-a286-98be0d701496": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'subnets', '/subnets', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9ab0cd33-94f3-4e4a-b543-cc56b7dc62f6": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dca2f10>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': u'e26ac53a-442d-4077-b980-74afdd7ee184'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0b2ed2a1-f454-4881-ad3c-45784c9e24d9": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952df86fd0>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-network-bsueqzfm4pjs-network_switch-xr4m27i25t6a', u'stack_id': u'0859dae6-83db-4c7c-9a6f-342fe311c9ce', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a5ffef83-fdad-49f9-b1db-ecdf22b0e1dd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_subnets", 
                "kwargs": "{'id': [u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6f2f03ca-ccfd-4bc6-81f4-778a50fae781": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "98dde7e3-aab3-458b-90db-a6c192d01b71": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "921d4697-140f-468c-8181-c133e27b57b5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3a0e80a4-0d58-47e3-b9e8-4004ed9174fe": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "eed13895-94a2-49a0-8ed8-e7d7e7ee3d86": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952d8a4750>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_system_namespace_service-hy6conqo3ucz', u'outputs': [], u'config': u'#!/bin/sh\\n\\n# this service required because docker will start only after cloud init was finished\\n# due service dependencies at Fedora Atomic (docker <- docker-storage-setup <- cloud-final)\\n\\n. /etc/sysconfig/heat-params\\n\\nKUBE_SYSTEM_JSON=/srv/kubernetes/kube-system-namespace.json\\n[ -f ${KUBE_SYSTEM_JSON} ] || {\\n    echo \"Writing File: $KUBE_SYSTEM_JSON\"\\n    mkdir -p $(dirname ${KUBE_SYSTEM_JSON})\\n    cat << EOF > ${KUBE_SYSTEM_JSON}\\n{\\n  \"apiVersion\": \"v1\",\\n  \"kind\": \"Namespace\",\\n  \"metadata\": {\\n    \"name\": \"kube-system\"\\n  }\\n}\\nEOF\\n}\\n\\nKUBE_SYSTEM_BIN=/usr/local/bin/kube-system-namespace\\n[ -f ${KUBE_SYSTEM_BIN} ] || {\\n    echo \"Writing File: $KUBE_SYSTEM_BIN\"\\n    mkdir -p $(dirname ${KUBE_SYSTEM_BIN})\\n    cat << EOF > ${KUBE_SYSTEM_BIN}\\n#!/bin/sh\\nuntil curl -sf \"http://127.0.0.1:8080/healthz\"\\ndo\\n    echo \"Waiting for Kubernetes API...\"\\n    sleep 5\\ndone\\n\\n#check for existence of namespace\\n/usr/bin/kubectl get namespace kube-system\\n\\nif [ \"\\\\$?\" != \"0\" ]; then\\n    /usr/bin/kubectl create -f /srv/kubernetes/kube-system-namespace.json\\nfi\\nEOF\\n}\\n\\nKUBE_SYSTEM_SERVICE=/etc/systemd/system/kube-system-namespace.service\\n[ -f ${KUBE_SYSTEM_SERVICE} ] || {\\n    echo \"Writing File: $KUBE_SYSTEM_SERVICE\"\\n    mkdir -p $(dirname ${KUBE_SYSTEM_SERVICE})\\n    cat << EOF > ${KUBE_SYSTEM_SERVICE}\\n[Unit]\\nAfter=kubelet.service\\nRequires=kubelet.service\\n\\n[Service]\\nType=oneshot\\nEnvironment=HOME=/root\\nEnvironmentFile=-/etc/kubernetes/config\\nExecStart=${KUBE_SYSTEM_BIN}\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n}\\n\\nchown root:root ${KUBE_SYSTEM_BIN}\\nchmod 0755 ${KUBE_SYSTEM_BIN}\\n\\nchown root:root ${KUBE_SYSTEM_SERVICE}\\nchmod 0644 ${KUBE_SYSTEM_SERVICE}\\n\\nsystemctl enable kube-system-namespace\\nsystemctl start --no-block kube-system-namespace\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cc6c6f5f-b136-44b9-84d9-4d7f0ca2301a": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "0fffd65e-deb1-4073-9e3f-b78f031678a9": {
            "function": {
                "args": "(<nova.virt.libvirt.vif.LibvirtGenericVIFDriver object at 0x7f67efb80e90>, VIFBridge(active=False,address=fa:16:3e:cf:f0:f1,bridge_name='qbrfcff5957-17',has_traffic_filtering=True,id=fcff5957-172c-4937-8341-670d27155ef6,network=Network(f55f8258-835a-4732-ba02-0b3c78b6c1c1),plugin='ovs',port_profile=VIFPortProfileBase,preserve_on_delete=True,vif_name='tapfcff5957-17'))", 
                "name": "nova.virt.libvirt.vif.LibvirtGenericVIFDriver.get_firewall_required_os_vif", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3e80eafd-0e6f-4a12-92ff-f827584dc639": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b6204ba0-8575-425b-ac8c-19e0ce942a92": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'tenant_id': u'f789928a4f254f96965ff7f3dedd02be', 'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "55d2f14d-d285-48b4-ae6d-91841a8a1a8b": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "e5d97829-623b-4a5b-a79e-1f8178ef1686": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "eb4d0c73-f4d1-409b-b9b3-3bfce02563d7": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dceebd0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'891410d0-9265-4f12-b96b-8dd6c3028ed6'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4bde66ec-9deb-42ff-adb6-601ccd8d5aba": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4473ab81-38ed-401c-8e00-dc83a8aa2caf": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e7a3550>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': BlockDeviceMapping(boot_index=0,connection_info=None,created_at=2017-01-19T06:42:21Z,delete_on_termination=True,deleted=False,deleted_at=None,destination_type='local',device_name='/dev/vda',device_type='disk',disk_bus=None,guest_format=None,id=2,image_id='63388f50-4450-4c85-8f3c-197af8f6f6cf',instance=<?>,instance_uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,no_device=False,snapshot_id=None,source_type='image',tag=None,updated_at=None,volume_id=None,volume_size=None), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "26aedd39-8365-4d1d-9829-5f5c50de5ebe": {
            "function": {
                "args": "(<cinder.context.RequestContext object at 0x7f95c1c65e90>, Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:45:13Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-docker_volume-mepwnfw7kzo7',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=1ad44791-704f-415a-a915-fb4ba2c7c87e,launched_at=2017-01-19T06:45:15Z,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth=None,provider_geometry=None,provider_id=None,provider_location=None,replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:45:14Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='attaching',terminated_at=None,updated_at=2017-01-19T06:45:31Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), {u'initiator': u'iqn.1993-08.org.debian:01:1cd767b1343d', u'ip': u'10.164.180.85', u'platform': u'x86_64', u'host': u'vinhnt-LAB', u'do_local_attach': False, u'os_type': u'linux2', u'multipath': False})", 
                "name": "cinder.volume.drivers.lvm.LVMVolumeDriver.create_export", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8b5ea0be-770e-44eb-b4dc-f7bacc1fb641": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ca6e9465-5bac-4c9e-a3f4-3a9eaf881b34": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc46550>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 2, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 3600}, u'environment_files': None, u'parent_resource_name': u'0', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 7, u'owner_id': u'730af533-fa60-4f08-8f2b-03a1ec7f80e2'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "30037f35-3e2a-47d5-a91c-4df47ff72565": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2a3da914-37a2-4f42-9029-41e5344e0b23": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "35a29e37-c9f9-4cf2-9ccc-07095c72fb97": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'network_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', 'device_owner': 'network:dhcp'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9302a573-2372-4bf1-abbe-d737caded23b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4a5e0a1a-4ec6-4698-9e73-be8cd8704337": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1f624739-c2d9-4c66-8bf7-39254115c794": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'network_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', 'device_owner': 'network:dhcp'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b67637ea-b05d-4c09-ab1e-9006e2ee8445": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, u'{\"port\": {\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "720891d4-4d64-4a8b-870e-221b02a5cea0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5b053558-ee1a-437c-9ff8-4c0125a39227": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b3387ed2-1bea-4096-a7e2-647f9446e403": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5a764cbd-b839-45b7-8256-7265699e10bc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7d052998-0b2b-47b8-95e0-95e8043e13f6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1fdf888f-a2c4-4427-a22a-a9b5a0ffa13c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'network_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', 'device_owner': 'network:dhcp'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d2478f9a-270e-4dc8-9864-77546a77728a": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "c90e6230-d3ec-42f5-a651-8ee9b512f4cd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6e794b3d-9755-4973-9b39-42f370024c01": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2b1b30d5-a424-4bfa-963d-57ebdaf4569b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c7476a86-a546-44d6-8c51-62d1fe198a8a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a86b37a0-a236-48dc-a29a-1996ce20707e": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd6d710>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 78, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "58cb03c0-839b-4334-834d-1122bf2533c2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "46997785-c478-4871-9e64-5a20e4c334f5": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ded6dd0>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7661a20d-9161-452d-b837-8189f9478252": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4374e6b3-02e4-4933-a0cb-f2174ff4af0f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2be58ea6-c113-42fa-9051-11a349f5fac3": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dce3390>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': '8bc2b9d4-be90-4060-a5a2-7ebed447d826'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1c2a784b-b23e-4e63-9d57-59f62aef1d94": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bfdb2462-f341-4063-9d34-2bfd4d44f072": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4784b83b-4a7c-4154-a51a-2aadfcd81b46": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1f67bfe7-a568-441c-bdb7-5ab72e53acf3": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e549210>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': ComputeNode(cpu_allocation_ratio=16.0,cpu_info='{\"vendor\": \"Intel\", \"model\": \"Broadwell\", \"arch\": \"x86_64\", \"features\": [\"smap\", \"avx\", \"clflush\", \"sep\", \"rtm\", \"vme\", \"dtes64\", \"invpcid\", \"tsc\", \"fsgsbase\", \"xsave\", \"pge\", \"vmx\", \"erms\", \"xtpr\", \"cmov\", \"hle\", \"smep\", \"ssse3\", \"est\", \"pat\", \"monitor\", \"smx\", \"pbe\", \"lm\", \"msr\", \"adx\", \"3dnowprefetch\", \"nx\", \"fxsr\", \"syscall\", \"tm\", \"sse4.1\", \"pae\", \"sse4.2\", \"pclmuldq\", \"acpi\", \"fma\", \"tsc-deadline\", \"mmx\", \"osxsave\", \"cx8\", \"mce\", \"de\", \"tm2\", \"ht\", \"pse\", \"lahf_lm\", \"abm\", \"rdseed\", \"popcnt\", \"mca\", \"pdpe1gb\", \"apic\", \"sse\", \"f16c\", \"ds\", \"mpx\", \"invtsc\", \"pni\", \"rdtscp\", \"avx2\", \"aes\", \"sse2\", \"ss\", \"ds_cpl\", \"bmi1\", \"bmi2\", \"pcid\", \"fpu\", \"cx16\", \"pse36\", \"mtrr\", \"movbe\", \"pdcm\", \"rdrand\", \"x2apic\"], \"topology\": {\"cores\": 4, \"cells\": 1, \"threads\": 2, \"sockets\": 1}}',created_at=2017-01-19T04:24:03Z,current_workload=1,deleted=False,deleted_at=None,disk_allocation_ratio=1.0,disk_available_least=351,free_disk_gb=382,free_ram_mb=9219,host='vinhnt-LAB',host_ip=10.164.180.85,hypervisor_hostname='vinhnt-LAB',hypervisor_type='QEMU',hypervisor_version=2005000,id=1,local_gb=442,local_gb_used=60,memory_mb=15875,memory_mb_used=6656,metrics='[]',numa_topology='{\"nova_object.version\": \"1.2\", \"nova_object.changes\": [\"cells\"], \"nova_object.name\": \"NUMATopology\", \"nova_object.data\": {\"cells\": [{\"nova_object.version\": \"1.2\", \"nova_object.changes\": [\"cpu_usage\", \"memory_usage\", \"cpuset\", \"pinned_cpus\", \"siblings\", \"memory\", \"mempages\", \"id\"], \"nova_object.name\": \"NUMACell\", \"nova_object.data\": {\"cpu_usage\": 0, \"memory_usage\": 0, \"cpuset\": [0, 1, 2, 3, 4, 5, 6, 7], \"pinned_cpus\": [], \"siblings\": [[1, 5], [2, 6], [3, 7], [0, 4]], \"memory\": 15875, \"mempages\": [{\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"used\", \"reserved\", \"size_kb\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 4064230, \"reserved\": 0, \"size_kb\": 4}, \"nova_object.namespace\": \"nova\"}, {\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"used\", \"reserved\", \"size_kb\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 0, \"reserved\": 0, \"size_kb\": 2048}, \"nova_object.namespace\": \"nova\"}, {\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"used\", \"reserved\", \"size_kb\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 0, \"reserved\": 0, \"size_kb\": 1048576}, \"nova_object.namespace\": \"nova\"}], \"id\": 0}, \"nova_object.namespace\": \"nova\"}]}, \"nova_object.namespace\": \"nova\"}',pci_device_pools=PciDevicePoolList,ram_allocation_ratio=1.5,running_vms=3,service_id=None,stats={io_workload='1',num_instances='3',num_os_type_None='3',num_proj_f789928a4f254f96965ff7f3dedd02be='3',num_task_None='2',num_task_networking='1',num_vm_active='2',num_vm_building='1'},supported_hv_specs=[HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec],updated_at=2017-01-19T06:45:22Z,uuid=2a21119c-0f53-4ec4-b7b6-8390910f2abc,vcpus=8,vcpus_used=3), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "64688b52-199e-4fee-bcba-50b22bb2658a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1bc9c3a3-4582-471d-a8c3-b440474cc400": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "871e5f19-fba2-41d4-b79a-7439a3be59c4": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "766f3349-ed58-4de1-974c-c1e554fad8e8": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "869287e7-287b-442c-b13b-93bda323cfbd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "890d828f-1b36-44f0-8b95-ddc1e1046596": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors/m1.small", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "dc68348c-77cd-40dd-b480-4998d6623845": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd6ffd0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'e0853d87-ac10-462f-94d6-d8eddeac93bb'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5eb6e92a-031b-49f3-878e-12340af62da0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>, 'GET', '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2875fb3f-89b9-4f84-bf26-2dad75fb7118": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2ec2facc-d705-4cc9-b745-a2c13d89a2e5": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952de46550>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 2, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-network-bsueqzfm4pjs-network_switch-xr4m27i25t6a', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 60}, u'environment_files': None, u'parent_resource_name': u'network_switch', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 3, u'owner_id': u'4f715e6a-6c85-4397-adb1-c21fee6efcbb'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d8916ffd-d7bd-467d-a2d5-d880591a0fdf": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "23726eb9-6116-48cb-84ed-7ba9c1964564": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9173560c-2bf5-40a3-bdbb-c45d9416b73f": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": "allow_expired=1"
            }
        }, 
        "5a1df924-4445-4361-8f37-ced0861822ec": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "51bf565f-bbb8-4c2c-8ae3-971a918d59cd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "82f1fcb8-f2b1-4f90-b610-7706718d5c1c": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "177f9b24-dd84-435b-9ec3-80921c9e4470": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff38110a090>, <nova.context.RequestContext object at 0x7ff37f1ff210>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9bbc0809-dbb8-4f73-99db-85a9a7839ee3": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dcb7d10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 62, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2767da8b-877d-4fc3-bf49-fef4e1ec5153": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "455ff3ed-bfa6-4d52-a03f-207a23f41251": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ddf2dd0>, u'CREATE', 'COMPLETE', u'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ef2e5f14-3393-43e5-9bc8-f01ad6905979": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5f764c7c-1f60-4f73-9bfb-759a0b69abd7": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e10aad0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': u'b3233653-5afe-4df0-89f3-dcddb500d499'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a8aa9ebf-7ae1-4125-8b0b-999a3987bc02": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37ea54e90>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "05335ff3-a6e8-44b1-a0e7-e395f7b27604": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors/m1.small", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "f9f5089f-f3ad-4020-a061-d26ad5a19bf9": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37f355c10>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "33ac49f9-a038-4cea-a8ef-818090c2ac1e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "c22f3793-8b65-4a5f-b21c-ea9ca3b060b5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "aee56743-1204-4508-89c5-f48d08ed91ab": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, u'{\"floatingips\": [{\"router_id\": \"4c1e30bd-7120-44a4-a38a-6db4aa6d0145\", \"status\": \"ACTIVE\", \"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:14Z\", \"updated_at\": \"2017-01-19T06:42:14Z\", \"floating_network_id\": \"3857d3f1-659e-468b-8a08-0b8c3ca10be4\", \"fixed_ip_address\": \"10.0.0.9\", \"floating_ip_address\": \"172.24.4.11\", \"revision_number\": 1, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"id\": \"43fda14d-5b83-4e0f-80a7-6bacfa2f6f63\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "aa0ede88-9660-49a4-ad52-f7553b252d4d": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "e6bbf769-77e3-43c2-8f5a-917a6a75b889": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "54700b3b-ff30-4590-b833-acb7c03337ad": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>, '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9e1bb85a-b1ec-414f-b025-5c125bf5bb48": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "f8379986-7b37-48f3-a465-3db17b2c96a3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cfee78d8-b37a-4a77-9120-8e643d74abfd": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952db81d10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 73, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e6d0bf99-8442-494a-8b33-f9789a6e6def": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8d3ac723-949b-48e2-b166-b7d9247af3eb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cb5dd3c4-d8dd-4ed1-9b46-3f60b577ece1": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "023c7c21-856a-43aa-b48b-09df9df1c452": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "93dbf55e-0cc0-4bfb-9d7b-b3ef0a13e2e5": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b821257b-984d-457b-9eb5-f3d3e529fc32": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37ef91c50>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a3646b46-9d87-40d0-98d7-150ff59ed62f": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "462a41a8-1cd6-411b-81b6-cb097026e227": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e1cfd90>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 58, u'data': {u'input_data': {u'tuple:(65, True)': {u'status': u'COMPLETE', u'name': u'docker_volume', u'uuid': u'6df565df-f669-4611-a108-c2f1cb4e48ba', u'attrs': {}, u'action': u'CREATE', u'id': 65, u'reference_id': u'1ad44791-704f-415a-a915-fb4ba2c7c87e'}, u'tuple:(59, True)': {u'status': u'COMPLETE', u'name': u'kube-minion', u'reference_id': u'5299fdb3-2219-46f9-8c52-86fce045e372', u'attrs': {}, u'action': u'CREATE', u'id': 59, u'uuid': u'9489896b-c33a-4ff5-a7f1-d1e1449ee9be'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "290fc612-6504-42e0-8919-58a910769058": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952ddde9d0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 20, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'b3233653-5afe-4df0-89f3-dcddb500d499'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6b278bed-dcde-4b43-9f15-3da380287251": {
            "function": {
                "args": "(Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:42:12Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-docker_volume-4xhyfkrl657w',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=82c28688-a34b-4bc3-89c6-fdc04285570b,launched_at=2017-01-19T06:42:14Z,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth='CHAP THyZ8adaN383MNpA3jyq Be5ecquV7uysXZNr',provider_geometry=None,provider_id=None,provider_location='10.164.180.85:3260,1 iqn.2010-10.org.openstack:volume-82c28688-a34b-4bc3-89c6-fdc04285570b 1',replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:42:13Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='attaching',terminated_at=None,updated_at=2017-01-19T06:43:10Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), {u'initiator': u'iqn.1993-08.org.debian:01:1cd767b1343d', u'ip': u'10.164.180.85', u'platform': u'x86_64', u'host': u'vinhnt-LAB', u'do_local_attach': False, u'os_type': u'linux2', u'multipath': False})", 
                "name": "cinder.volume.drivers.lvm.LVMVolumeDriver.initialize_connection", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "98bfeb64-5cbd-4fec-a077-4152bed01821": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dc09510>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 55, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c0fe77c4-b1c5-44e9-9c15-3267f6b59547": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "21ea4067-8b3d-4dd6-b6b9-4f4ae8bf206e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "321fa7ac-4943-4304-9c9f-93337f402a75": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952df1a110>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 48, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "89c1919e-20b2-48d9-a81e-9f675f4b6bc8": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f953174f810>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ec4244bc-91be-49d2-be16-000b6ad83287": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e016dd0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 24, u'data': {u'input_data': {u'tuple:(25, True)': {u'status': u'COMPLETE', u'name': u'loadbalancer', u'reference_id': u'c8ad12bd-ad89-4b09-83fc-4c05fcaf56f7', u'attrs': {u'vip_port_id': None, u'vip_address': None}, u'action': u'CREATE', u'id': 25, u'uuid': u'1c8c3ce1-9d30-42fe-97e0-7b866cfbe863'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'242ae84c-5677-4bf7-a2a2-5c1f8aa2dc1e'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6ab1309c-ed26-4ab4-833b-c7d25e8ed4c5": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e50d290>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'create', u'args': [], u'objinst': BlockDeviceMapping(boot_index=None,connection_info=<?>,created_at=<?>,delete_on_termination=<?>,deleted=<?>,deleted_at=<?>,destination_type='volume',device_name='/dev/vdb',device_type=None,disk_bus=None,guest_format=None,id=<?>,image_id=<?>,instance=<?>,instance_uuid=5299fdb3-2219-46f9-8c52-86fce045e372,no_device=<?>,snapshot_id=<?>,source_type='volume',tag=<?>,updated_at=<?>,volume_id='1ad44791-704f-415a-a915-fb4ba2c7c87e',volume_size=<?>), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0a0bcba2-d847-48a8-9d07-04d033484cfe": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_floatingips", 
                "kwargs": "{'fixed_ip_address': u'10.0.0.3', 'port_id': u'fcff5957-172c-4937-8341-670d27155ef6'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e09fd8ca-a9a5-4231-8574-8c218a87c032": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc16150>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'd6b8449a-4b16-46d7-b107-b03c6522c5dd'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c070d543-4d95-4ca2-8da0-bb57f6f3197d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c64726e5-df94-4f79-901d-cb42c4b40914": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "68eecee0-b2d9-4768-84bc-787cd6f976c6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a6d26c25-7330-49bd-ae68-581ef70ba33e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8adb574e-5d78-4bbe-8609-bbcc314fc4ce": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6ef47378-c660-463a-8eb0-d0396a1dd3e3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2bdc2b93-d019-43ca-ad3b-bb85100a0779": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f3382371-78ff-42ce-bf7f-bc37f3ccaee7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "17482322-3796-4cf2-aa8b-1a8b684afb61": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_networks", 
                "kwargs": "{'id': [u'f55f8258-835a-4732-ba02-0b3c78b6c1c1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9b8b3603-04e1-4999-9987-fe00ae859550": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f95326c38d0>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-etcd_lb-kbhpmtcuvob2', u'stack_id': u'a1cc2b35-433b-4395-af9a-299915cb643d', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f16dfa8d-9a60-4d4d-a048-1f5380b4136e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8373786e-a547-44ae-b426-b6f18611c436": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "279aed0a-3870-4d9a-b4a6-83392d7a2688": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dbc2890>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0888ce83-6a7a-4da0-ab7f-6c206b17b833": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b12f1a2b-95b9-4cf0-ba0c-d678b8252541": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "490bf5eb-9c0f-4356-b606-e3f44b871ee3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9b15e9d9-4411-4ea2-85a0-1f7fc1fd1d55": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4ef84390>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'refresh', u'args': [], u'objinst': InstanceInfoCache(created_at=2017-01-19T06:42:20Z,deleted=False,deleted_at=None,instance_uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,network_info=NetworkModel(),updated_at=None), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "615cb0d4-5873-4799-a1b0-c10e48a01ddf": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952df8ea10>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 1, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 3600}, u'environment_files': None, u'parent_resource_name': u'kube_minions', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 12, u'owner_id': u'bf103727-c468-4586-a97c-2c940f7e4d29'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f390510d-a604-45ac-8a3a-6ef445f2436e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "36ee0bfc-3bb1-48fa-bd1b-954c055b1529": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc6acd0>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-enable_kube_proxy-6dmlpcwn3yc7', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    HYPERKUBE_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/hyperkube:${KUBE_VERSION}\"\\nelse\\n    HYPERKUBE_IMAGE=\"gcr.io/google_containers/hyperkube:${KUBE_VERSION}\"\\nfi\\n\\ninit_templates () {\\n    local KUBE_PROTOCOL=\"https\"\\n    local KUBE_CONFIG=\"/srv/kubernetes/kubeconfig.yaml\"\\n    if [ \"${TLS_DISABLED}\" = \"True\" ]; then\\n        KUBE_PROTOCOL=\"http\"\\n        KUBE_CONFIG=\\n    fi\\n\\n    local MASTER=\"${KUBE_PROTOCOL}://${KUBE_MASTER_IP}:${KUBE_API_PORT}\"\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-proxy.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-proxy\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-proxy\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - proxy\\n    - --master=${MASTER}\\n    - --kubeconfig=${KUBE_CONFIG}\\n    - --logtostderr=true\\n    - --v=0\\n    securityContext:\\n      privileged: true\\n    volumeMounts:\\n    - mountPath: /srv/kubernetes\\n      name: \"srv-kube\"\\n      readOnly: true\\n  volumes:\\n  - hostPath:\\n      path: \"/srv/kubernetes\"\\n    name: \"srv-kube\"\\nEOF\\n    }\\n}\\n\\ninit_templates\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4a34fd41-5902-4343-b680-63663211a957": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "70342f4e-de9b-40cc-946f-1db463198de5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'GET', '/subnets')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5101e2e6-c579-4100-a2f9-223cf0425a69": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'network_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', 'device_owner': 'network:dhcp'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7da19f68-2194-4db8-9ef7-ce18b3e7a8d2": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors/m1.small", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "0b6463de-102f-4450-add1-d17daf90bcae": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd38fd0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 42, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9b9d37df-976a-471e-a477-930635136b82": {
            "function": {
                "args": "(<nova.conductor.manager.ComputeTaskManager object at 0x7faa4f20ea10>, <nova.context.RequestContext object at 0x7faa4e79bf90>)", 
                "name": "nova.conductor.manager.ComputeTaskManager.build_instances", 
                "kwargs": "{u'requested_networks': NetworkRequestList(objects=[NetworkRequest]), u'image': {u'status': u'active', u'deleted': False, u'container_format': u'bare', u'min_ram': 0, u'updated_at': u'2017-01-19T04:28:13.000000', u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', u'min_disk': 0, u'is_public': True, u'deleted_at': None, u'properties': {u'os_distro': u'fedora-atomic'}, u'size': 697925632, u'name': u'fedora-atomic-latest', u'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'created_at': u'2017-01-19T04:22:26.000000', u'disk_format': u'qcow2', u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf'}, u'filter_properties': {u'instance_type': Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), u'scheduler_hints': {}}, u'instances': [Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host=None,hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on=None,locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node=None,numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='scheduling',terminated_at=None,updated_at=None,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building')], u'admin_password': u'THgSMb6tDDNB', u'injected_files': [], u'security_groups': [u'default']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "808434ea-5e8b-4f91-8093-a157e41799e4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "391f123f-3107-4c16-b493-e4c408de1fe2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>, 'fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.show_port", 
                "kwargs": "{'fields': ['binding:vnic_type', 'network_id']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0334af98-e570-489f-8076-7c77979afd89": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952db2c350>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'b47f3205-2f15-4567-bad0-16fa3020845b'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "33b0d9dd-54be-4d83-a273-ed464280ff6b": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "d7d99cdf-f268-43a6-b56c-f72fc55cf311": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "24bd37b5-e95b-4560-9f09-90c3e4d159a6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.list_floatingips of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e02f24cb-a2da-4c88-8737-b08a2104ea07": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e2dfd777-7a41-4b55-ab6c-c79b189f4c59": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952ddd1910>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'15700b9b-15df-47ef-8ba1-98fb1ac4b8b1'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "803d21c5-5c70-43cb-85ec-e09e5790b0e5": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "0d84c66e-6cd7-4a4f-b638-797230dd06a9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f05fd7fa-4015-4445-a60c-44a948733096": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952de0a050>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 32, u'data': {u'input_data': {u'tuple:(44, True)': {u'status': u'COMPLETE', u'name': u'write_heat_params', u'reference_id': u'd6e5a374-62d7-4ea2-b030-6103d9eaa819', u'attrs': {}, u'action': u'CREATE', u'id': 44, u'uuid': u'2e2c19d2-e05d-4d45-a81e-bf30b0041909'}, u'tuple:(41, True)': {u'status': u'COMPLETE', u'name': u'write_network_config', u'uuid': u'3d3293d3-99fe-45fb-bfbc-7ef808b9cb7e', u'attrs': {}, u'action': u'CREATE', u'id': 41, u'reference_id': u'21f1511e-39b4-49f1-9102-29b76ccef381'}, u'tuple:(55, True)': {u'status': u'COMPLETE', u'name': u'write_kube_os_config', u'reference_id': u'799fdef4-457e-4bf5-b04f-7fa067bd7d0e', u'attrs': {}, u'action': u'CREATE', u'id': 55, u'uuid': u'4a54c090-55f9-4e95-8593-c500f7687b35'}, u'tuple:(36, True)': {u'status': u'COMPLETE', u'name': u'add_proxy', u'uuid': u'ee5c2461-f7ab-443c-ae8f-ad9d0f7bd853', u'attrs': {}, u'action': u'CREATE', u'id': 36, u'reference_id': u'2939693b-dcef-4ad4-b99e-faa98f2af00d'}, u'tuple:(35, True)': {u'status': u'COMPLETE', u'name': u'disable_selinux', u'reference_id': u'28f4ee14-a123-42ed-95b6-4c40458febd6', u'attrs': {}, u'action': u'CREATE', u'id': 35, u'uuid': u'7b69ed18-29a4-4747-b3ce-5805ecf36e40'}, u'tuple:(38, True)': {u'status': u'COMPLETE', u'name': u'configure_etcd', u'reference_id': u'88197835-6b68-444d-8d30-4f95c370869b', u'attrs': {}, u'action': u'CREATE', u'id': 38, u'uuid': u'6480419a-d8c8-44b8-8664-2c94443c5037'}, u'tuple:(39, True)': {u'status': u'COMPLETE', u'name': u'master_wc_notify', u'uuid': u'bfba44d8-c74e-4729-a63e-677fa99df89c', u'attrs': {}, u'action': u'CREATE', u'id': 39, u'reference_id': u'3311df97-ff3f-4639-8493-cbe99205c89b'}, u'tuple:(33, True)': {u'status': u'COMPLETE', u'name': u'network_config_service', u'uuid': u'f7da5ce3-ff03-47c8-a82d-86b6eab0fc1b', u'attrs': {}, u'action': u'CREATE', u'id': 33, u'reference_id': u'43707c0a-7eee-4360-b11b-31bafaec50d1'}, u'tuple:(48, True)': {u'status': u'COMPLETE', u'name': u'network_service', u'reference_id': u'30ccdb94-cc97-4a77-85e4-d41a961de761', u'attrs': {}, u'action': u'CREATE', u'id': 48, u'uuid': u'5e092226-45f5-466d-874d-64b4669a0de8'}, u'tuple:(37, True)': {u'status': u'COMPLETE', u'name': u'enable_kube_proxy', u'uuid': u'85ae9726-5a1d-45da-8f48-405a63fb931d', u'attrs': {}, u'action': u'CREATE', u'id': 37, u'reference_id': u'8e85ff36-0c04-435c-833f-e7168a3d2305'}, u'tuple:(47, True)': {u'status': u'COMPLETE', u'name': u'enable_kube_controller_manager_scheduler', u'reference_id': u'b2686110-591f-4165-aa8e-46931b6bbf5f', u'attrs': {}, u'action': u'CREATE', u'id': 47, u'uuid': u'52298baa-0e47-46b1-8d49-1085828e3821'}, u'tuple:(34, True)': {u'status': u'COMPLETE', u'name': u'make_cert', u'uuid': u'8de1db69-67a5-4d2e-a982-f950057223ec', u'attrs': {}, u'action': u'CREATE', u'id': 34, u'reference_id': u'26341deb-828a-40db-b24d-9b88ff38e500'}, u'tuple:(42, True)': {u'status': u'COMPLETE', u'name': u'kube_ui_service', u'reference_id': u'3f63a93a-6985-4cf0-b70d-71b9c296b7f3', u'attrs': {}, u'action': u'CREATE', u'id': 42, u'uuid': u'ba3de92e-470b-4f72-9c68-bb339a0b342e'}, u'tuple:(43, True)': {u'status': u'COMPLETE', u'name': u'kube_examples', u'uuid': u'8424e380-eddb-4ea7-b225-737896c5e6ce', u'attrs': {}, u'action': u'CREATE', u'id': 43, u'reference_id': u'7b2e3460-264c-46ce-ae32-d932a9b29601'}, u'tuple:(40, True)': {u'status': u'COMPLETE', u'name': u'enable_services', u'uuid': u'0b92da8a-3e36-46f2-a12f-c4eba6ab2a79', u'attrs': {}, u'action': u'CREATE', u'id': 40, u'reference_id': u'46134ba5-a53a-4fec-8d67-990823dfff62'}, u'tuple:(49, True)': {u'status': u'COMPLETE', u'name': u'configure_kubernetes', u'reference_id': u'52fb8cce-77b8-4a84-a316-e10a80942ce1', u'attrs': {}, u'action': u'CREATE', u'id': 49, u'uuid': u'aa4bb8a1-76cb-415c-ac30-1511f3056c64'}, u'tuple:(46, True)': {u'status': u'COMPLETE', u'name': u'configure_docker_storage', u'uuid': u'2760437c-9707-40b6-ab59-ebeb42f18d07', u'attrs': {}, u'action': u'CREATE', u'id': 46, u'reference_id': u'e0853d87-ac10-462f-94d6-d8eddeac93bb'}, u'tuple:(51, True)': {u'status': u'COMPLETE', u'name': u'kube_system_namespace_service', u'reference_id': u'891410d0-9265-4f12-b96b-8dd6c3028ed6', u'attrs': {}, u'action': u'CREATE', u'id': 51, u'uuid': u'60edd059-c273-43e3-9bb7-25112b243e49'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6d23d4c6-a1f5-4c64-abb3-1fdf609bb161": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952d821410>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c80f3407-5d68-4f8b-8294-70346699391a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6eaba317-37f0-496c-81d2-4f33e17ce698": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_extensions", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c9e84f25-974d-4372-a82d-38d14950f495": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e200c90>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'c61fee68-80d6-4910-ac0f-f67558491de4'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9d4507bb-b7c2-4bc3-8e86-71bf4e56197e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dd43b32f-c01c-4838-a84f-8e159ed16a74": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "dc14c580-ed4e-4085-a6a9-828739783536": {
            "function": {
                "args": "(<cinder.context.RequestContext object at 0x7f95d446a3d0>, Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:42:12Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-docker_volume-4xhyfkrl657w',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=82c28688-a34b-4bc3-89c6-fdc04285570b,launched_at=2017-01-19T06:42:14Z,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth=None,provider_geometry=None,provider_id=None,provider_location=None,replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:42:13Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='attaching',terminated_at=None,updated_at=2017-01-19T06:43:10Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), {u'initiator': u'iqn.1993-08.org.debian:01:1cd767b1343d', u'ip': u'10.164.180.85', u'platform': u'x86_64', u'host': u'vinhnt-LAB', u'do_local_attach': False, u'os_type': u'linux2', u'multipath': False})", 
                "name": "cinder.volume.drivers.lvm.LVMVolumeDriver.create_export", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "55221c1f-5bea-42a3-9404-09e815bf27bc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "882c702a-e372-41ac-9687-0e9473065e5f": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc72fd0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'46134ba5-a53a-4fec-8d67-990823dfff62'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c81c6fa7-c0ae-4a7e-85c4-6f418dc09abb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b04cc8ef-fd97-44ac-8838-5e3e290e7290": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "228c19be-e983-4e17-9ebc-7b03edd511e8": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f953174f810>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': '290cedd0-cf6d-43aa-be0f-ae73594b5219'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "067464e5-32a1-486a-81eb-e0a7757c56ae": {
            "function": {
                "args": "(<magnum.conductor.handlers.indirection_api.Handler object at 0x7f3386e13c50>, <magnum.common.context.RequestContext object at 0x7f3385770610>)", 
                "name": "magnum.conductor.handlers.indirection_api.Handler.object_class_action", 
                "kwargs": "{u'objver': u'1.17', u'objmethod': u'get_by_uuid', u'args': [u'020f1324-a3e1-45d6-9373-f4f353810eda'], u'objname': u'ClusterTemplate', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a3d08ad6-28ea-4b09-b855-a13d13e95d7f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4994613b-44f2-4166-8acb-81e98423dc1a": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/5299fdb3-2219-46f9-8c52-86fce045e372/os-interface", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "50ba0c7b-dcdf-42e1-9de0-163d0ce2414f": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "f7548bb3-2169-4a51-ae3a-6a4c5afb6e77": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "4c7da359-9cb7-46c7-a1be-2d403912a88f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "491c9da9-9674-4110-ade2-d1cb7649e650": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a3945bbd-5eb0-498a-804a-1d5263f369a6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "60f7b114-e7aa-45e7-859b-65e55c46cbdb": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e0818d0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c0e6ee88-e0fe-45d7-94ba-2433710970e3": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc6a090>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-write_network_config-l64z7y6tfe6t', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$NETWORK_DRIVER\" != \"flannel\" ]; then\\n    exit 0\\nfi\\n\\n. /etc/sysconfig/flanneld\\n\\nFLANNEL_JSON=/etc/sysconfig/flannel-network.json\\nFLANNELD_CONFIG=/etc/sysconfig/flanneld\\n\\nsed -i \\'\\n    /^FLANNEL_ETCD=/ s/=.*/=\"http:\\\\/\\\\/127.0.0.1:2379\"/\\n\\' /etc/sysconfig/flanneld\\n\\n# Generate a flannel configuration that we will\\n# store into etcd using curl.\\ncat > $FLANNEL_JSON <<EOF\\n{\\n  \"Network\": \"$FLANNEL_NETWORK_CIDR\",\\n  \"Subnetlen\": $FLANNEL_NETWORK_SUBNETLEN,\\n  \"Backend\": {\\n    \"Type\": \"$FLANNEL_BACKEND\"\\n  }\\n}\\nEOF\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ffc1b5ba-d097-4957-9eba-74f826e9bb6c": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dfcba90>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b206663e-6e84-4bfb-9fa3-8a158ad96a6e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e407d38b-4805-4dca-b481-13e93eddf1c8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "05786db8-b750-451c-b912-476aad9d76a4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7f05e3fc-d482-4db6-ab20-19aa311519dd": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "7ae19cd3-c39c-42df-a11e-ac6b66464aaf": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e640c10>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'InstanceActionEvent': u'1.1'}, u'objmethod': u'event_finish_with_failure', u'args': [u'5299fdb3-2219-46f9-8c52-86fce045e372', u'compute__do_build_and_run_instance'], u'objname': u'InstanceActionEvent', u'kwargs': {u'want_result': False, u'exc_val': None, u'exc_tb': None}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8477bc51-0163-43d0-a363-58c15cdd33a3": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e53b990>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDeviceList': u'1.3', u'PciDevice': u'1.5'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'], u'objname': u'PciDeviceList', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2d1c948a-0941-470b-91a5-1c966f911480": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0256ce22-1133-482c-8bb5-20ef4b3d12f4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0b6dec37-8778-49f2-9133-f6b1eae0d33d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f5454b51-b4cd-49dd-b099-281d54dd4890": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "330bb5c1-1016-4b60-8247-4042c26f407d": {
            "function": {
                "args": "(<nova.scheduler.rpcapi.SchedulerAPI object at 0x7faa4e8d9f50>, <nova.context.RequestContext object at 0x7faa4e2f5250>, RequestSpec(availability_zone=None,flavor=Flavor(7),force_hosts=None,force_nodes=None,id=<?>,ignore_hosts=None,image=ImageMeta(63388f50-4450-4c85-8f3c-197af8f6f6cf),instance_group=None,instance_uuid=5299fdb3-2219-46f9-8c52-86fce045e372,limits=SchedulerLimits,num_instances=1,numa_topology=None,pci_requests=InstancePCIRequests,project_id='f789928a4f254f96965ff7f3dedd02be',requested_destination=None,retry=SchedulerRetries,scheduler_hints={},security_groups=<?>))", 
                "name": "nova.scheduler.rpcapi.SchedulerAPI.select_destinations", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "904f91d2-37f7-4fc8-bb0a-999468ed0ffe": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "66538375-4571-4588-8d51-12a512774536": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "1d3eadf4-32c9-4e08-8721-b83128b6d285": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.list_networks of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dea7933a-58e5-44e5-a3ba-294b2f20d7b4": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "c4505d57-4b08-41a4-84d2-038865f953a5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bf12da68-231c-42c8-aa92-ede7ec8d6afe": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dcc8c10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 8, u'data': {u'input_data': {u'tuple:(9, True)': {u'status': u'COMPLETE', u'name': u'network', u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-network-bsueqzfm4pjs/4f715e6a-6c85-4397-adb1-c21fee6efcbb', u'attrs': {u'fixed_network': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', u'fixed_subnet': u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257'}, u'action': u'CREATE', u'id': 9, u'uuid': u'4ace3d32-8486-40ca-9045-69b97b368568'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'e26ac53a-442d-4077-b980-74afdd7ee184'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "76ed2c53-844e-47f4-85b3-dd47da80c1f5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b9c47679-3479-4126-bdd3-b1d485170f5e": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e191d90>, 'CREATE', 'COMPLETE', 'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f7d926c9-b0b9-48d1-bc9a-cad6c1260b42": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd6f650>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e3b6554f-7d1c-45ee-a6f2-eae0d5c9dc0e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "c3d18b4b-8282-468f-93ef-f4b3936f3912": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c9590b65-e0cf-4d71-89a6-300e803492b8": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ddafd90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': 'f77f2708-3715-4e86-b881-f58322e402c0'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cd41b9ec-6387-407b-adfe-e8452f1b5f92": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, u'{\"networks\": [{\"provider:physical_network\": null, \"ipv6_address_scope\": null, \"revision_number\": 5, \"port_security_enabled\": true, \"mtu\": 1450, \"id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"router:external\": false, \"availability_zone_hints\": [], \"availability_zones\": [\"nova\"], \"ipv4_address_scope\": null, \"shared\": false, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"status\": \"ACTIVE\", \"subnets\": [\"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\"], \"description\": \"\", \"tags\": [], \"updated_at\": \"2017-01-19T06:41:57Z\", \"provider:segmentation_id\": 9, \"name\": \"private\", \"admin_state_up\": true, \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:55Z\", \"provider:network_type\": \"vxlan\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fc64db60-9606-407b-ae3b-e921d72375c3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "25ef425b-5129-47bd-acba-8597eb59dc4f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8dfa4407-4905-4252-9b6d-afca35c957a1": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37f1fff10>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c4d69d2f-6a32-4a9a-8eca-ef38c2606a09": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1fd1355e-3cde-420d-8d9b-4ae84779d8b4": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952de021d0>, u'CREATE', 'COMPLETE', u'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "196a02a9-3164-4d6b-8858-217f7eed988b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cff511c9-5e91-411f-ada4-733676c86c9e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0b9f70b5-401a-48e5-af82-3dda70965262": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b1af491c-533f-4a6e-99f1-6446c0ef982a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8adcce0c-9c03-4373-acaa-34479fab9388": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "00b6e7bd-0511-43c6-9bec-7b17b07f960d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bb511a88-1920-4227-9d90-3b844ea931a5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c3673cfc-7af6-4831-a095-a2b66fdadbf5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, '2c0275e1-3f3e-4ca5-aa69-a0660197e312', {'port': {'device_owner': 'compute:None', 'binding:host_id': u'vinhnt-LAB', 'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}})", 
                "name": "nova.network.neutronv2.api.ClientWrapper.update_port", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ab2c6713-e917-4f81-97ae-f33411cf11e6": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952df86fd0>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-etcd_lb-kbhpmtcuvob2', u'stack_id': u'a1cc2b35-433b-4395-af9a-299915cb643d', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5133458b-3ac5-42fd-b73c-14d82b446af9": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b30a14cb-e8ed-4b95-9039-ae8672457f40": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a7efd9ff-8df2-4196-93f3-5e67947deb24": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3a83beab-9248-40af-bcf7-1ea512b5a23c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "583d3d7b-72d3-4bad-9e47-8d7a561456d4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "12410747-5031-41f9-8b30-737bd2898644": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d94384a0-163c-413e-b1e4-05700abba6fd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bf2d99ad-d52b-488c-8b64-dde5d2518b7c": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/os-keypairs/testkey", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "34564d0f-772b-4ad3-8439-12e884a7faa6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:43:04Z\", \"device_owner\": \"compute:None\", \"revision_number\": 10, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9365303f-93a2-422a-b5ac-f0f295ab2f4d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>, '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'fields': ['binding:vnic_type', 'network_id']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2b59234a-e581-467a-bd72-e64dec653ed0": {
            "function": {
                "args": "(<magnum.conductor.api.API object at 0x7f1a3a290e10>, <magnum.common.context.RequestContext object at 0x7f1a39a33f50>, 'ClusterTemplate', 'get_by_name', '1.17', (u'k8s-cluster-template',), {})", 
                "name": "magnum.conductor.api.API.object_class_action", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "221d81d6-9502-4d02-aa68-ebca014c2ef3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "243a72ea-d703-4966-b9cc-e6afbdf5c3ad": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "89cc40f7-ec66-4c4b-80e1-800e250b969d": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd6be50>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-configure_etcd-jogyzbsiaqm2', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -z \"$KUBE_NODE_IP\" ]; then\\n    # FIXME(yuanying): Set KUBE_NODE_IP correctly\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nmyip=\"${KUBE_NODE_IP}\"\\ncert_dir=\"/srv/kubernetes\"\\nprotocol=\"https\"\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    protocol=\"http\"\\nfi\\n\\ncat > /etc/etcd/etcd.conf <<EOF\\nETCD_NAME=\"$myip\"\\nETCD_DATA_DIR=\"/var/lib/etcd/default.etcd\"\\nETCD_LISTEN_CLIENT_URLS=\"$protocol://$myip:2379,http://127.0.0.1:2379\"\\nETCD_LISTEN_PEER_URLS=\"$protocol://$myip:2380\"\\n\\nETCD_ADVERTISE_CLIENT_URLS=\"$protocol://$myip:2379,http://127.0.0.1:2379\"\\nETCD_INITIAL_ADVERTISE_PEER_URLS=\"$protocol://$myip:2380\"\\nETCD_DISCOVERY=\"$ETCD_DISCOVERY_URL\"\\nEOF\\n\\nif [ \"$TLS_DISABLED\" = \"False\" ]; then\\n\\ncat >> /etc/etcd/etcd.conf <<EOF\\nETCD_CA_FILE=$cert_dir/ca.crt\\nETCD_CERT_FILE=$cert_dir/server.crt\\nETCD_KEY_FILE=$cert_dir/server.key\\nETCD_PEER_CA_FILE=$cert_dir/ca.crt\\nETCD_PEER_CERT_FILE=$cert_dir/server.crt\\nETCD_PEER_KEY_FILE=$cert_dir/server.key\\nEOF\\n\\nfi\\n\\nif [ -n \"$HTTP_PROXY\" ]; then\\n    echo \"ETCD_DISCOVERY_PROXY=$HTTP_PROXY\" >> /etc/etcd/etcd.conf\\nfi\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bd3f8b2a-c330-4140-abde-36fcbcc38abc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, u'{\"ports\": []}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6a43d359-3d91-4075-b258-1623a7f6ac72": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b9a1dd7f-a054-4ab9-adb0-9a9f0947029f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "21a34b83-65f7-4063-aee5-b7d6d010f692": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d18cf449-0000-410d-b424-9d5e7e54f518": {
            "function": {
                "args": "(<nova.compute.manager.ComputeManager object at 0x7f67f7273f10>, <nova.context.RequestContext object at 0x7f67ac01e250>)", 
                "name": "nova.compute.manager.ComputeManager.attach_volume", 
                "kwargs": "{u'bdm': BlockDeviceMapping(boot_index=None,connection_info=None,created_at=2017-01-19T06:45:31Z,delete_on_termination=False,deleted=False,deleted_at=None,destination_type='volume',device_name='/dev/vdb',device_type=None,disk_bus=None,guest_format=None,id=5,image_id=None,instance=<?>,instance_uuid=5299fdb3-2219-46f9-8c52-86fce045e372,no_device=False,snapshot_id=None,source_type='volume',tag=None,updated_at=None,volume_id='1ad44791-704f-415a-a915-fb4ba2c7c87e',volume_size=None), u'instance': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=<?>,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=<?>,host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=<?>,launch_index=0,launched_at=2017-01-19T06:45:28Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node='vinhnt-LAB',numa_topology=<?>,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=<?>,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:45:29Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='active')}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c1ae49be-e1c5-4198-9f61-67be22b506c2": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "1fd6e8b2-10cd-465a-9146-e3c916ba84cf": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "72f19a78-b179-41dc-922a-870ac780fbf3": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dbc2890>, 'CREATE', 'COMPLETE', 'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0015b5a5-6cdf-4dc2-bc3c-8922be6f6344": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b7e0325e-2c38-447e-84aa-579cd87e23c5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3e46ae08-b861-473d-a4b4-42439097d79b": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e039150>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 31, u'data': {u'input_data': {u'tuple:(32, True)': {u'status': u'COMPLETE', u'name': u'kube_master_init', u'reference_id': u'a5bd70fa-fe4c-4e92-87c0-49e747f23aff', u'attrs': {}, u'action': u'CREATE', u'id': 32, u'uuid': u'df429780-518b-423f-b4f0-be4c5bd170e0'}, u'tuple:(54, True)': {u'status': u'COMPLETE', u'name': u'kube_master_eth0', u'uuid': u'7cbcebb9-0b62-4743-ad2d-73f619fc6da6', u'attrs': {u\"tuple:(u'fixed_ips', 0, u'ip_address')\": u'10.0.0.9'}, u'action': u'CREATE', u'id': 54, u'reference_id': u'2c0275e1-3f3e-4ca5-aa69-a0660197e312'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b7481ac7-a9af-41f3-8f4a-207791d5ea80": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "02c54e4d-a56f-4636-b36c-8b7b2626c881": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "769e937b-dade-4f72-89c2-ea379baf265c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7339f74b-bfae-4435-92ed-d54bfb22a292": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "79482d64-168a-4d87-8634-0ba939b87769": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b0dddffa-1c05-498f-9500-686fa0deeb2f": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dcd35d0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 41, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c1163e6a-4361-4441-9cd5-895f5273ceaa": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f59d2b29-b0fc-4d29-be52-ce82a3c608db": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "28638032-1b92-47fe-815f-6fee7d566b05": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dbea64c7-4814-4714-8716-90a6f3b82c21": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f0ef9381-c465-491e-a880-7d19ff3ce57f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a2bace48-665c-4b83-86cd-a069df4ddfe7": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dfcba90>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20141016 object at 0x7f952dc54c50>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b372ccfa-a61f-4b7c-b16c-c412aa8d3b96": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "210f7e53-d428-4250-b005-b8bcf288b054": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "67a1e1a1-ee9d-4d8f-98e3-313c9b148135": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "27fee525-60b7-43ca-97a3-47db32f24f74": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8e3f9690-ea8d-49f6-be8d-a1f5c2f62eb2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d07fe82c-769e-4484-b756-4916410a09c8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1cfe434f-7b11-4d4c-8454-21ed366f06e7": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "2dc029c0-8a0a-4231-94c4-b7be9675c8c9": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952de0a2d0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 67, u'data': {u'input_data': {u'tuple:(71, True)': {u'status': u'COMPLETE', u'name': u'minion_wait_handle', u'reference_id': u'16a78306dad744958b042daf74fe8afe', u'attrs': {u'curl_cli': u\"curl -i -X POST -H 'X-Auth-Token: gAAAAABYgGB5noXDDSbj8Ng3eHpHgCbOYM7zEglsOggifCzCBOclCcm3-ONpMVYEZ-36cWKMBP_NY7NGfaXv8WPOLxuHLZERbSYxYtKzY0Vk9-pNRp7TR9HEWzdyWQ_yY01L0AVdtH2cSQtSmSnWgspUsypqsLWLqGxTzianfN40CrqISq2ZZiQ' -H 'Content-Type: application/json' -H 'Accept: application/json' http://10.164.180.85:8004/v1/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/stacks/k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr/01356360-a283-455d-b873-caffa7bc43c7/resources/minion_wait_handle/signal\"}, u'action': u'CREATE', u'id': 71, u'uuid': u'7d82f5be-a2e8-461e-9af0-1808ab75d423'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e096e5d3-4849-4254-96a3-9fd66af9aeac": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "419b7e0c-c8bd-4677-98c7-e60b307beedb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "521caede-c822-4049-91dd-d97a1f53a1d5": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "610d34c3-4363-43a8-a10e-6a175399a7c4": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/users", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "f706df0d-9a5e-4619-b1cd-c1bd930b5f2d": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dfd8710>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'd6e5a374-62d7-4ea2-b030-6103d9eaa819'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3ff97380-a4a9-47ae-9622-c32bee06a7a9": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dcf6f50>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 33, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2c244723-18e9-47d3-8282-f7fc6ba02e2a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "145aaf01-d2a4-40fa-ab1c-9d069e24b549": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e88fff68-73f9-4a6e-92ae-e3b988b46d23": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "ce2bb1a7-3e06-499b-8e63-34eb8014821a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4aeaf5c3-02fb-400b-9f59-dc99ea7d41e4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e17740f7-608d-4991-90f7-3682a6a04aaa": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dd98df24-1e86-4fdf-afca-d52b1ea52ad6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2579d3eb-ff1d-4be5-bf6f-75abe3d46e30": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cef68827-476c-455e-aafd-2017060fd89a": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dbc2890>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': '66bc4e0a-6323-4d85-be18-7882975ae8d0'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6be0f305-dfb0-4c1e-a0b1-9c2cf2f6f4eb": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "299ccc94-035e-4d7a-b8bf-9191ae693f03": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "30ac444f-917a-41ca-afcb-d70d30bb40f9": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b40f24b2-82fc-4037-8a2b-71bc5b6cee4a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bae78c5c-19fc-4102-9b64-bbcdc9a20b06": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "d04f751b-1079-4452-a94b-015ab31e3c95": {
            "function": {
                "args": "(<magnum.conductor.handlers.indirection_api.Handler object at 0x7f3386e13c50>, <magnum.common.context.RequestContext object at 0x7f338571f790>)", 
                "name": "magnum.conductor.handlers.indirection_api.Handler.object_class_action", 
                "kwargs": "{u'objver': u'1.17', u'objmethod': u'get_by_uuid', u'args': [u'020f1324-a3e1-45d6-9373-f4f353810eda'], u'objname': u'ClusterTemplate', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bcaafc60-d2bd-4a66-9610-4cb684d72cd5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c6c0c064-bf24-4a9e-a872-2d38d3b3ee2f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "22039860-a7f3-4ad1-9bc8-2da468f4cc1e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "80e5d876-e9c7-473c-aa1d-e316baf7b4ac": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a4880681-dd96-4dc8-a2dc-609d65ae01ce": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a035672f-39ee-4ab2-a9d1-c70fb921c565": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d91ff1cb-3f28-42bf-b2fd-2eeb4f2f2c57": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "4003a19a-5367-47d3-b902-0577039a99a6": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f953174f810>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 71, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6b91a975-0086-44c4-b77c-93c8070d493d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fee9c4a2-4a04-4683-809d-7e56862339e2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0cd88a81-b866-40ed-b6ac-d935d3537161": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "306e5903-d6a6-48f8-bb0c-62be368f21bc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "11c70e52-a011-4732-82f3-34ab4862099c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, 'GET', '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "831939b7-6bd7-4f45-a116-4e4bdbed3c84": {
            "function": {
                "args": "(<cinder.volume.manager.VolumeManager object at 0x7f95e2c81d50>, <cinder.context.RequestContext object at 0x7f95d46ca5d0>)", 
                "name": "cinder.volume.manager.VolumeManager.attach_volume", 
                "kwargs": "{u'instance_uuid': u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', u'volume': Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:42:12Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-docker_volume-4xhyfkrl657w',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=82c28688-a34b-4bc3-89c6-fdc04285570b,launched_at=2017-01-19T06:42:14Z,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth='CHAP THyZ8adaN383MNpA3jyq Be5ecquV7uysXZNr',provider_geometry=None,provider_id=None,provider_location='10.164.180.85:3260,1 iqn.2010-10.org.openstack:volume-82c28688-a34b-4bc3-89c6-fdc04285570b 1',replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:42:13Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='attaching',terminated_at=None,updated_at=2017-01-19T06:43:14Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), u'host_name': None, u'volume_id': u'82c28688-a34b-4bc3-89c6-fdc04285570b', u'mountpoint': u'/dev/vdb', u'mode': u'rw'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "34bf4187-c270-48ef-a0dc-d17386896cbf": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dc62150>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "af6c2344-7950-4a49-bbdf-386b7e71721a": {
            "function": {
                "args": "(<magnum.conductor.api.API object at 0x7f1a3a290e10>, <magnum.common.context.RequestContext object at 0x7f1a39890f50>, 'ClusterTemplate', 'get_by_uuid', '1.17', (u'020f1324-a3e1-45d6-9373-f4f353810eda',), {})", 
                "name": "magnum.conductor.api.API.object_class_action", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6cd96cc3-ca32-4825-8196-7576f367e675": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e038ad0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 61, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "06231b45-eb37-41ee-b8b3-151fa8e536b0": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/5299fdb3-2219-46f9-8c52-86fce045e372", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "33af0957-9595-496e-8831-1862692af2fe": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2ae328ca-7fe8-4ae0-902a-03cb0e19cf57": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "cd3bae7d-80ce-4cc0-b436-e98e3545e420": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7c9006ec-4a4a-4948-b424-da936d8c3ac7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ba6255d4-c2c3-455b-9477-d2b26d640cf0": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "8557a5ce-d83a-479b-a222-0200902f5283": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'tenant_id': u'f789928a4f254f96965ff7f3dedd02be', 'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2b27fb5f-dc39-41fb-ab82-4394e93277a0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5ec957fd-7e62-44e0-abfd-5b88a15c840f": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dceea90>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'26341deb-828a-40db-b24d-9b88ff38e500'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b42f7ab6-ab2a-4cf3-865d-0ee0799e7124": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'fcff5957-172c-4937-8341-670d27155ef6', {'port': {'device_owner': 'compute:None', 'binding:host_id': u'vinhnt-LAB', 'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}})", 
                "name": "nova.network.neutronv2.api.ClientWrapper.update_port", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d4b0ac65-4aa1-4bda-83e4-90da7d2460bd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0597e069-428f-4f10-b804-3cfe31add656": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'network_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', 'device_owner': 'network:dhcp'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5cfafcb9-7f67-46b1-a82e-5cbefee06942": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'network_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', 'device_owner': 'network:dhcp'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3a1814b1-30db-4e27-bae1-a8f46a2226be": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "507b0355-ad6a-4b14-809f-ba7024bbdcce": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd6fd90>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e52b367e-91bb-4d41-ae6f-44dd0b86ead2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cf4af23d-c803-4976-8df1-715efd9f1608": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc26c50>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-configure_docker_registry-3almjlh2ir7z', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$REGISTRY_ENABLED\" = \"False\" ]; then\\n    exit 0\\nfi\\n\\ncat > /etc/sysconfig/registry-config.yml << EOF\\nversion: 0.1\\nlog:\\n  fields:\\n    service: registry\\nstorage:\\n  cache:\\n    layerinfo: inmemory\\n  swift:\\n    authurl: \"$AUTH_URL\"\\n    region: \"$SWIFT_REGION\"\\n    username: \"$TRUSTEE_USERNAME\"\\n    password: \"$TRUSTEE_PASSWORD\"\\n    domainid: \"$TRUSTEE_DOMAIN_ID\"\\n    trustid: \"$TRUST_ID\"\\n    container: \"$REGISTRY_CONTAINER\"\\n    insecureskipverify: $REGISTRY_INSECURE\\n    chunksize: $REGISTRY_CHUNKSIZE\\nhttp:\\n    addr: :5000\\nEOF\\n\\ncat > /etc/systemd/system/registry.service << EOF\\n[Unit]\\nDescription=Docker registry v2\\nRequires=docker.service\\nAfter=docker.service\\n\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nExecStart=/usr/bin/docker run -d -p $REGISTRY_PORT:5000 --restart=always --name registry -v /etc/sysconfig/registry-config.yml:/etc/docker/registry/config.yml registry:2\\nExecStop=/usr/bin/docker rm -f registry\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "793948d1-7178-4be2-aae6-989b28163c9e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "fc43ce6a-921e-43a0-84b7-ec8b1cecc79d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8ca9cb7b-938e-441e-8250-29c89f28ce3d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8679997c-fe6a-44d6-88a4-53cf88e51977": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "14e77002-3946-4bdc-a497-0bdcb1cf8ce7": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc3e250>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'a187700b-72c7-4353-90bb-89d41d598da6'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "08be6146-ae2a-40b5-b291-a0d338f471f8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:cf:f0:f1\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:45:26Z\", \"device_owner\": \"compute:None\", \"revision_number\": 10, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.3\"}], \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"security_groups\": [\"a194cf94-7b7a-42dd-86a1-306e04d6c859\"], \"device_id\": \"5299fdb3-2219-46f9-8c52-86fce045e372\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_eth0-le73kun3tjst\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:cf:f0:f1\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:13Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c4829b1e-5c38-495c-a3bf-463c545f7b42": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0d456b7f-e5ec-4534-ac76-0827a4f15b3d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0b660a93-4225-4f8b-b439-7cad1709f147": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fa8c7bd8-1418-4c31-9819-37147f0bd11a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "982b0c74-d30f-4b9f-b479-0485d6f24415": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952df08310>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-api_lb-67lbo2q7agec', u'stack_id': u'e4fa21f9-93ac-49a8-9433-3f4b1be63733', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "912bc15e-874f-4b02-8491-312ef6ed0f70": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>, 'GET', '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'fields': ['binding:vnic_type', 'network_id']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "77adaa31-544c-4ebb-b692-8892ba6e66da": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e408490>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDevicePool': u'1.1', u'Service': u'1.20', u'InstancePCIRequests': u'1.1', u'SecurityGroup': u'1.2', u'BlockDeviceMappingList': u'1.17', u'Instance': u'2.3', u'DeviceMetadata': u'1.0', u'SecurityGroupList': u'1.0', u'VirtCPUTopology': u'1.0', u'InstanceFault': u'1.2', u'InstanceDeviceMetadata': u'1.0', u'PciDeviceList': u'1.3', u'PciDevicePoolList': u'1.1', u'ServiceList': u'1.19', u'BlockDeviceMapping': u'1.17', u'VirtCPUModel': u'1.0', u'MigrationContext': u'1.1', u'KeyPair': u'1.4', u'KeyPairList': u'1.3', u'InstancePCIRequest': u'1.1', u'Flavor': u'1.1', u'InstanceInfoCache': u'1.5', u'VirtCPUFeature': u'1.0', u'PciDevice': u'1.5', u'InstanceNUMACell': u'1.3', u'DeviceBus': u'1.0', u'ComputeNode': u'1.16', u'Tag': u'1.1', u'HVSpec': u'1.2', u'EC2Ids': u'1.0', u'InstanceNUMATopology': u'1.3', u'TagList': u'1.1'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'5299fdb3-2219-46f9-8c52-86fce045e372'], u'objname': u'BlockDeviceMappingList', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3052da3e-858a-4770-a2bb-0b056b88407a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1e5f834d-0f34-4391-bdd8-9b45c2093fdb": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dec6710>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 26, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'54a4807d-a014-400b-a595-790da5540976'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b94f6e27-a283-4190-90f2-6ea6d695897c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9db7a92b-a1be-42b7-804e-6e98d7e10bea": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8402b61f-6712-4dd4-a6a6-34a190c1a5c3": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v1/clusters", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "fa527637-553e-420d-a5c0-e396c5ebb0fa": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37eea0050>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "61575d72-c8bf-4394-a783-ce30f3d4c401": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dca0b813-4518-4a28-b152-c88a2c14813a": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e1cf910>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 1, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-api_address_floating_switch-uzgjaz6erk3b', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 60}, u'environment_files': None, u'parent_resource_name': u'api_address_floating_switch', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 11, u'owner_id': u'bf103727-c468-4586-a97c-2c940f7e4d29'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2eef2702-92d9-4243-92ed-04e037b31f6f": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e6e5910>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'InstanceActionEvent': u'1.1'}, u'objmethod': u'event_start', u'args': [u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', u'compute__do_build_and_run_instance'], u'objname': u'InstanceActionEvent', u'kwargs': {u'want_result': False}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "94801270-6f10-4468-9e22-b22a63729818": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37ef41d90>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5e5632a0-d4cc-4d8f-a06d-202ba7136ddd": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd6fb10>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a0b5b3c9-a6ad-4cd6-a7d0-6d514d5d7b37": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e712ed0>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name=None,root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state='networking',terminated_at=None,updated_at=2017-01-19T06:42:21Z,user_data='Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojY2xvdWQtYm9vdGhvb2sKIyEvYmluL3NoCgpzZXRlbmZvcmNlIDAKCnNlZCAtaSAnCiAgICAvXlNFTElOVVg9LyBzLz0uKi89cGVybWlzc2l2ZS8KJyAvZXRjL3NlbGludXgvY29uZmlnCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojY2xvdWQtY29uZmlnCm1lcmdlX2hvdzogZGljdChyZWN1cnNlX2FycmF5KStsaXN0KGFwcGVuZCkKd3JpdGVfZmlsZXM6CiAgLSBwYXRoOiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIEtVQkVfQVBJX1BVQkxJQ19BRERSRVNTPSIxNzIuMjQuNC4xMSIKICAgICAgS1VCRV9BUElfUFJJVkFURV9BRERSRVNTPSIxMC4wLjAuOSIKICAgICAgS1VCRV9BUElfUE9SVD0iODA4MCIKICAgICAgS1VCRV9OT0RFX1BVQkxJQ19JUD0iMTcyLjI0LjQuMTEiCiAgICAgIEtVQkVfTk9ERV9JUD0iMTAuMC4wLjkiCiAgICAgIEtVQkVfQUxMT1dfUFJJVj0idHJ1ZSIKICAgICAgRU5BQkxFX0NJTkRFUj0iJEVOQUJMRV9DSU5ERVIiCiAgICAgIERPQ0tFUl9WT0xVTUU9IjgyYzI4Njg4LWEzNGItNGJjMy04OWM2LWZkYzA0Mjg1NTcwYiIKICAgICAgRE9DS0VSX1ZPTFVNRV9TSVpFPSIzIgogICAgICBET0NLRVJfU1RPUkFHRV9EUklWRVI9ImRldmljZW1hcHBlciIKICAgICAgTkVUV09SS19EUklWRVI9ImZsYW5uZWwiCiAgICAgIEZMQU5ORUxfTkVUV09SS19DSURSPSIxMC4xMDAuMC4wLzE2IgogICAgICBGTEFOTkVMX05FVFdPUktfU1VCTkVUTEVOPSIyNCIKICAgICAgRkxBTk5FTF9CQUNLRU5EPSJ1ZHAiCiAgICAgIFBPUlRBTF9ORVRXT1JLX0NJRFI9IjEwLjI1NC4wLjAvMTYiCiAgICAgIEVUQ0RfRElTQ09WRVJZX1VSTD0iaHR0cHM6Ly9kaXNjb3ZlcnkuZXRjZC5pby8yMDJkNmY4OTVlZDNmNmRkODA0MWI3YjhkMmE1YTM3ZiIKICAgICAgVVNFUk5BTUU9ImFkbWluIgogICAgICBQQVNTV09SRD0iQ2hhbmdlTWUiCiAgICAgIFRFTkFOVF9OQU1FPSJmNzg5OTI4YTRmMjU0Zjk2OTY1ZmY3ZjNkZWRkMDJiZSIKICAgICAgQ0xVU1RFUl9TVUJORVQ9ImNlOTBmOGZjLTRlZDItNGE1NS05Y2Y2LTI2MmZlNDY2ZTI1NyIKICAgICAgVExTX0RJU0FCTEVEPSJUcnVlIgogICAgICBDTFVTVEVSX1VVSUQ9IjlhOGVhMzdjLWU5ZDMtNGE3YS1hMmIxLWRjMTY0ZmIyMWQ2NyIKICAgICAgTUFHTlVNX1VSTD0iaHR0cDovLzEwLjE2NC4xODAuODU6OTUxMS92MSIKICAgICAgSFRUUF9QUk9YWT0iaHR0cDovLzEwLjE2NC4xNzcuMTY4OjgwODAvIgogICAgICBIVFRQU19QUk9YWT0iaHR0cDovLzEwLjE2NC4xNzcuMTY4OjgwODAvIgogICAgICBOT19QUk9YWT0iMTAuMTY0LjE4MC44NSwxMC4wLjAuMC84LDE3Mi4wLjAuMC84IgogICAgICBXQUlUX0NVUkw9ImN1cmwgLWkgLVggUE9TVCAtSCAnWC1BdXRoLVRva2VuOiBnQUFBQUFCWWdGX0RtX1c1d0p1cFRCWEFEOHJGS1lYaUJjMU5hZ01pYnI3ai1pRWxYMnRXVEQ0ZnZuUmN5VzB2X3FBMEFHOU1qODNvME41a0Y3MGJ6Zkd5YWVQNFo5NDE0QmJ6UkpHZTVXRm5hRS1wUElnQTQwdk1XTjR5VHdzM0I3VEVWM01udjBXUWZ2R2NnTG80V2NWR0puTWI4Sy1tNmJNSzdNYkh4Y3BBR2NIazVtZVRlQVEnIC1IICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nIC1IICdBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24nIGh0dHA6Ly8xMC4xNjQuMTgwLjg1OjgwMDQvdjEvM2ZiZDZhMWZkNWYwNGUzMmJmNTg0ZGZkNGI0ZjljNWUvc3RhY2tzL2s4cy1jbHVzdGVyLXVpNGY0b2dlemhtNy1rdWJlX21hc3RlcnMtNGIyemoydTR1a3ZoLTAtN2h2c3dhaXFha3h2L2MzZjdhNTBiLTVmYzktNDIwOS04NzI4LTJhZjQzMDBlNDJkZS9yZXNvdXJjZXMvbWFzdGVyX3dhaXRfaGFuZGxlL3NpZ25hbCIKICAgICAgS1VCRV9WRVJTSU9OPSJ2MS4yLjAiCiAgICAgIFRSVVNURUVfVVNFUl9JRD0iNDRmNzYzZTU3Mjc3NDdlZWJhNmYzMDk1ZDdhODY5NTIiCiAgICAgIFRSVVNURUVfUEFTU1dPUkQ9IjdCWHA5QUJwQmdlSzV6YXRkVCIKICAgICAgVFJVU1RfSUQ9ImE2ZjVjZGQzZWY4MTRjMzJiZDM2YjEzMzc4MTc4NmJjIgogICAgICBBVVRIX1VSTD0iaHR0cDovLzEwLjE2NC4xODAuODU6NTAwMC92MyIKICAgICAgSU5TRUNVUkVfUkVHSVNUUllfVVJMPSIiCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLXogIiRLVUJFX05PREVfSVAiIF07IHRoZW4KICAgICMgRklYTUUoeXVhbnlpbmcpOiBTZXQgS1VCRV9OT0RFX0lQIGNvcnJlY3RseQogICAgS1VCRV9OT0RFX0lQPSQoY3VybCAtcyBodHRwOi8vMTY5LjI1NC4xNjkuMjU0L2xhdGVzdC9tZXRhLWRhdGEvbG9jYWwtaXB2NCkKZmkKCm15aXA9IiR7S1VCRV9OT0RFX0lQfSIKY2VydF9kaXI9Ii9zcnYva3ViZXJuZXRlcyIKcHJvdG9jb2w9Imh0dHBzIgoKaWYgWyAiJFRMU19ESVNBQkxFRCIgPSAiVHJ1ZSIgXTsgdGhlbgogICAgcHJvdG9jb2w9Imh0dHAiCmZpCgpjYXQgPiAvZXRjL2V0Y2QvZXRjZC5jb25mIDw8RU9GCkVUQ0RfTkFNRT0iJG15aXAiCkVUQ0RfREFUQV9ESVI9Ii92YXIvbGliL2V0Y2QvZGVmYXVsdC5ldGNkIgpFVENEX0xJU1RFTl9DTElFTlRfVVJMUz0iJHByb3RvY29sOi8vJG15aXA6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkiCkVUQ0RfTElTVEVOX1BFRVJfVVJMUz0iJHByb3RvY29sOi8vJG15aXA6MjM4MCIKCkVUQ0RfQURWRVJUSVNFX0NMSUVOVF9VUkxTPSIkcHJvdG9jb2w6Ly8kbXlpcDoyMzc5LGh0dHA6Ly8xMjcuMC4wLjE6MjM3OSIKRVRDRF9JTklUSUFMX0FEVkVSVElTRV9QRUVSX1VSTFM9IiRwcm90b2NvbDovLyRteWlwOjIzODAiCkVUQ0RfRElTQ09WRVJZPSIkRVRDRF9ESVNDT1ZFUllfVVJMIgpFT0YKCmlmIFsgIiRUTFNfRElTQUJMRUQiID0gIkZhbHNlIiBdOyB0aGVuCgpjYXQgPj4gL2V0Yy9ldGNkL2V0Y2QuY29uZiA8PEVPRgpFVENEX0NBX0ZJTEU9JGNlcnRfZGlyL2NhLmNydApFVENEX0NFUlRfRklMRT0kY2VydF9kaXIvc2VydmVyLmNydApFVENEX0tFWV9GSUxFPSRjZXJ0X2Rpci9zZXJ2ZXIua2V5CkVUQ0RfUEVFUl9DQV9GSUxFPSRjZXJ0X2Rpci9jYS5jcnQKRVRDRF9QRUVSX0NFUlRfRklMRT0kY2VydF9kaXIvc2VydmVyLmNydApFVENEX1BFRVJfS0VZX0ZJTEU9JGNlcnRfZGlyL3NlcnZlci5rZXkKRU9GCgpmaQoKaWYgWyAtbiAiJEhUVFBfUFJPWFkiIF07IHRoZW4KICAgIGVjaG8gIkVUQ0RfRElTQ09WRVJZX1BST1hZPSRIVFRQX1BST1hZIiA+PiAvZXRjL2V0Y2QvZXRjZC5jb25mCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCktVQkVfT1NfQ0xPVURfQ09ORklHPS9ldGMvc3lzY29uZmlnL2t1YmVfb3BlbnN0YWNrX2NvbmZpZwoKIyBrdWJlcm5ldGVzIGJhY2tlbmQgb25seSBzdXBwb3J0IGtleXN0b25lIHYyIGF0IHRoaXMgcG9pbnQKQVVUSF9VUkw9JChlY2hvICIkQVVUSF9VUkwiIHwgc2VkICdzL3YzL3YyLjAvJykKCiMgR2VuZXJhdGUgYSB0aGUgY29uZmlndXJhdGlvbiBmb3IgS3ViZXJuZXRlcyBzZXJ2aWNlcwojIHRvIHRhbGsgdG8gT3BlblN0YWNrIE5ldXRyb24KY2F0ID4gJEtVQkVfT1NfQ0xPVURfQ09ORklHIDw8RU9GCltHbG9iYWxdCmF1dGgtdXJsPSRBVVRIX1VSTAp1c2VybmFtZT0kVVNFUk5BTUUKcGFzc3dvcmQ9JFBBU1NXT1JECnRlbmFudC1uYW1lPSRURU5BTlRfTkFNRQpbTG9hZEJhbGFuY2VyXQpzdWJuZXQtaWQ9JENMVVNURVJfU1VCTkVUCmNyZWF0ZS1tb25pdG9yPXllcwptb25pdG9yLWRlbGF5PTFtCm1vbml0b3ItdGltZW91dD0zMHMKbW9uaXRvci1tYXgtcmV0cmllcz0zCkVPRgoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgojIENvcHlyaWdodCAyMDE0IFRoZSBLdWJlcm5ldGVzIEF1dGhvcnMgQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwojIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KIyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKIwojICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKIwojIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKIyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAojIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgojIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKIyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCnNldCAtbyBlcnJleGl0CnNldCAtbyBub3Vuc2V0CnNldCAtbyBwaXBlZmFpbAoKaWYgWyAiJFRMU19ESVNBQkxFRCIgPT0gIlRydWUiIF07IHRoZW4KICAgIGV4aXQgMApmaQoKaWYgW1sgLXogIiR7S1VCRV9OT0RFX1BVQkxJQ19JUH0iIF1dOyB0aGVuCiAgICBLVUJFX05PREVfUFVCTElDX0lQPSQoY3VybCAtcyBodHRwOi8vMTY5LjI1NC4xNjkuMjU0L2xhdGVzdC9tZXRhLWRhdGEvcHVibGljLWlwdjQpCmZpCmlmIFtbIC16ICIke0tVQkVfTk9ERV9JUH0iIF1dOyB0aGVuCiAgICBLVUJFX05PREVfSVA9JChjdXJsIC1zIGh0dHA6Ly8xNjkuMjU0LjE2OS4yNTQvbGF0ZXN0L21ldGEtZGF0YS9sb2NhbC1pcHY0KQpmaQoKc2Fucz0iSVA6JHtLVUJFX05PREVfUFVCTElDX0lQfSxJUDoke0tVQkVfTk9ERV9JUH0iCmlmIFsgIiR7S1VCRV9OT0RFX1BVQkxJQ19JUH0iICE9ICIke0tVQkVfQVBJX1BVQkxJQ19BRERSRVNTfSIgXSBcCiAgICAgICAgJiYgWyAtbiAiJHtLVUJFX0FQSV9QVUJMSUNfQUREUkVTU30iIF07IHRoZW4KICAgIHNhbnM9IiR7c2Fuc30sSVA6JHtLVUJFX0FQSV9QVUJMSUNfQUREUkVTU30iCmZpCmlmIFsgIiR7S1VCRV9OT0RFX0lQfSIgIT0gIiR7S1VCRV9BUElfUFJJVkFURV9BRERSRVNTfSIgXSBcCiAgICAgICAgJiYgWyAtbiAiJHtLVUJFX0FQSV9QUklWQVRFX0FERFJFU1N9IiBdOyB0aGVuCiAgICBzYW5zPSIke3NhbnN9LElQOiR7S1VCRV9BUElfUFJJVkFURV9BRERSRVNTfSIKZmkKTUFTVEVSX0hPU1ROQU1FPSR7TUFTVEVSX0hPU1ROQU1FOi19CmlmIFtbIC1uICIke01BU1RFUl9IT1NUTkFNRX0iIF1dOyB0aGVuCiAgICBzYW5zPSIke3NhbnN9LEROUzoke01BU1RFUl9IT1NUTkFNRX0iCmZpCnNhbnM9IiR7c2Fuc30sSVA6MTI3LjAuMC4xIgoKY2VydF9kaXI9L3Nydi9rdWJlcm5ldGVzCmNlcnRfY29uZl9kaXI9JHtjZXJ0X2Rpcn0vY29uZgoKbWtkaXIgLXAgIiRjZXJ0X2RpciIKbWtkaXIgLXAgIiRjZXJ0X2NvbmZfZGlyIgoKQ0FfQ0VSVD0kY2VydF9kaXIvY2EuY3J0ClNFUlZFUl9DRVJUPSRjZXJ0X2Rpci9zZXJ2ZXIuY3J0ClNFUlZFUl9DU1I9JGNlcnRfZGlyL3NlcnZlci5jc3IKU0VSVkVSX0tFWT0kY2VydF9kaXIvc2VydmVyLmtleQoKI0dldCBhIHRva2VuIGJ5IHVzZXIgY3JlZGVudGlhbHMgYW5kIHRydXN0CmF1dGhfanNvbj0kKGNhdCA8PCBFT0YKewogICAgImF1dGgiOiB7CiAgICAgICAgImlkZW50aXR5IjogewogICAgICAgICAgICAibWV0aG9kcyI6IFsKICAgICAgICAgICAgICAgICJwYXNzd29yZCIKICAgICAgICAgICAgXSwKICAgICAgICAgICAgInBhc3N3b3JkIjogewogICAgICAgICAgICAgICAgInVzZXIiOiB7CiAgICAgICAgICAgICAgICAgICAgImlkIjogIiRUUlVTVEVFX1VTRVJfSUQiLAogICAgICAgICAgICAgICAgICAgICJwYXNzd29yZCI6ICIkVFJVU1RFRV9QQVNTV09SRCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInNjb3BlIjogewogICAgICAgICAgICAiT1MtVFJVU1Q6dHJ1c3QiOiB7CiAgICAgICAgICAgICAgICAiaWQiOiAiJFRSVVNUX0lEIgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9CkVPRgopCgojdHJ1c3QgaXMgaW50cm9kdWNlZCBpbiBLZXlzdG9uZSB2MyB2ZXJzaW9uCkFVVEhfVVJMPSR7QVVUSF9VUkwvdjIuMC92M30KY29udGVudF90eXBlPSdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nCnVybD0iJEFVVEhfVVJML2F1dGgvdG9rZW5zIgpVU0VSX1RPS0VOPWBjdXJsIC1rIC1zIC1pIC1YIFBPU1QgLUggIiRjb250ZW50X3R5cGUiIC1kICIkYXV0aF9qc29uIiAkdXJsIFwKICAgIHwgZ3JlcCBYLVN1YmplY3QtVG9rZW4gfCBhd2sgJ3twcmludCAkMn0nIHwgdHIgLWQgJ1tbOnNwYWNlOl1dJ2AKCiMgR2V0IENBIGNlcnRpZmljYXRlIGZvciB0aGlzIGNsdXN0ZXIKY3VybCAtayAtWCBHRVQgXAogICAgLUggIlgtQXV0aC1Ub2tlbjogJFVTRVJfVE9LRU4iIFwKICAgICRNQUdOVU1fVVJML2NlcnRpZmljYXRlcy8kQ0xVU1RFUl9VVUlEIHwgcHl0aG9uIC1jICdpbXBvcnQgc3lzLCBqc29uOyBwcmludCBqc29uLmxvYWQoc3lzLnN0ZGluKVsicGVtIl0nID4gJHtDQV9DRVJUfQoKIyBDcmVhdGUgY29uZmlnIGZvciBzZXJ2ZXIncyBjc3IKY2F0ID4gJHtjZXJ0X2NvbmZfZGlyfS9zZXJ2ZXIuY29uZiA8PEVPRgpbcmVxXQpkaXN0aW5ndWlzaGVkX25hbWUgPSByZXFfZGlzdGluZ3Vpc2hlZF9uYW1lCnJlcV9leHRlbnNpb25zICAgICA9IHJlcV9leHQKcHJvbXB0ID0gbm8KW3JlcV9kaXN0aW5ndWlzaGVkX25hbWVdCkNOID0ga3ViZXJuZXRlcy5pbnZhbGlkCltyZXFfZXh0XQpzdWJqZWN0QWx0TmFtZSA9ICR7c2Fuc30KZXh0ZW5kZWRLZXlVc2FnZSA9IGNsaWVudEF1dGgsc2VydmVyQXV0aApFT0YKCiMgR2VuZXJhdGUgc2VydmVyJ3MgcHJpdmF0ZSBrZXkgYW5kIGNzcgpvcGVuc3NsIGdlbnJzYSAtb3V0ICIke1NFUlZFUl9LRVl9IiA0MDk2CmNobW9kIDQwMCAiJHtTRVJWRVJfS0VZfSIKb3BlbnNzbCByZXEgLW5ldyAtZGF5cyAxMDAwIFwKICAgICAgICAta2V5ICIke1NFUlZFUl9LRVl9IiBcCiAgICAgICAgLW91dCAiJHtTRVJWRVJfQ1NSfSIgXAogICAgICAgIC1yZXFleHRzIHJlcV9leHQgXAogICAgICAgIC1jb25maWcgIiR7Y2VydF9jb25mX2Rpcn0vc2VydmVyLmNvbmYiCgojIFNlbmQgY3NyIHRvIE1hZ251bSB0byBoYXZlIGl0IHNpZ25lZApjc3JfcmVxPSQocHl0aG9uIC1jICJpbXBvcnQganNvbjsgZnAgPSBvcGVuKCcke1NFUlZFUl9DU1J9Jyk7IHByaW50IGpzb24uZHVtcHMoeydjbHVzdGVyX3V1aWQnOiAnJENMVVNURVJfVVVJRCcsICdjc3InOiBmcC5yZWFkKCl9KTsgZnAuY2xvc2UoKSIpCmN1cmwgLWsgLVggUE9TVCBcCiAgICAtSCAiWC1BdXRoLVRva2VuOiAkVVNFUl9UT0tFTiIgXAogICAgLUggIkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbiIgXAogICAgLWQgIiRjc3JfcmVxIiBcCiAgICAkTUFHTlVNX1VSTC9jZXJ0aWZpY2F0ZXMgfCBweXRob24gLWMgJ2ltcG9ydCBzeXMsIGpzb247IHByaW50IGpzb24ubG9hZChzeXMuc3RkaW4pWyJwZW0iXScgPiAke1NFUlZFUl9DRVJUfQoKIyBDb21tb24gY2VydHMgYW5kIGtleSBhcmUgY3JlYXRlZCBmb3IgYm90aCBldGNkIGFuZCBrdWJlcm5ldGVzIHNlcnZpY2VzLgojIEJvdGggZXRjZCBhbmQga3ViZSB1c2VyIHNob3VsZCBoYXZlIHBlcm1pc3Npb24gdG8gYWNjZXNzIHRoZSBjZXJ0cyBhbmQga2V5Lgpncm91cGFkZCBrdWJlX2V0Y2QKdXNlcm1vZCAtYSAtRyBrdWJlX2V0Y2QgZXRjZAp1c2VybW9kIC1hIC1HIGt1YmVfZXRjZCBrdWJlCmNobW9kIDU1MCAiJHtjZXJ0X2Rpcn0iCmNob3duIC1SIGt1YmU6a3ViZV9ldGNkICIke2NlcnRfZGlyfSIKY2htb2QgNDQwICRTRVJWRVJfS0VZCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLW4gIiRET0NLRVJfVk9MVU1FX1NJWkUiIF0gJiYgWyAiJERPQ0tFUl9WT0xVTUVfU0laRSIgLWd0IDAgXTsgdGhlbgogICAgaWYgWyAiJEVOQUJMRV9DSU5ERVIiID09ICJGYWxzZSIgXTsgdGhlbgogICAgICAgICMgRklYTUUoeXVhbnlpbmcpOiBVc2UgZXBoZW1lcmFsIGRpc2sgZm9yIGRvY2tlciBzdG9yYWdlCiAgICAgICAgIyBDdXJyZW50bHkgSXJvbmljIGRvZXNuJ3Qgc3VwcG9ydCBjaW5kZXIgdm9sdW1lcywKICAgICAgICAjIHNvIHdlIG11c3QgdXNlIHByZXNlcnZlZCBlcGhlbWVyYWwgZGlzayBpbnN0ZWFkIG9mIGEgY2luZGVyIHZvbHVtZS4KICAgICAgICBkZXZpY2VfcGF0aD0kKHJlYWRsaW5rIC1mIC9kZXYvZGlzay9ieS1sYWJlbC9lcGhlbWVyYWwwKQogICAgZWxzZQogICAgICAgIGF0dGVtcHRzPTYwCiAgICAgICAgd2hpbGUgWyAke2F0dGVtcHRzfSAtZ3QgMCBdOyBkbwogICAgICAgICAgICBkZXZpY2VfbmFtZT0kKGxzIC9kZXYvZGlzay9ieS1pZCB8IGdyZXAgJHtET0NLRVJfVk9MVU1FOjA6MjB9JCkKICAgICAgICAgICAgaWYgWyAtbiAiJHtkZXZpY2VfbmFtZX0iIF07IHRoZW4KICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGZpCiAgICAgICAgICAgIGVjaG8gIndhaXRpbmcgZm9yIGRpc2sgZGV2aWNlIgogICAgICAgICAgICBzbGVlcCAwLjUKICAgICAgICAgICAgdWRldmFkbSB0cmlnZ2VyCiAgICAgICAgICAgIGxldCBhdHRlbXB0cy0tCiAgICAgICAgZG9uZQoKICAgICAgICBpZiBbIC16ICIke2RldmljZV9uYW1lfSIgXTsgdGhlbgogICAgICAgICAgICBlY2hvICJFUlJPUjogZGlzayBkZXZpY2UgZG9lcyBub3QgZXhpc3QiID4mMgogICAgICAgICAgICBleGl0IDEKICAgICAgICBmaQoKICAgICAgICBkZXZpY2VfcGF0aD0vZGV2L2Rpc2svYnktaWQvJHtkZXZpY2VfbmFtZX0KICAgIGZpCmZpCgojIFRoaXMgZmlsZSBjb250YWlucyBkb2NrZXIgc3RvcmFnZSBkcml2ZXJzIGNvbmZpZ3VyYXRpb24gZm9yIGZlZG9yYQojIGF0b21pYyBob3N0cy4gQ3VycmVudGx5LCBkZXZpY2VtYXBwZXIgYW5kIG92ZXJsYXkgYXJlIHN1cHBvcnRlZC4KCiMgUmVtb3ZlIGFueSBleGlzdGluZyBkb2NrZXItc3RvcmFnZSBjb25maWd1cmF0aW9uLiBJbiBjYXNlIG9mIGFuCiMgZXhpc3RpbmcgY29uZmlndXJhdGlvbiwgZG9ja2VyLXN0b3JhZ2Utc2V0dXAgd2lsbCBmYWlsLgpjbGVhcl9kb2NrZXJfc3RvcmFnZV9jb25maWd1cmF0aW9uICgpIHsKICAgIGlmIFsgLWYgL2V0Yy9zeXNjb25maWcvZG9ja2VyLXN0b3JhZ2UgXTsgdGhlbgogICAgICAgIHNlZCAtaSAiL15ET0NLRVJfU1RPUkFHRV9PUFRJT05TPS8gcy89LiovPS8iIC9ldGMvc3lzY29uZmlnL2RvY2tlci1zdG9yYWdlCiAgICBmaQp9CgojIENvbmZpZ3VyZSBkb2NrZXIgc3RvcmFnZSB3aXRoIHhmcyBhcyBiYWNraW5nIGZpbGVzeXN0ZW0uCmNvbmZpZ3VyZV9vdmVybGF5ICgpIHsKICAgIGNsZWFyX2RvY2tlcl9zdG9yYWdlX2NvbmZpZ3VyYXRpb24KCiAgICBybSAtcmYgL3Zhci9saWIvZG9ja2VyLyoKCiAgICBpZiBbIC1uICIkRE9DS0VSX1ZPTFVNRV9TSVpFIiBdICYmIFsgIiRET0NLRVJfVk9MVU1FX1NJWkUiIC1ndCAwIF07IHRoZW4KICAgICAgICBta2ZzLnhmcyAtZiAke2RldmljZV9wYXRofQogICAgICAgIGVjaG8gIiR7ZGV2aWNlX3BhdGh9IC92YXIvbGliL2RvY2tlciB4ZnMgZGVmYXVsdHMgMCAwIiA+PiAvZXRjL2ZzdGFiCiAgICAgICAgbW91bnQgLWEKICAgIGZpCgogICAgZWNobyAiU1RPUkFHRV9EUklWRVI9b3ZlcmxheSIgPiAvZXRjL3N5c2NvbmZpZy9kb2NrZXItc3RvcmFnZS1zZXR1cAoKICAgICMgU0VMaW51eCBtdXN0IGJlIGVuYWJsZWQgYW5kIGluIGVuZm9yY2luZyBtb2RlIG9uIHRoZSBwaHlzaWNhbAogICAgIyBtYWNoaW5lLCBidXQgbXVzdCBiZSBkaXNhYmxlZCBpbiB0aGUgY29udGFpbmVyIHdoZW4gcGVyZm9ybWluZwogICAgIyBjb250YWluZXIgc2VwYXJhdGlvbgogICAgc2VkIC1pICIvXk9QVElPTlM9LyBzLy0tc2VsaW51eC1lbmFibGVkLy0tc2VsaW51eC1lbmFibGVkPWZhbHNlLyIgL2V0Yy9zeXNjb25maWcvZG9ja2VyCn0KCiMgQ29uZmlndXJlIGRvY2tlciBzdG9yYWdlIHdpdGggZGV2aWNlbWFwcGVyIHVzaW5nIGRpcmVjdCBMVk0KY29uZmlndXJlX2RldmljZW1hcHBlciAoKSB7CiAgICBjbGVhcl9kb2NrZXJfc3RvcmFnZV9jb25maWd1cmF0aW9uCgogICAgaWYgWyAtbiAiJERPQ0tFUl9WT0xVTUVfU0laRSIgXSAmJiBbICIkRE9DS0VSX1ZPTFVNRV9TSVpFIiAtZ3QgMCBdOyB0aGVuCiAgICAgICAgcHZjcmVhdGUgLWYgJHtkZXZpY2VfcGF0aH0KICAgICAgICB2Z2NyZWF0ZSBkb2NrZXIgJHtkZXZpY2VfcGF0aH0KCiAgICAgICAgZWNobyAiVkc9ZG9ja2VyIiA+IC9ldGMvc3lzY29uZmlnL2RvY2tlci1zdG9yYWdlLXNldHVwCiAgICBmaQp9CgoKaWYgWyAiJERPQ0tFUl9TVE9SQUdFX0RSSVZFUiIgPSAib3ZlcmxheSIgXTsgdGhlbgogICAgaWYgWyAkKGVjaG8gLWUgIiQodW5hbWUgLXIpXG4zLjE4IiB8IHNvcnQgLVYgfCBoZWFkIC0xKSA9ICQodW5hbWUgLXIpIF07IHRoZW4KICAgICAgICBFUlJPUl9NRVNTQUdFPSJPdmVybGF5RlMgcmVxdWlyZXMgYXQgbGVhc3QgTGludXgga2VybmVsIDMuMTguIENsdXN0ZXIgbm9kZSBrZXJuZWwgdmVyc2lvbjogJCh1bmFtZSAtcikiCiAgICAgICAgZWNobyAiRVJST1I6ICR7RVJST1JfTUVTU0FHRX0iID4mMgogICAgICAgIHNoIC1jICIke1dBSVRfQ1VSTH0gLS1kYXRhLWJpbmFyeSAne1wic3RhdHVzXCI6IFwiRkFJTFVSRVwiLCBcInJlYXNvblwiOiBcIiR7RVJST1JfTUVTU0FHRX1cIn0nIgogICAgZWxzZQogICAgICAgIGNvbmZpZ3VyZV9vdmVybGF5CiAgICBmaQplbHNlCiAgICBjb25maWd1cmVfZGV2aWNlbWFwcGVyCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmVjaG8gImNvbmZpZ3VyaW5nIGt1YmVybmV0ZXMgKG1hc3RlcikiCgppZiBbIC16ICIkS1VCRV9OT0RFX0lQIiBdOyB0aGVuCiAgICAjIEZJWE1FKHl1YW55aW5nKTogU2V0IEtVQkVfTk9ERV9JUCBjb3JyZWN0bHkKICAgIEtVQkVfTk9ERV9JUD0kKGN1cmwgLXMgaHR0cDovLzE2OS4yNTQuMTY5LjI1NC9sYXRlc3QvbWV0YS1kYXRhL2xvY2FsLWlwdjQpCmZpCgpzZWQgLWkgJwogICAgL15LVUJFX0FMTE9XX1BSSVY9LyBzLz0uKi89Ii0tYWxsb3ctcHJpdmlsZWdlZD0nIiRLVUJFX0FMTE9XX1BSSVYiJyIvCicgL2V0Yy9rdWJlcm5ldGVzL2NvbmZpZwoKS1VCRV9BUElfQVJHUz0iLS1ydW50aW1lLWNvbmZpZz1hcGkvYWxsPXRydWUiCmlmIFsgIiRUTFNfRElTQUJMRUQiID09ICJUcnVlIiBdOyB0aGVuCiAgICBLVUJFX0FQSV9BRERSRVNTPSItLWluc2VjdXJlLWJpbmQtYWRkcmVzcz0wLjAuMC4wIC0taW5zZWN1cmUtcG9ydD0kS1VCRV9BUElfUE9SVCIKZWxzZQogICAgS1VCRV9BUElfQUREUkVTUz0iLS1iaW5kLWFkZHJlc3M9MC4wLjAuMCAtLXNlY3VyZS1wb3J0PSRLVUJFX0FQSV9QT1JUIgogICAgIyBpbnNlY3VyZSBwb3J0IGlzIHVzZWQgaW50ZXJuYWx5CiAgICBLVUJFX0FQSV9BRERSRVNTPSIkS1VCRV9BUElfQUREUkVTUyAtLWluc2VjdXJlLXBvcnQ9ODA4MCIKICAgIEtVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIC0tdGxzLWNlcnQtZmlsZT0vc3J2L2t1YmVybmV0ZXMvc2VydmVyLmNydCIKICAgIEtVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIC0tdGxzLXByaXZhdGUta2V5LWZpbGU9L3Nydi9rdWJlcm5ldGVzL3NlcnZlci5rZXkiCiAgICBLVUJFX0FQSV9BUkdTPSIkS1VCRV9BUElfQVJHUyAtLWNsaWVudC1jYS1maWxlPS9zcnYva3ViZXJuZXRlcy9jYS5jcnQiCmZpCgpzZWQgLWkgJwogICAgL15LVUJFX0FQSV9BRERSRVNTPS8gcy89LiovPSInIiR7S1VCRV9BUElfQUREUkVTU30iJyIvCiAgICAvXktVQkVfU0VSVklDRV9BRERSRVNTRVM9LyBzfD0uKnw9Ii0tc2VydmljZS1jbHVzdGVyLWlwLXJhbmdlPSciJFBPUlRBTF9ORVRXT1JLX0NJRFIiJyJ8CiAgICAvXktVQkVfQVBJX0FSR1M9LyBzL0tVQkVfQVBJX0FSR1MuLy8KICAgIC9eS1VCRV9FVENEX1NFUlZFUlM9LyBzLz0uKi89Ii0tZXRjZC1zZXJ2ZXJzPWh0dHA6XC9cLzEyNy4wLjAuMToyMzc5Ii8KICAgIC9eS1VCRV9BRE1JU1NJT05fQ09OVFJPTD0vIHMvPS4qLz0iIi8KJyAvZXRjL2t1YmVybmV0ZXMvYXBpc2VydmVyCmNhdCA8PCBfRU9DXyA+PiAvZXRjL2t1YmVybmV0ZXMvYXBpc2VydmVyCiNVbmNvbW1lbnQgdGhlIGZvbGxvd2luZyBsaW5lIHRvIGRpc2FibGUgTG9hZCBCYWxhbmNlciBmZWF0dXJlCktVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIgojVW5jb21tZW50IHRoZSBmb2xsb3dpbmcgbGluZSB0byBlbmFibGUgTG9hZCBCYWxhbmNlciBmZWF0dXJlCiNLVUJFX0FQSV9BUkdTPSIkS1VCRV9BUElfQVJHUyAtLWNsb3VkLWNvbmZpZz0vZXRjL3N5c2NvbmZpZy9rdWJlX29wZW5zdGFja19jb25maWcgLS1jbG91ZC1wcm92aWRlcj1vcGVuc3RhY2siCl9FT0NfCgpzZWQgLWkgJwogICAgL15LVUJFTEVUX0FERFJFU1NFUz0vIHMvPS4qLz0iLS1tYWNoaW5lcz0nIiInIi8KICAgIC9eS1VCRV9DT05UUk9MTEVSX01BTkFHRVJfQVJHUz0vIHMvS1VCRV9DT05UUk9MTEVSX01BTkFHRVJfQVJHUy4qLyNVbmNvbW1lbnQgdGhlIGZvbGxvd2luZyBsaW5lIHRvIGVuYWJsZSBLdWJlcm5ldGVzIExvYWQgQmFsYW5jZXIgZmVhdHVyZSBcbiNLVUJFX0NPTlRST0xMRVJfTUFOQUdFUl9BUkdTPSItLWNsb3VkLWNvbmZpZz1cL2V0Y1wvc3lzY29uZmlnXC9rdWJlX29wZW5zdGFja19jb25maWcgLS1jbG91ZC1wcm92aWRlcj1vcGVuc3RhY2siLwonIC9ldGMva3ViZXJuZXRlcy9jb250cm9sbGVyLW1hbmFnZXIKCktVQkVMRVRfQVJHUz0iLS1yZWdpc3Rlci1ub2RlPXRydWUgLS1yZWdpc3Rlci1zY2hlZHVsYWJsZT1mYWxzZSAtLWNvbmZpZz0vZXRjL2t1YmVybmV0ZXMvbWFuaWZlc3RzIC0taG9zdG5hbWUtb3ZlcnJpZGU9JEtVQkVfTk9ERV9JUCIKCmlmIFsgLW4gIiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfSIgXTsgdGhlbgogICAgS1VCRUxFVF9BUkdTPSIke0tVQkVMRVRfQVJHU30gLS1wb2QtaW5mcmEtY29udGFpbmVyLWltYWdlPSR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfS9nb29nbGVfY29udGFpbmVycy9wYXVzZVw6MC44LjAiCiAgICBlY2hvICJJTlNFQ1VSRV9SRUdJU1RSWT0nLS1pbnNlY3VyZS1yZWdpc3RyeSAke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0nIiA+PiAvZXRjL3N5c2NvbmZpZy9kb2NrZXIKZmkKCnNlZCAtaSAnCiAgICAvXktVQkVMRVRfQUREUkVTUz0vIHMvPS4qLz0iLS1hZGRyZXNzPTAuMC4wLjAiLwogICAgL15LVUJFTEVUX0hPU1ROQU1FPS8gcy89LiovPSIiLwogICAgL15LVUJFTEVUX0FSR1M9LyBzfD0uKnw9JyIkS1VCRUxFVF9BUkdTIid8CicgL2V0Yy9rdWJlcm5ldGVzL2t1YmVsZXQKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKRE9DS0VSX0hUVFBfUFJPWFlfQ09ORj0vZXRjL3N5c3RlbWQvc3lzdGVtL2RvY2tlci5zZXJ2aWNlLmQvaHR0cF9wcm94eS5jb25mCgpET0NLRVJfSFRUUFNfUFJPWFlfQ09ORj0vZXRjL3N5c3RlbWQvc3lzdGVtL2RvY2tlci5zZXJ2aWNlLmQvaHR0cHNfcHJveHkuY29uZgoKRE9DS0VSX05PX1BST1hZX0NPTkY9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9kb2NrZXIuc2VydmljZS5kL25vX3Byb3h5LmNvbmYKCkRPQ0tFUl9SRVNUQVJUPTAKCkJBU0hfUkM9L2V0Yy9iYXNocmMKCm1rZGlyIC1wIC9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZAoKaWYgWyAtbiAiJEhUVFBfUFJPWFkiIF07IHRoZW4KICAgIGNhdCA8PEVPRiB8IHNlZCAicy9eICovLyIgPiAkRE9DS0VSX0hUVFBfUFJPWFlfQ09ORgogICAgW1NlcnZpY2VdCiAgICBFbnZpcm9ubWVudD1IVFRQX1BST1hZPSRIVFRQX1BST1hZCkVPRgoKICAgIERPQ0tFUl9SRVNUQVJUPTEKCiAgICBpZiBbIC1mICIkQkFTSF9SQyIgXTsgdGhlbgogICAgICAgIGVjaG8gImRlY2xhcmUgLXggaHR0cF9wcm94eT0kSFRUUF9QUk9YWSIgPj4gJEJBU0hfUkMKICAgIGVsc2UKICAgICAgICBlY2hvICJGaWxlICRCQVNIX1JDIGRvZXMgbm90IGV4aXN0LCBub3Qgc2V0dGluZyBodHRwX3Byb3h5IgogICAgZmkKZmkKCmlmIFsgLW4gIiRIVFRQU19QUk9YWSIgXTsgdGhlbgogICAgY2F0IDw8RU9GIHwgc2VkICJzL14gKi8vIiA+ICRET0NLRVJfSFRUUFNfUFJPWFlfQ09ORgogICAgW1NlcnZpY2VdCiAgICBFbnZpcm9ubWVudD1IVFRQU19QUk9YWT0kSFRUUFNfUFJPWFkKRU9GCgogICAgRE9DS0VSX1JFU1RBUlQ9MQoKICAgIGlmIFsgLWYgIiRCQVNIX1JDIiBdOyB0aGVuCiAgICAgICAgZWNobyAiZGVjbGFyZSAteCBodHRwc19wcm94eT0kSFRUUFNfUFJPWFkiID4+ICRCQVNIX1JDCiAgICBlbHNlCiAgICAgICAgZWNobyAiRmlsZSAkQkFTSF9SQyBkb2VzIG5vdCBleGlzdCwgbm90IHNldHRpbmcgaHR0cHNfcHJveHkiCiAgICBmaQpmaQoKaWYgWyAtbiAiJE5PX1BST1hZIiBdOyB0aGVuCiAgICBjYXQgPDxFT0YgfCBzZWQgInMvXiAqLy8iID4gJERPQ0tFUl9OT19QUk9YWV9DT05GCiAgICBbU2VydmljZV0KICAgIEVudmlyb25tZW50PU5PX1BST1hZPSROT19QUk9YWQpFT0YKCiAgICBET0NLRVJfUkVTVEFSVD0xCgogICAgaWYgWyAtZiAiJEJBU0hfUkMiIF07IHRoZW4KICAgICAgICBlY2hvICJkZWNsYXJlIC14IG5vX3Byb3h5PSROT19QUk9YWSIgPj4gJEJBU0hfUkMKICAgIGVsc2UKICAgICAgICBlY2hvICJGaWxlICRCQVNIX1JDIGRvZXMgbm90IGV4aXN0LCBub3Qgc2V0dGluZyBub19wcm94eSIKICAgIGZpCmZpCgppZiBbICIkRE9DS0VSX1JFU1RBUlQiIC1lcSAxIF07IHRoZW4KICAgIHN5c3RlbWN0bCBkYWVtb24tcmVsb2FkCiAgICBzeXN0ZW1jdGwgLS1uby1ibG9jayByZXN0YXJ0IGRvY2tlci5zZXJ2aWNlCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCiMgbWFrZSBzdXJlIHdlIHBpY2sgdXAgYW55IG1vZGlmaWVkIHVuaXQgZmlsZXMKc3lzdGVtY3RsIGRhZW1vbi1yZWxvYWQKCmVjaG8gInN0YXJ0aW5nIHNlcnZpY2VzIgpmb3Igc2VydmljZSBpbiBldGNkIGRvY2tlciBrdWJlLWFwaXNlcnZlciBrdWJlbGV0OyBkbwogICAgZWNobyAiYWN0aXZhdGluZyBzZXJ2aWNlICRzZXJ2aWNlIgogICAgc3lzdGVtY3RsIGVuYWJsZSAkc2VydmljZQogICAgc3lzdGVtY3RsIC0tbm8tYmxvY2sgc3RhcnQgJHNlcnZpY2UKZG9uZQoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbICIkTkVUV09SS19EUklWRVIiICE9ICJmbGFubmVsIiBdOyB0aGVuCiAgICBleGl0IDAKZmkKCi4gL2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCkZMQU5ORUxfSlNPTj0vZXRjL3N5c2NvbmZpZy9mbGFubmVsLW5ldHdvcmsuanNvbgpGTEFOTkVMRF9DT05GSUc9L2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCnNlZCAtaSAnCiAgICAvXkZMQU5ORUxfRVRDRD0vIHMvPS4qLz0iaHR0cDpcL1wvMTI3LjAuMC4xOjIzNzkiLwonIC9ldGMvc3lzY29uZmlnL2ZsYW5uZWxkCgojIEdlbmVyYXRlIGEgZmxhbm5lbCBjb25maWd1cmF0aW9uIHRoYXQgd2Ugd2lsbAojIHN0b3JlIGludG8gZXRjZCB1c2luZyBjdXJsLgpjYXQgPiAkRkxBTk5FTF9KU09OIDw8RU9GCnsKICAiTmV0d29yayI6ICIkRkxBTk5FTF9ORVRXT1JLX0NJRFIiLAogICJTdWJuZXRsZW4iOiAkRkxBTk5FTF9ORVRXT1JLX1NVQk5FVExFTiwKICAiQmFja2VuZCI6IHsKICAgICJUeXBlIjogIiRGTEFOTkVMX0JBQ0tFTkQiCiAgfQp9CkVPRgoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbICIkTkVUV09SS19EUklWRVIiICE9ICJmbGFubmVsIiBdOyB0aGVuCiAgICBleGl0IDAKZmkKQ0VSVF9ESVI9L3Nydi9rdWJlcm5ldGVzClBST1RPQ09MPWh0dHBzCkZMQU5ORUxfT1BUSU9OUz0iLWV0Y2QtY2FmaWxlICRDRVJUX0RJUi9jYS5jcnQgXAotZXRjZC1jZXJ0ZmlsZSAkQ0VSVF9ESVIvc2VydmVyLmNydCBcCi1ldGNkLWtleWZpbGUgJENFUlRfRElSL3NlcnZlci5rZXkiCkVUQ0RfQ1VSTF9PUFRJT05TPSItLWNhY2VydCAkQ0VSVF9ESVIvY2EuY3J0IFwKLS1jZXJ0ICRDRVJUX0RJUi9zZXJ2ZXIuY3J0IC0ta2V5ICRDRVJUX0RJUi9zZXJ2ZXIua2V5IgpGTEFOTkVMRF9DT05GSUc9L2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCmlmIFsgIiRUTFNfRElTQUJMRUQiID0gIlRydWUiIF07IHRoZW4KICAgIFBST1RPQ09MPWh0dHAKICAgIEZMQU5ORUxfT1BUSU9OUz0iIgogICAgRVRDRF9DVVJMX09QVElPTlM9IiIKZmkKCnNlZCAtaSAnL0ZMQU5ORUxfT1BUSU9OUy8nZCAkRkxBTk5FTERfQ09ORklHCgpjYXQgPj4gJEZMQU5ORUxEX0NPTkZJRyA8PEVPRgpGTEFOTkVMX09QVElPTlM9IiRGTEFOTkVMX09QVElPTlMiCkVPRgoKLiAkRkxBTk5FTERfQ09ORklHCgpGTEFOTkVMX0NPTkZJR19CSU49L3Vzci9sb2NhbC9iaW4vZmxhbm5lbC1jb25maWcKRkxBTk5FTF9DT05GSUdfU0VSVklDRT0vZXRjL3N5c3RlbWQvc3lzdGVtL2ZsYW5uZWwtY29uZmlnLnNlcnZpY2UKRkxBTk5FTF9KU09OPS9ldGMvc3lzY29uZmlnL2ZsYW5uZWwtbmV0d29yay5qc29uCgplY2hvICJjcmVhdGluZyAkRkxBTk5FTF9DT05GSUdfQklOIgpjYXQgPiAkRkxBTk5FTF9DT05GSUdfQklOIDw8RU9GCiMhL2Jpbi9zaAoKaWYgISBbIC1mICIkRkxBTk5FTF9KU09OIiBdOyB0aGVuCiAgZWNobyAiRVJST1I6IG1pc3NpbmcgbmV0d29yayBjb25maWd1cmF0aW9uIGZpbGUiID4mMgogIGV4aXQgMQpmaQoKaWYgISBbICIkRkxBTk5FTF9FVENEIiBdICYmIFsgIiRGTEFOTkVMX0VUQ0RfS0VZIiBdOyB0aGVuCiAgZWNobyAiRVJST1I6IG1pc3NpbmcgcmVxdWlyZWQgY29uZmlndXJhdGlvbiIgPiYyCiAgZXhpdCAxCmZpCgplY2hvICJjcmVhdGluZyBmbGFubmVsZCBjb25maWcgaW4gZXRjZCIKd2hpbGUgISBjdXJsIC1zZiAtTCAkRVRDRF9DVVJMX09QVElPTlMgXAogICAgICAgICRGTEFOTkVMX0VUQ0QvdjIva2V5cyR7RkxBTk5FTF9FVENEX0tFWX0vY29uZmlnIFwKICAgICAgICAtWCBQVVQgLS1kYXRhLXVybGVuY29kZSB2YWx1ZUAke0ZMQU5ORUxfSlNPTn07IGRvCiAgICBlY2hvICJ3YWl0aW5nIGZvciBldGNkIgogICAgc2xlZXAgMQpkb25lCkVPRgoKY2F0ID4gJEZMQU5ORUxfQ09ORklHX1NFUlZJQ0UgPDxFT0YKW1VuaXRdCkFmdGVyPWV0Y2Quc2VydmljZQpSZXF1aXJlcz1ldGNkLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnRGaWxlPS9ldGMvc3lzY29uZmlnL2ZsYW5uZWxkCkV4ZWNTdGFydD0kRkxBTk5FTF9DT05GSUdfQklOCgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCgpjaG93biByb290OnJvb3QgJEZMQU5ORUxfQ09ORklHX0JJTgpjaG1vZCAwNzU1ICRGTEFOTkVMX0NPTkZJR19CSU4KCmNob3duIHJvb3Q6cm9vdCAkRkxBTk5FTF9DT05GSUdfU0VSVklDRQpjaG1vZCAwNjQ0ICRGTEFOTkVMX0NPTkZJR19TRVJWSUNFCgpzeXN0ZW1jdGwgZW5hYmxlIGZsYW5uZWwtY29uZmlnCnN5c3RlbWN0bCBzdGFydCAtLW5vLWJsb2NrIGZsYW5uZWwtY29uZmlnCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgIiRORVRXT1JLX0RSSVZFUiIgIT0gImZsYW5uZWwiIF07IHRoZW4KICAgIGV4aXQgMApmaQoKRkxBTk5FTF9ET0NLRVJfQlJJREdFX0JJTj0vdXNyL2xvY2FsL2Jpbi9mbGFubmVsLWRvY2tlci1icmlkZ2UKRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9mbGFubmVsLWRvY2tlci1icmlkZ2Uuc2VydmljZQpET0NLRVJfRkxBTk5FTF9DT05GPS9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZC9mbGFubmVsLmNvbmYKRkxBTk5FTF9ET0NLRVJfQlJJREdFX0NPTkY9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9mbGFubmVsZC5zZXJ2aWNlLmQvZmxhbm5lbC1kb2NrZXItYnJpZGdlLmNvbmYKCm1rZGlyIC1wIC9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZApta2RpciAtcCAvZXRjL3N5c3RlbWQvc3lzdGVtL2ZsYW5uZWxkLnNlcnZpY2UuZAoKY2F0ID4+ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQklOIDw8RU9GMQojIS9iaW4vc2gKCmlmICEgWyAiXCRGTEFOTkVMX1NVQk5FVCIgXSAmJiBbICJcJEZMQU5ORUxfTVRVIiBdIDsgdGhlbgogIGVjaG8gIkVSUk9SOiBtaXNzaW5nIHJlcXVpcmVkIGVudmlyb25tZW50IHZhcmlhYmxlcy4iID4mMgogIGV4aXQgMQpmaQoKbWtkaXIgLXAgL3J1bi9mbGFubmVsLwpjYXQgPiAvcnVuL2ZsYW5uZWwvZG9ja2VyIDw8RU9GMgpET0NLRVJfTkVUV09SS19PUFRJT05TPSItLWJpcD1cJEZMQU5ORUxfU1VCTkVUIC0tbXR1PVwkRkxBTk5FTF9NVFUiCkVPRjIKRU9GMQoKY2hvd24gcm9vdDpyb290ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQklOCmNobW9kIDA3NTUgJEZMQU5ORUxfRE9DS0VSX0JSSURHRV9CSU4KCmNhdCA+PiAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UgPDxFT0YKW1VuaXRdCkFmdGVyPWZsYW5uZWxkLnNlcnZpY2UKQmVmb3JlPWRvY2tlci5zZXJ2aWNlClJlcXVpcmVzPWZsYW5uZWxkLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnRGaWxlPS9ydW4vZmxhbm5lbC9zdWJuZXQuZW52CkV4ZWNTdGFydD0vdXNyL2xvY2FsL2Jpbi9mbGFubmVsLWRvY2tlci1icmlkZ2UKCltJbnN0YWxsXQpXYW50ZWRCeT1kb2NrZXIuc2VydmljZQpFT0YKCmNob3duIHJvb3Q6cm9vdCAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UKY2htb2QgMDY0NCAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UKCmNhdCA+PiAkRE9DS0VSX0ZMQU5ORUxfQ09ORiA8PEVPRgpbVW5pdF0KUmVxdWlyZXM9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKQWZ0ZXI9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKCltTZXJ2aWNlXQpFbnZpcm9ubWVudEZpbGU9L3J1bi9mbGFubmVsL2RvY2tlcgpFT0YKCmNob3duIHJvb3Q6cm9vdCAkRE9DS0VSX0ZMQU5ORUxfQ09ORgpjaG1vZCAwNjQ0ICRET0NLRVJfRkxBTk5FTF9DT05GCgpjYXQgPj4gJEZMQU5ORUxfRE9DS0VSX0JSSURHRV9DT05GIDw8RU9GCltVbml0XQpSZXF1aXJlcz1mbGFubmVsLWRvY2tlci1icmlkZ2Uuc2VydmljZQpCZWZvcmU9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKCltJbnN0YWxsXQpBbHNvPWZsYW5uZWwtZG9ja2VyLWJyaWRnZS5zZXJ2aWNlCkVPRgoKY2hvd24gcm9vdDpyb290ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQ09ORgpjaG1vZCAwNjQ0ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQ09ORgoKZWNobyAiYWN0aXZhdGluZyBzZXJ2aWNlIGZsYW5uZWxkIgpzeXN0ZW1jdGwgZW5hYmxlIGZsYW5uZWxkCnN5c3RlbWN0bCAtLW5vLWJsb2NrIHN0YXJ0IGZsYW5uZWxkCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCiMgdGhpcyBzZXJ2aWNlIHJlcXVpcmVkIGJlY2F1c2UgZG9ja2VyIHdpbGwgc3RhcnQgb25seSBhZnRlciBjbG91ZCBpbml0IHdhcyBmaW5pc2hlZAojIGR1ZSBzZXJ2aWNlIGRlcGVuZGVuY2llcyBhdCBGZWRvcmEgQXRvbWljIChkb2NrZXIgPC0gZG9ja2VyLXN0b3JhZ2Utc2V0dXAgPC0gY2xvdWQtZmluYWwpCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgpLVUJFX1NZU1RFTV9KU09OPS9zcnYva3ViZXJuZXRlcy9rdWJlLXN5c3RlbS1uYW1lc3BhY2UuanNvbgpbIC1mICR7S1VCRV9TWVNURU1fSlNPTn0gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1NZU1RFTV9KU09OIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fSlNPTn0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1NZU1RFTV9KU09OfQp7CiAgImFwaVZlcnNpb24iOiAidjEiLAogICJraW5kIjogIk5hbWVzcGFjZSIsCiAgIm1ldGFkYXRhIjogewogICAgIm5hbWUiOiAia3ViZS1zeXN0ZW0iCiAgfQp9CkVPRgp9CgpLVUJFX1NZU1RFTV9CSU49L3Vzci9sb2NhbC9iaW4va3ViZS1zeXN0ZW0tbmFtZXNwYWNlClsgLWYgJHtLVUJFX1NZU1RFTV9CSU59IF0gfHwgewogICAgZWNobyAiV3JpdGluZyBGaWxlOiAkS1VCRV9TWVNURU1fQklOIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fQklOfSkKICAgIGNhdCA8PCBFT0YgPiAke0tVQkVfU1lTVEVNX0JJTn0KIyEvYmluL3NoCnVudGlsIGN1cmwgLXNmICJodHRwOi8vMTI3LjAuMC4xOjgwODAvaGVhbHRoeiIKZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCgojY2hlY2sgZm9yIGV4aXN0ZW5jZSBvZiBuYW1lc3BhY2UKL3Vzci9iaW4va3ViZWN0bCBnZXQgbmFtZXNwYWNlIGt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMva3ViZS1zeXN0ZW0tbmFtZXNwYWNlLmpzb24KZmkKRU9GCn0KCktVQkVfU1lTVEVNX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9rdWJlLXN5c3RlbS1uYW1lc3BhY2Uuc2VydmljZQpbIC1mICR7S1VCRV9TWVNURU1fU0VSVklDRX0gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1NZU1RFTV9TRVJWSUNFIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fU0VSVklDRX0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1NZU1RFTV9TRVJWSUNFfQpbVW5pdF0KQWZ0ZXI9a3ViZWxldC5zZXJ2aWNlClJlcXVpcmVzPWt1YmVsZXQuc2VydmljZQoKW1NlcnZpY2VdClR5cGU9b25lc2hvdApFbnZpcm9ubWVudD1IT01FPS9yb290CkVudmlyb25tZW50RmlsZT0tL2V0Yy9rdWJlcm5ldGVzL2NvbmZpZwpFeGVjU3RhcnQ9JHtLVUJFX1NZU1RFTV9CSU59CgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfU1lTVEVNX0JJTn0KY2htb2QgMDc1NSAke0tVQkVfU1lTVEVNX0JJTn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfU1lTVEVNX1NFUlZJQ0V9CmNobW9kIDA2NDQgJHtLVUJFX1NZU1RFTV9TRVJWSUNFfQoKc3lzdGVtY3RsIGVuYWJsZSBrdWJlLXN5c3RlbS1uYW1lc3BhY2UKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sga3ViZS1zeXN0ZW0tbmFtZXNwYWNlCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLW4gIiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfSIgXTsgdGhlbgogICAgSFlQRVJLVUJFX0lNQUdFPSIke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0vZ29vZ2xlX2NvbnRhaW5lcnMvaHlwZXJrdWJlOiR7S1VCRV9WRVJTSU9OfSIKZWxzZQogICAgSFlQRVJLVUJFX0lNQUdFPSJnY3IuaW8vZ29vZ2xlX2NvbnRhaW5lcnMvaHlwZXJrdWJlOiR7S1VCRV9WRVJTSU9OfSIKZmkKCiMgdmFycyBhbHNvIHVzZWQgYnkgdGhlIEt1YmVybmV0ZXMgY29uZmlnIGZpbGVzCnVuc2V0IEtVQkVfQVBJX1BPUlQKdW5zZXQgS1VCRV9BTExPV19QUklWCgojIHRoaXMgZnVuY3Rpb24gZ2VuZXJhdGUgYSBsaXN0IG9mIGFyZ3MgKG9uZSBwZXIgbGluZSkgZnJvbSBhIGxpc3Qgb2YgcG9zc2libHkgbmVzdGVkIGFyZ3MKIyB0aGUgZmlyc3QgcGFyYW1ldGVyIGlzIHRoZSBwcmVmaXggdG8gYmUgYWRkZWQgYmVmb3JlIGVhY2ggYXJnCiMgZW1wdHkgYXJncyBhcmUgaWdub3JlZApnZW5lcmF0ZV9wb2RfYXJncygpIHsKICAgIHByZWZpeD0kMQoKICAgIGZvciB2YXIgaW4gIiR7QDoyfSIgOyBkbwogICAgICAgIGZvciBhcmcgaW4gIiR2YXIiIDsgZG8KICAgICAgICAgICAgZWNobyAiJHByZWZpeCRhcmciCiAgICAgICAgZG9uZQogICAgZG9uZQp9CgoKaW5pdF90ZW1wbGF0ZXMgKCkgewogICAgLiAvZXRjL2t1YmVybmV0ZXMvY29uZmlnCgogICAgLiAvZXRjL2t1YmVybmV0ZXMvY29udHJvbGxlci1tYW5hZ2VyCgogICAgbG9jYWwgVEVNUExBVEU9L2V0Yy9rdWJlcm5ldGVzL21hbmlmZXN0cy9rdWJlLWNvbnRyb2xsZXItbWFuYWdlci55YW1sCiAgICBbIC1mICR7VEVNUExBVEV9IF0gfHwgewogICAgICAgIGVjaG8gIlRFTVBMQVRFOiAkVEVNUExBVEUiCiAgICAgICAgbWtkaXIgLXAgJChkaXJuYW1lICR7VEVNUExBVEV9KQogICAgICAgIGNhdCA8PCBFT0YgPiAke1RFTVBMQVRFfQphcGlWZXJzaW9uOiB2MQpraW5kOiBQb2QKbWV0YWRhdGE6CiAgbmFtZToga3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICAgIGltYWdlOiAke0hZUEVSS1VCRV9JTUFHRX0KICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gY29udHJvbGxlci1tYW5hZ2VyCiAgICAtIC0tbGVhZGVyLWVsZWN0PXRydWUKJChnZW5lcmF0ZV9wb2RfYXJncyAiICAgIC0gIiAkS1VCRV9MT0dUT1NUREVSUiAkS1VCRV9MT0dfTEVWRUwgJEtVQkVfTUFTVEVSICRLVUJFX0NPTlRST0xMRVJfTUFOQUdFUl9BUkdTKQogICAgbGl2ZW5lc3NQcm9iZToKICAgICAgaHR0cEdldDoKICAgICAgICBob3N0OiAxMjcuMC4wLjEKICAgICAgICBwYXRoOiAvaGVhbHRoegogICAgICAgIHBvcnQ6IDEwMjUyCiAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDE1CiAgICAgIHRpbWVvdXRTZWNvbmRzOiAxCiAgICB2b2x1bWVNb3VudHM6CiAgICAtIG1vdW50UGF0aDogL2V0Yy9zc2wvY2VydHMKICAgICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAgICAgcmVhZE9ubHk6IHRydWUKICAgIC0gbW91bnRQYXRoOiAvc3J2L2t1YmVybmV0ZXMKICAgICAgbmFtZToga3ViZXJuZXRlcy1jb25maWcKICAgICAgcmVhZE9ubHk6IHRydWUKICAgIC0gbW91bnRQYXRoOiAvZXRjL3N5c2NvbmZpZwogICAgICBuYW1lOiBzeXNjb25maWcKICAgICAgcmVhZE9ubHk6IHRydWUKICB2b2x1bWVzOgogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC9ldGMvc3NsL2NlcnRzCiAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC9zcnYva3ViZXJuZXRlcwogICAgbmFtZToga3ViZXJuZXRlcy1jb25maWcKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvZXRjL3N5c2NvbmZpZwogICAgbmFtZTogc3lzY29uZmlnCkVPRgogICAgfQoKICAgIC4gL2V0Yy9rdWJlcm5ldGVzL3NjaGVkdWxlcgoKICAgIGxvY2FsIFRFTVBMQVRFPS9ldGMva3ViZXJuZXRlcy9tYW5pZmVzdHMva3ViZS1zY2hlZHVsZXIueWFtbAogICAgWyAtZiAke1RFTVBMQVRFfSBdIHx8IHsKICAgICAgICBlY2hvICJURU1QTEFURTogJFRFTVBMQVRFIgogICAgICAgIG1rZGlyIC1wICQoZGlybmFtZSAke1RFTVBMQVRFfSkKICAgICAgICBjYXQgPDwgRU9GID4gJHtURU1QTEFURX0KYXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgICBpbWFnZTogJHtIWVBFUktVQkVfSU1BR0V9CiAgICBjb21tYW5kOgogICAgLSAvaHlwZXJrdWJlCiAgICAtIHNjaGVkdWxlcgogICAgLSAtLWxlYWRlci1lbGVjdD10cnVlCiQoZ2VuZXJhdGVfcG9kX2FyZ3MgIiAgICAtICIgJEtVQkVfTE9HVE9TVERFUlIgJEtVQkVfTE9HX0xFVkVMICRLVUJFX01BU1RFUiAkS1VCRV9TQ0hFRFVMRVJfQVJHUykKICAgIGxpdmVuZXNzUHJvYmU6CiAgICAgIGh0dHBHZXQ6CiAgICAgICAgaG9zdDogMTI3LjAuMC4xCiAgICAgICAgcGF0aDogL2hlYWx0aHoKICAgICAgICBwb3J0OiAxMDI1MQogICAgICBpbml0aWFsRGVsYXlTZWNvbmRzOiAxNQogICAgICB0aW1lb3V0U2Vjb25kczogMQogICAgdm9sdW1lTW91bnRzOgogICAgLSBtb3VudFBhdGg6IC9ldGMvc3NsL2NlcnRzCiAgICAgIG5hbWU6IHNzbC1jZXJ0cy1ob3N0CiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAtIG1vdW50UGF0aDogL3Nydi9rdWJlcm5ldGVzCiAgICAgIG5hbWU6IGt1YmVybmV0ZXMtY29uZmlnCiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAtIG1vdW50UGF0aDogL2V0Yy9zeXNjb25maWcKICAgICAgbmFtZTogc3lzY29uZmlnCiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgdm9sdW1lczoKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvc3J2L2t1YmVybmV0ZXMKICAgIG5hbWU6IGt1YmVybmV0ZXMtY29uZmlnCiAgLSBob3N0UGF0aDoKICAgICAgcGF0aDogL2V0Yy9zeXNjb25maWcKICAgIG5hbWU6IHN5c2NvbmZpZwpFT0YKICAgIH0KfQoKaW5pdF90ZW1wbGF0ZXMKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKaWYgWyAtbiAiJHtJTlNFQ1VSRV9SRUdJU1RSWV9VUkx9IiBdOyB0aGVuCiAgICBIWVBFUktVQkVfSU1BR0U9IiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfS9nb29nbGVfY29udGFpbmVycy9oeXBlcmt1YmU6JHtLVUJFX1ZFUlNJT059IgplbHNlCiAgICBIWVBFUktVQkVfSU1BR0U9Imdjci5pby9nb29nbGVfY29udGFpbmVycy9oeXBlcmt1YmU6JHtLVUJFX1ZFUlNJT059IgpmaQoKaW5pdF90ZW1wbGF0ZXMgKCkgewogICAgbG9jYWwgVEVNUExBVEU9L2V0Yy9rdWJlcm5ldGVzL21hbmlmZXN0cy9rdWJlLXByb3h5LnlhbWwKICAgIFsgLWYgJHtURU1QTEFURX0gXSB8fCB7CiAgICAgICAgZWNobyAiVEVNUExBVEU6ICRURU1QTEFURSIKICAgICAgICBta2RpciAtcCAkKGRpcm5hbWUgJHtURU1QTEFURX0pCiAgICAgICAgY2F0IDw8IEVPRiA+ICR7VEVNUExBVEV9CmFwaVZlcnNpb246IHYxCmtpbmQ6IFBvZAptZXRhZGF0YToKICBuYW1lOiBrdWJlLXByb3h5CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtcHJveHkKICAgIGltYWdlOiAke0hZUEVSS1VCRV9JTUFHRX0KICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1tYXN0ZXI9aHR0cDovLzEyNy4wLjAuMTo4MDgwCiAgICAtIC0tbG9ndG9zdGRlcnI9dHJ1ZQogICAgLSAtLXY9MAogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCkVPRgogICAgfQp9Cgppbml0X3RlbXBsYXRlcwoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgojIHRoaXMgc2VydmljZSBpcyByZXF1aXJlZCBiZWNhdXNlIGRvY2tlciB3aWxsIHN0YXJ0IG9ubHkgYWZ0ZXIgY2xvdWQgaW5pdCB3YXMgZmluaXNoZWQKIyBkdWUgdG8gdGhlIHNlcnZpY2UgZGVwZW5kZW5jaWVzIGluIEZlZG9yYSBBdG9taWMgKGRvY2tlciA8LSBkb2NrZXItc3RvcmFnZS1zZXR1cCA8LSBjbG91ZC1maW5hbCkKCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbIC1uICIke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0iIF07IHRoZW4KICAgIEtVQkVVSV9JTUFHRT0iJHtJTlNFQ1VSRV9SRUdJU1RSWV9VUkx9L2dvb2dsZV9jb250YWluZXJzL2t1YmUtdWk6djQiCmVsc2UKICAgIEtVQkVVSV9JTUFHRT0iZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2t1YmUtdWk6djQiCmZpCgpLVUJFX1VJX1JDPS9zcnYva3ViZXJuZXRlcy9tYW5pZmVzdHMva3ViZS11aS1yYy55YW1sCgpbIC1mICR7S1VCRV9VSV9SQ30gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1VJX1JDIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9VSV9SQ30pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX1JDfQphcGlWZXJzaW9uOiB2MQpraW5kOiBSZXBsaWNhdGlvbkNvbnRyb2xsZXIKbWV0YWRhdGE6CiAgbmFtZToga3ViZS11aS12NAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBsYWJlbHM6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICB2ZXJzaW9uOiB2NAogICAga3ViZXJuZXRlcy5pby9jbHVzdGVyLXNlcnZpY2U6ICJ0cnVlIgpzcGVjOgogIHJlcGxpY2FzOiAxCiAgc2VsZWN0b3I6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICB2ZXJzaW9uOiB2NAogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICAgICAgdmVyc2lvbjogdjQKICAgICAgICBrdWJlcm5ldGVzLmlvL2NsdXN0ZXItc2VydmljZTogInRydWUiCiAgICBzcGVjOgogICAgICBjb250YWluZXJzOgogICAgICAtIG5hbWU6IGt1YmUtdWkKICAgICAgICBpbWFnZTogJHtLVUJFVUlfSU1BR0V9CiAgICAgICAgcmVzb3VyY2VzOgogICAgICAgICAgbGltaXRzOgogICAgICAgICAgICBjcHU6IDEwMG0KICAgICAgICAgICAgbWVtb3J5OiA1ME1pCiAgICAgICAgcG9ydHM6CiAgICAgICAgLSBjb250YWluZXJQb3J0OiA4MDgwCkVPRgp9CgpLVUJFX1VJX1NWQz0vc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktc3ZjLnlhbWwKWyAtZiAke0tVQkVfVUlfU1ZDfSBdIHx8IHsKICAgIGVjaG8gIldyaXRpbmcgRmlsZTogJEtVQkVfVUlfU1ZDIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9VSV9TVkN9KQogICAgY2F0IDw8IEVPRiA+ICR7S1VCRV9VSV9TVkN9CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2UKbWV0YWRhdGE6CiAgbmFtZToga3ViZS11aQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBsYWJlbHM6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICBrdWJlcm5ldGVzLmlvL2NsdXN0ZXItc2VydmljZTogInRydWUiCiAgICBrdWJlcm5ldGVzLmlvL25hbWU6ICJLdWJlVUkiCnNwZWM6CiAgc2VsZWN0b3I6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgcG9ydHM6CiAgLSBwb3J0OiA4MAogICAgdGFyZ2V0UG9ydDogODA4MApFT0YKfQoKS1VCRV9VSV9CSU49L3Vzci9sb2NhbC9iaW4va3ViZS11aQpbIC1mICR7S1VCRV9VSV9CSU59IF0gfHwgewogICAgZWNobyAiV3JpdGluZyBGaWxlOiAkS1VCRV9VSV9CSU4iCiAgICBta2RpciAtcCAkKGRpcm5hbWUgJHtLVUJFX1VJX0JJTn0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX0JJTn0KIyEvYmluL3NoCnVudGlsIGN1cmwgLXNmICJodHRwOi8vMTI3LjAuMC4xOjgwODAvaGVhbHRoeiIKZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCgojZWNobyBjaGVjayBmb3IgZXhpc3RlbmNlIG9mIGt1YmUtdWktdjQgcmVwbGljYXRpb24gY29udHJvbGxlcgovdXNyL2Jpbi9rdWJlY3RsIGdldCByYyBrdWJlLXVpLXY0IC0tbmFtZXNwYWNlPWt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktcmMueWFtbCAtLW5hbWVzcGFjZT1rdWJlLXN5c3RlbQpmaQoKI2VjaG8gY2hlY2sgZm9yIGV4aXN0ZW5jZSBvZiBrdWJlLXVpIHNlcnZpY2UKL3Vzci9iaW4va3ViZWN0bCBnZXQgc2VydmljZSBrdWJlLXVpIC0tbmFtZXNwYWNlPWt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktc3ZjLnlhbWwgLS1uYW1lc3BhY2U9a3ViZS1zeXN0ZW0KZmkKRU9GCn0KCktVQkVfVUlfU0VSVklDRT0vZXRjL3N5c3RlbWQvc3lzdGVtL2t1YmUtdWkuc2VydmljZQpbIC1mICR7S1VCRV9VSV9TRVJWSUNFfSBdIHx8IHsKICAgIGVjaG8gIldyaXRpbmcgRmlsZTogJEtVQkVfVUlfU0VSVklDRSIKICAgIG1rZGlyIC1wICQoZGlybmFtZSAke0tVQkVfVUlfU0VSVklDRX0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX1NFUlZJQ0V9CltVbml0XQpBZnRlcj1rdWJlLXN5c3RlbS1uYW1lc3BhY2Uuc2VydmljZQpSZXF1aXJlcz1rdWJlbGV0LnNlcnZpY2UKV2FudHM9a3ViZS1zeXN0ZW0tbmFtZXNwYWNlLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnQ9SE9NRT0vcm9vdApFbnZpcm9ubWVudEZpbGU9LS9ldGMva3ViZXJuZXRlcy9jb25maWcKRXhlY1N0YXJ0PSR7S1VCRV9VSV9CSU59CgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfVUlfQklOfQpjaG1vZCAwNzU1ICR7S1VCRV9VSV9CSU59CgpjaG93biByb290OnJvb3QgJHtLVUJFX1VJX1NFUlZJQ0V9CmNobW9kIDA2NDQgJHtLVUJFX1VJX1NFUlZJQ0V9CgpzeXN0ZW1jdGwgZW5hYmxlIGt1YmUtdWkKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sga3ViZS11aQoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKI2Nsb3VkLWNvbmZpZwptZXJnZV9ob3c6IGRpY3QocmVjdXJzZV9hcnJheSkrbGlzdChhcHBlbmQpCndyaXRlX2ZpbGVzOgogIC0gcGF0aDogL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3JlcGxpY2F0aW9uLWNvbnRyb2xsZXIueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFJlcGxpY2F0aW9uQ29udHJvbGxlcgogICAgICBtZXRhZGF0YToKICAgICAgICBuYW1lOiBuZ2lueC1jb250cm9sbGVyCiAgICAgIHNwZWM6CiAgICAgICAgcmVwbGljYXM6IDIKICAgICAgICAjIHNlbGVjdG9yIGlkZW50aWZpZXMgdGhlIHNldCBvZiBwb2RzIHRoYXQgdGhpcwogICAgICAgICMgcmVwbGljYXRpb24gY29udHJvbGxlciBpcyByZXNwb25zaWJsZSBmb3IgbWFuYWdpbmcKICAgICAgICBzZWxlY3RvcjoKICAgICAgICAgIG5hbWU6IG5naW54CiAgICAgICAgIyB0ZW1wbGF0ZSBkZWZpbmVzIHRoZSAnY29va2llIGN1dHRlcicgdXNlZCBmb3IgY3JlYXRpbmcKICAgICAgICAjIG5ldyBwb2RzIHdoZW4gbmVjZXNzYXJ5CiAgICAgICAgdGVtcGxhdGU6CiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgbGFiZWxzOgogICAgICAgICAgICAgICMgSW1wb3J0YW50OiB0aGVzZSBsYWJlbHMgbmVlZCB0byBtYXRjaCB0aGUgc2VsZWN0b3IgYWJvdmUKICAgICAgICAgICAgICAjIFRoZSBhcGkgc2VydmVyIGVuZm9yY2VzIHRoaXMgY29uc3RyYWludC4KICAgICAgICAgICAgICBhcHA6IG5naW54CiAgICAgICAgICBzcGVjOgogICAgICAgICAgICBjb250YWluZXJzOgogICAgICAgICAgICAgIC0gbmFtZTogbmdpbngKICAgICAgICAgICAgICAgIGltYWdlOiBuZ2lueAogICAgICAgICAgICAgICAgcG9ydHM6CiAgICAgICAgICAgICAgICAgIC0gY29udGFpbmVyUG9ydDogODAKCiAgLSBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvcG9kLW5naW54LXdpdGgtbGFiZWwueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFBvZAogICAgICBtZXRhZGF0YToKICAgICAgICBuYW1lOiBuZ2lueAogICAgICAgIGxhYmVsczoKICAgICAgICAgIGFwcDogbmdpbngKICAgICAgc3BlYzoKICAgICAgICBjb250YWluZXJzOgogICAgICAgIC0gbmFtZTogbmdpbngKICAgICAgICAgIGltYWdlOiBuZ2lueAogICAgICAgICAgcG9ydHM6CiAgICAgICAgICAtIGNvbnRhaW5lclBvcnQ6IDgwCgogIC0gcGF0aDogL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3NlcnZpY2UueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFNlcnZpY2UKICAgICAgbWV0YWRhdGE6CiAgICAgICAgbmFtZTogbmdpbngtc2VydmljZQogICAgICBzcGVjOgogICAgICAgIHBvcnRzOgogICAgICAgIC0gcG9ydDogODAwMCAjIHRoZSBwb3J0IHRoYXQgdGhpcyBzZXJ2aWNlIHNob3VsZCBzZXJ2ZSBvbgogICAgICAgICAgIyB0aGUgY29udGFpbmVyIG9uIGVhY2ggcG9kIHRvIGNvbm5lY3QgdG8sIGNhbiBiZSBhIG5hbWUKICAgICAgICAgICMgKGUuZy4gJ3d3dycpIG9yIGEgbnVtYmVyIChlLmcuIDgwKQogICAgICAgICAgdGFyZ2V0UG9ydDogODAKICAgICAgICAgIHByb3RvY29sOiBUQ1AKICAgICAgICAjIGp1c3QgbGlrZSB0aGUgc2VsZWN0b3IgaW4gdGhlIHJlcGxpY2F0aW9uIGNvbnRyb2xsZXIsCiAgICAgICAgIyBidXQgdGhpcyB0aW1lIGl0IGlkZW50aWZpZXMgdGhlIHNldCBvZiBwb2RzIHRvIGxvYWQgYmFsYW5jZQogICAgICAgICMgdHJhZmZpYyB0by4KICAgICAgICBzZWxlY3RvcjoKICAgICAgICAgIGFwcDogbmdpbngKCiAgLSBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvUkVBRE1FLm1kCiAgICBvd25lcjogInJvb3Q6cm9vdCIKICAgIHBlcm1pc3Npb25zOiAiMDY0NCIKICAgIGNvbnRlbnQ6IHwKICAgICAgS3ViZXJuZXRlcyAxMDEgKGh0dHA6Ly9rdWJlcm5ldGVzLmlvL3YxLjAvZG9jcy91c2VyLWd1aWRlL3dhbGt0aHJvdWdoL1JFQURNRS5odG1sKQogICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgogICAgICBMaXN0IGFsbCBub2RlczoKCiAgICAgICAgICBrdWJlY3RsIGdldCBub2RlcwoKICAgICAgUmVwbGljYXRpb24gQ29udHJvbGxlcnM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3JlcGxpY2F0aW9uLWNvbnRyb2xsZXIueWFtbAogICAgICAgICAga3ViZWN0bCBnZXQgcmMKICAgICAgICAgIGt1YmVjdGwgZGVsZXRlIHJjIG5naW54LWNvbnRyb2xsZXIKCiAgICAgIFBvZHM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3BvZC1uZ2lueC13aXRoLWxhYmVsLnlhbWwKICAgICAgICAgIGt1YmVjdGwgZ2V0IHBvZHMKICAgICAgICAgIGN1cmwgaHR0cDovLyQoa3ViZWN0bCBnZXQgcG9kIG5naW54IC1vPXRlbXBsYXRlIC10PXt7LnN0YXR1cy5wb2RJUH19KQoKICAgICAgU2VydmljZXM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3NlcnZpY2UueWFtbAogICAgICAgICAga3ViZWN0bCBnZXQgc2VydmljZXMKCiAgICAgICAgICBleHBvcnQgU0VSVklDRV9JUD0kKGt1YmVjdGwgZ2V0IHNlcnZpY2Ugbmdpbngtc2VydmljZSAtbz10ZW1wbGF0ZSAtdD17ey5zcGVjLmNsdXN0ZXJJUH19KQogICAgICAgICAgZXhwb3J0IFNFUlZJQ0VfUE9SVD0kKGt1YmVjdGwgZ2V0IHNlcnZpY2Ugbmdpbngtc2VydmljZSAtbz10ZW1wbGF0ZSAnLXQ9e3soaW5kZXggLnNwZWMucG9ydHMgMCkucG9ydH19JykKICAgICAgICAgIGN1cmwgaHR0cDovLyR7U0VSVklDRV9JUH06JHtTRVJWSUNFX1BPUlR9CgogICAgICAgICAga3ViZWN0bCBkZWxldGUgc2VydmljZSBuZ2lueC1zZXJ2aWNlCgogICAgICBUcm91Ymxlc2hvb3Rpbmc6CgogICAgICAgICAga3ViZWN0bCBnZXQgZXZlbnRzCgogICAgICAgICAga3ViZWN0bCBkZXNjcmliZSByYyBuZ2lueC1jb250cm9sbGVyCgogICAgICAgICAga3ViZWN0bCBkZXNjcmliZSBwb2QgbmdpbngKCiAgICAgICAgICBrdWJlY3RsIGRlc2NyaWJlIHNlcnZpY2Ugbmdpbngtc2VydmljZQoKICAgICAgICAgIGt1YmVjdGwgZXhlYyBuZ2lueCBlbnYKCiAgICAgICAgICBrdWJlY3RsIGV4ZWMgLXRpIG5naW54IC0tIGJhc2gKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKV0NfTk9USUZZX0JJTj0vdXNyL2xvY2FsL2Jpbi93Yy1ub3RpZnkKV0NfTk9USUZZX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS93Yy1ub3RpZnkuc2VydmljZQoKY2F0ID4gJFdDX05PVElGWV9CSU4gPDxFT0YKIyEvYmluL2Jhc2ggLXYKdW50aWwgY3VybCAtc2YgImh0dHA6Ly8xMjcuMC4wLjE6ODA4MC9oZWFsdGh6IjsgZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCiRXQUlUX0NVUkwgLS1kYXRhLWJpbmFyeSAneyJzdGF0dXMiOiAiU1VDQ0VTUyJ9JwpFT0YKCmNhdCA+ICRXQ19OT1RJRllfU0VSVklDRSA8PEVPRgpbVW5pdF0KRGVzY3JpcHRpb249Tm90aWZ5IEhlYXQKQWZ0ZXI9ZG9ja2VyLnNlcnZpY2UgZXRjZC5zZXJ2aWNlClJlcXVpcmVzPWRvY2tlci5zZXJ2aWNlIGV0Y2Quc2VydmljZQpbU2VydmljZV0KVHlwZT1vbmVzaG90CkV4ZWNTdGFydD0kV0NfTk9USUZZX0JJTgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCgpjaG93biByb290OnJvb3QgJFdDX05PVElGWV9CSU4KY2htb2QgMDc1NSAkV0NfTk9USUZZX0JJTgoKY2hvd24gcm9vdDpyb290ICRXQ19OT1RJRllfU0VSVklDRQpjaG1vZCAwNjQ0ICRXQ19OT1RJRllfU0VSVklDRQoKc3lzdGVtY3RsIGVuYWJsZSB3Yy1ub3RpZnkKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sgd2Mtbm90aWZ5Ci0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09LS0K',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=None,vcpus=1,vm_mode=None,vm_state='building'), u'kwargs': {u'expected_task_state': [None]}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8b196961-555e-47af-99ba-602e8fa346b4": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "bd01722c-c5ef-4fb7-8242-0c743394ee6f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6e64f8f8-e931-42ba-ab49-5c159cf60b04": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dccfa10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 70, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "31be64f8-1ac3-44ab-a636-d436f00858e5": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff380204910>, Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), u'63388f50-4450-4c85-8f3c-197af8f6f6cf')", 
                "name": "nova.compute.api.API.create", 
                "kwargs": "{'forced_host': None, 'display_name': u'k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm', 'forced_node': None, 'availability_zone': None, 'key_name': u'testkey', 'user_data': u'', 'display_description': u'k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm', 'max_count': 1, 'requested_networks': NetworkRequestList(objects=[NetworkRequest]), 'metadata': {}, 'admin_password': 'THgSMb6tDDNB', 'injected_files': [], 'min_count': 1, 'check_server_group_quota': True, 'config_drive': None, 'scheduler_hints': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "97fe545c-6350-4cda-82a8-8258fbfd782e": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff380204910>, Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), {u'status': u'active', 'properties': {u'os_distro': u'fedora-atomic'}, 'name': u'fedora-atomic-latest', 'deleted': False, 'container_format': u'bare', u'created_at': datetime.datetime(2017, 1, 19, 4, 22, 26, tzinfo=<iso8601.Utc>), 'disk_format': u'qcow2', u'updated_at': datetime.datetime(2017, 1, 19, 4, 28, 13, tzinfo=<iso8601.Utc>), u'id': u'63388f50-4450-4c85-8f3c-197af8f6f6cf', u'owner': u'952ab5c3e12a4e4093bed04b75f3afc5', 'checksum': u'1db43e5c5f8fda49dc4324cbb391bc55', u'min_disk': 0, 'is_public': True, 'deleted_at': None, u'min_ram': 0, u'size': 697925632}, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=<?>,cleaned=<?>,config_drive='',created_at=<?>,default_ephemeral_device=<?>,default_swap_device=<?>,deleted=<?>,deleted_at=<?>,device_metadata=<?>,disable_terminate=<?>,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=<?>,fault=<?>,flavor=<?>,host=<?>,hostname=<?>,id=<?>,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=<?>,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=<?>,launched_at=<?>,launched_on=<?>,locked=False,locked_by=<?>,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node=<?>,numa_topology=None,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name=None,root_gb=20,security_groups=<?>,services=<?>,shutdown_terminate=<?>,system_metadata={},tags=<?>,task_state=<?>,terminated_at=<?>,updated_at=<?>,user_data='Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojY2xvdWQtYm9vdGhvb2sKIyEvYmluL3NoCgpzZXRlbmZvcmNlIDAKCnNlZCAtaSAnCiAgICAvXlNFTElOVVg9LyBzLz0uKi89cGVybWlzc2l2ZS8KJyAvZXRjL3NlbGludXgvY29uZmlnCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojY2xvdWQtY29uZmlnCm1lcmdlX2hvdzogZGljdChyZWN1cnNlX2FycmF5KStsaXN0KGFwcGVuZCkKd3JpdGVfZmlsZXM6CiAgLSBwYXRoOiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIEtVQkVfQVBJX1BVQkxJQ19BRERSRVNTPSIxNzIuMjQuNC4xMSIKICAgICAgS1VCRV9BUElfUFJJVkFURV9BRERSRVNTPSIxMC4wLjAuOSIKICAgICAgS1VCRV9BUElfUE9SVD0iODA4MCIKICAgICAgS1VCRV9OT0RFX1BVQkxJQ19JUD0iMTcyLjI0LjQuMTEiCiAgICAgIEtVQkVfTk9ERV9JUD0iMTAuMC4wLjkiCiAgICAgIEtVQkVfQUxMT1dfUFJJVj0idHJ1ZSIKICAgICAgRU5BQkxFX0NJTkRFUj0iJEVOQUJMRV9DSU5ERVIiCiAgICAgIERPQ0tFUl9WT0xVTUU9IjgyYzI4Njg4LWEzNGItNGJjMy04OWM2LWZkYzA0Mjg1NTcwYiIKICAgICAgRE9DS0VSX1ZPTFVNRV9TSVpFPSIzIgogICAgICBET0NLRVJfU1RPUkFHRV9EUklWRVI9ImRldmljZW1hcHBlciIKICAgICAgTkVUV09SS19EUklWRVI9ImZsYW5uZWwiCiAgICAgIEZMQU5ORUxfTkVUV09SS19DSURSPSIxMC4xMDAuMC4wLzE2IgogICAgICBGTEFOTkVMX05FVFdPUktfU1VCTkVUTEVOPSIyNCIKICAgICAgRkxBTk5FTF9CQUNLRU5EPSJ1ZHAiCiAgICAgIFBPUlRBTF9ORVRXT1JLX0NJRFI9IjEwLjI1NC4wLjAvMTYiCiAgICAgIEVUQ0RfRElTQ09WRVJZX1VSTD0iaHR0cHM6Ly9kaXNjb3ZlcnkuZXRjZC5pby8yMDJkNmY4OTVlZDNmNmRkODA0MWI3YjhkMmE1YTM3ZiIKICAgICAgVVNFUk5BTUU9ImFkbWluIgogICAgICBQQVNTV09SRD0iQ2hhbmdlTWUiCiAgICAgIFRFTkFOVF9OQU1FPSJmNzg5OTI4YTRmMjU0Zjk2OTY1ZmY3ZjNkZWRkMDJiZSIKICAgICAgQ0xVU1RFUl9TVUJORVQ9ImNlOTBmOGZjLTRlZDItNGE1NS05Y2Y2LTI2MmZlNDY2ZTI1NyIKICAgICAgVExTX0RJU0FCTEVEPSJUcnVlIgogICAgICBDTFVTVEVSX1VVSUQ9IjlhOGVhMzdjLWU5ZDMtNGE3YS1hMmIxLWRjMTY0ZmIyMWQ2NyIKICAgICAgTUFHTlVNX1VSTD0iaHR0cDovLzEwLjE2NC4xODAuODU6OTUxMS92MSIKICAgICAgSFRUUF9QUk9YWT0iaHR0cDovLzEwLjE2NC4xNzcuMTY4OjgwODAvIgogICAgICBIVFRQU19QUk9YWT0iaHR0cDovLzEwLjE2NC4xNzcuMTY4OjgwODAvIgogICAgICBOT19QUk9YWT0iMTAuMTY0LjE4MC44NSwxMC4wLjAuMC84LDE3Mi4wLjAuMC84IgogICAgICBXQUlUX0NVUkw9ImN1cmwgLWkgLVggUE9TVCAtSCAnWC1BdXRoLVRva2VuOiBnQUFBQUFCWWdGX0RtX1c1d0p1cFRCWEFEOHJGS1lYaUJjMU5hZ01pYnI3ai1pRWxYMnRXVEQ0ZnZuUmN5VzB2X3FBMEFHOU1qODNvME41a0Y3MGJ6Zkd5YWVQNFo5NDE0QmJ6UkpHZTVXRm5hRS1wUElnQTQwdk1XTjR5VHdzM0I3VEVWM01udjBXUWZ2R2NnTG80V2NWR0puTWI4Sy1tNmJNSzdNYkh4Y3BBR2NIazVtZVRlQVEnIC1IICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nIC1IICdBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24nIGh0dHA6Ly8xMC4xNjQuMTgwLjg1OjgwMDQvdjEvM2ZiZDZhMWZkNWYwNGUzMmJmNTg0ZGZkNGI0ZjljNWUvc3RhY2tzL2s4cy1jbHVzdGVyLXVpNGY0b2dlemhtNy1rdWJlX21hc3RlcnMtNGIyemoydTR1a3ZoLTAtN2h2c3dhaXFha3h2L2MzZjdhNTBiLTVmYzktNDIwOS04NzI4LTJhZjQzMDBlNDJkZS9yZXNvdXJjZXMvbWFzdGVyX3dhaXRfaGFuZGxlL3NpZ25hbCIKICAgICAgS1VCRV9WRVJTSU9OPSJ2MS4yLjAiCiAgICAgIFRSVVNURUVfVVNFUl9JRD0iNDRmNzYzZTU3Mjc3NDdlZWJhNmYzMDk1ZDdhODY5NTIiCiAgICAgIFRSVVNURUVfUEFTU1dPUkQ9IjdCWHA5QUJwQmdlSzV6YXRkVCIKICAgICAgVFJVU1RfSUQ9ImE2ZjVjZGQzZWY4MTRjMzJiZDM2YjEzMzc4MTc4NmJjIgogICAgICBBVVRIX1VSTD0iaHR0cDovLzEwLjE2NC4xODAuODU6NTAwMC92MyIKICAgICAgSU5TRUNVUkVfUkVHSVNUUllfVVJMPSIiCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLXogIiRLVUJFX05PREVfSVAiIF07IHRoZW4KICAgICMgRklYTUUoeXVhbnlpbmcpOiBTZXQgS1VCRV9OT0RFX0lQIGNvcnJlY3RseQogICAgS1VCRV9OT0RFX0lQPSQoY3VybCAtcyBodHRwOi8vMTY5LjI1NC4xNjkuMjU0L2xhdGVzdC9tZXRhLWRhdGEvbG9jYWwtaXB2NCkKZmkKCm15aXA9IiR7S1VCRV9OT0RFX0lQfSIKY2VydF9kaXI9Ii9zcnYva3ViZXJuZXRlcyIKcHJvdG9jb2w9Imh0dHBzIgoKaWYgWyAiJFRMU19ESVNBQkxFRCIgPSAiVHJ1ZSIgXTsgdGhlbgogICAgcHJvdG9jb2w9Imh0dHAiCmZpCgpjYXQgPiAvZXRjL2V0Y2QvZXRjZC5jb25mIDw8RU9GCkVUQ0RfTkFNRT0iJG15aXAiCkVUQ0RfREFUQV9ESVI9Ii92YXIvbGliL2V0Y2QvZGVmYXVsdC5ldGNkIgpFVENEX0xJU1RFTl9DTElFTlRfVVJMUz0iJHByb3RvY29sOi8vJG15aXA6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkiCkVUQ0RfTElTVEVOX1BFRVJfVVJMUz0iJHByb3RvY29sOi8vJG15aXA6MjM4MCIKCkVUQ0RfQURWRVJUSVNFX0NMSUVOVF9VUkxTPSIkcHJvdG9jb2w6Ly8kbXlpcDoyMzc5LGh0dHA6Ly8xMjcuMC4wLjE6MjM3OSIKRVRDRF9JTklUSUFMX0FEVkVSVElTRV9QRUVSX1VSTFM9IiRwcm90b2NvbDovLyRteWlwOjIzODAiCkVUQ0RfRElTQ09WRVJZPSIkRVRDRF9ESVNDT1ZFUllfVVJMIgpFT0YKCmlmIFsgIiRUTFNfRElTQUJMRUQiID0gIkZhbHNlIiBdOyB0aGVuCgpjYXQgPj4gL2V0Yy9ldGNkL2V0Y2QuY29uZiA8PEVPRgpFVENEX0NBX0ZJTEU9JGNlcnRfZGlyL2NhLmNydApFVENEX0NFUlRfRklMRT0kY2VydF9kaXIvc2VydmVyLmNydApFVENEX0tFWV9GSUxFPSRjZXJ0X2Rpci9zZXJ2ZXIua2V5CkVUQ0RfUEVFUl9DQV9GSUxFPSRjZXJ0X2Rpci9jYS5jcnQKRVRDRF9QRUVSX0NFUlRfRklMRT0kY2VydF9kaXIvc2VydmVyLmNydApFVENEX1BFRVJfS0VZX0ZJTEU9JGNlcnRfZGlyL3NlcnZlci5rZXkKRU9GCgpmaQoKaWYgWyAtbiAiJEhUVFBfUFJPWFkiIF07IHRoZW4KICAgIGVjaG8gIkVUQ0RfRElTQ09WRVJZX1BST1hZPSRIVFRQX1BST1hZIiA+PiAvZXRjL2V0Y2QvZXRjZC5jb25mCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCktVQkVfT1NfQ0xPVURfQ09ORklHPS9ldGMvc3lzY29uZmlnL2t1YmVfb3BlbnN0YWNrX2NvbmZpZwoKIyBrdWJlcm5ldGVzIGJhY2tlbmQgb25seSBzdXBwb3J0IGtleXN0b25lIHYyIGF0IHRoaXMgcG9pbnQKQVVUSF9VUkw9JChlY2hvICIkQVVUSF9VUkwiIHwgc2VkICdzL3YzL3YyLjAvJykKCiMgR2VuZXJhdGUgYSB0aGUgY29uZmlndXJhdGlvbiBmb3IgS3ViZXJuZXRlcyBzZXJ2aWNlcwojIHRvIHRhbGsgdG8gT3BlblN0YWNrIE5ldXRyb24KY2F0ID4gJEtVQkVfT1NfQ0xPVURfQ09ORklHIDw8RU9GCltHbG9iYWxdCmF1dGgtdXJsPSRBVVRIX1VSTAp1c2VybmFtZT0kVVNFUk5BTUUKcGFzc3dvcmQ9JFBBU1NXT1JECnRlbmFudC1uYW1lPSRURU5BTlRfTkFNRQpbTG9hZEJhbGFuY2VyXQpzdWJuZXQtaWQ9JENMVVNURVJfU1VCTkVUCmNyZWF0ZS1tb25pdG9yPXllcwptb25pdG9yLWRlbGF5PTFtCm1vbml0b3ItdGltZW91dD0zMHMKbW9uaXRvci1tYXgtcmV0cmllcz0zCkVPRgoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgojIENvcHlyaWdodCAyMDE0IFRoZSBLdWJlcm5ldGVzIEF1dGhvcnMgQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwojIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KIyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKIwojICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKIwojIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKIyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAojIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgojIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKIyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCnNldCAtbyBlcnJleGl0CnNldCAtbyBub3Vuc2V0CnNldCAtbyBwaXBlZmFpbAoKaWYgWyAiJFRMU19ESVNBQkxFRCIgPT0gIlRydWUiIF07IHRoZW4KICAgIGV4aXQgMApmaQoKaWYgW1sgLXogIiR7S1VCRV9OT0RFX1BVQkxJQ19JUH0iIF1dOyB0aGVuCiAgICBLVUJFX05PREVfUFVCTElDX0lQPSQoY3VybCAtcyBodHRwOi8vMTY5LjI1NC4xNjkuMjU0L2xhdGVzdC9tZXRhLWRhdGEvcHVibGljLWlwdjQpCmZpCmlmIFtbIC16ICIke0tVQkVfTk9ERV9JUH0iIF1dOyB0aGVuCiAgICBLVUJFX05PREVfSVA9JChjdXJsIC1zIGh0dHA6Ly8xNjkuMjU0LjE2OS4yNTQvbGF0ZXN0L21ldGEtZGF0YS9sb2NhbC1pcHY0KQpmaQoKc2Fucz0iSVA6JHtLVUJFX05PREVfUFVCTElDX0lQfSxJUDoke0tVQkVfTk9ERV9JUH0iCmlmIFsgIiR7S1VCRV9OT0RFX1BVQkxJQ19JUH0iICE9ICIke0tVQkVfQVBJX1BVQkxJQ19BRERSRVNTfSIgXSBcCiAgICAgICAgJiYgWyAtbiAiJHtLVUJFX0FQSV9QVUJMSUNfQUREUkVTU30iIF07IHRoZW4KICAgIHNhbnM9IiR7c2Fuc30sSVA6JHtLVUJFX0FQSV9QVUJMSUNfQUREUkVTU30iCmZpCmlmIFsgIiR7S1VCRV9OT0RFX0lQfSIgIT0gIiR7S1VCRV9BUElfUFJJVkFURV9BRERSRVNTfSIgXSBcCiAgICAgICAgJiYgWyAtbiAiJHtLVUJFX0FQSV9QUklWQVRFX0FERFJFU1N9IiBdOyB0aGVuCiAgICBzYW5zPSIke3NhbnN9LElQOiR7S1VCRV9BUElfUFJJVkFURV9BRERSRVNTfSIKZmkKTUFTVEVSX0hPU1ROQU1FPSR7TUFTVEVSX0hPU1ROQU1FOi19CmlmIFtbIC1uICIke01BU1RFUl9IT1NUTkFNRX0iIF1dOyB0aGVuCiAgICBzYW5zPSIke3NhbnN9LEROUzoke01BU1RFUl9IT1NUTkFNRX0iCmZpCnNhbnM9IiR7c2Fuc30sSVA6MTI3LjAuMC4xIgoKY2VydF9kaXI9L3Nydi9rdWJlcm5ldGVzCmNlcnRfY29uZl9kaXI9JHtjZXJ0X2Rpcn0vY29uZgoKbWtkaXIgLXAgIiRjZXJ0X2RpciIKbWtkaXIgLXAgIiRjZXJ0X2NvbmZfZGlyIgoKQ0FfQ0VSVD0kY2VydF9kaXIvY2EuY3J0ClNFUlZFUl9DRVJUPSRjZXJ0X2Rpci9zZXJ2ZXIuY3J0ClNFUlZFUl9DU1I9JGNlcnRfZGlyL3NlcnZlci5jc3IKU0VSVkVSX0tFWT0kY2VydF9kaXIvc2VydmVyLmtleQoKI0dldCBhIHRva2VuIGJ5IHVzZXIgY3JlZGVudGlhbHMgYW5kIHRydXN0CmF1dGhfanNvbj0kKGNhdCA8PCBFT0YKewogICAgImF1dGgiOiB7CiAgICAgICAgImlkZW50aXR5IjogewogICAgICAgICAgICAibWV0aG9kcyI6IFsKICAgICAgICAgICAgICAgICJwYXNzd29yZCIKICAgICAgICAgICAgXSwKICAgICAgICAgICAgInBhc3N3b3JkIjogewogICAgICAgICAgICAgICAgInVzZXIiOiB7CiAgICAgICAgICAgICAgICAgICAgImlkIjogIiRUUlVTVEVFX1VTRVJfSUQiLAogICAgICAgICAgICAgICAgICAgICJwYXNzd29yZCI6ICIkVFJVU1RFRV9QQVNTV09SRCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInNjb3BlIjogewogICAgICAgICAgICAiT1MtVFJVU1Q6dHJ1c3QiOiB7CiAgICAgICAgICAgICAgICAiaWQiOiAiJFRSVVNUX0lEIgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9CkVPRgopCgojdHJ1c3QgaXMgaW50cm9kdWNlZCBpbiBLZXlzdG9uZSB2MyB2ZXJzaW9uCkFVVEhfVVJMPSR7QVVUSF9VUkwvdjIuMC92M30KY29udGVudF90eXBlPSdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nCnVybD0iJEFVVEhfVVJML2F1dGgvdG9rZW5zIgpVU0VSX1RPS0VOPWBjdXJsIC1rIC1zIC1pIC1YIFBPU1QgLUggIiRjb250ZW50X3R5cGUiIC1kICIkYXV0aF9qc29uIiAkdXJsIFwKICAgIHwgZ3JlcCBYLVN1YmplY3QtVG9rZW4gfCBhd2sgJ3twcmludCAkMn0nIHwgdHIgLWQgJ1tbOnNwYWNlOl1dJ2AKCiMgR2V0IENBIGNlcnRpZmljYXRlIGZvciB0aGlzIGNsdXN0ZXIKY3VybCAtayAtWCBHRVQgXAogICAgLUggIlgtQXV0aC1Ub2tlbjogJFVTRVJfVE9LRU4iIFwKICAgICRNQUdOVU1fVVJML2NlcnRpZmljYXRlcy8kQ0xVU1RFUl9VVUlEIHwgcHl0aG9uIC1jICdpbXBvcnQgc3lzLCBqc29uOyBwcmludCBqc29uLmxvYWQoc3lzLnN0ZGluKVsicGVtIl0nID4gJHtDQV9DRVJUfQoKIyBDcmVhdGUgY29uZmlnIGZvciBzZXJ2ZXIncyBjc3IKY2F0ID4gJHtjZXJ0X2NvbmZfZGlyfS9zZXJ2ZXIuY29uZiA8PEVPRgpbcmVxXQpkaXN0aW5ndWlzaGVkX25hbWUgPSByZXFfZGlzdGluZ3Vpc2hlZF9uYW1lCnJlcV9leHRlbnNpb25zICAgICA9IHJlcV9leHQKcHJvbXB0ID0gbm8KW3JlcV9kaXN0aW5ndWlzaGVkX25hbWVdCkNOID0ga3ViZXJuZXRlcy5pbnZhbGlkCltyZXFfZXh0XQpzdWJqZWN0QWx0TmFtZSA9ICR7c2Fuc30KZXh0ZW5kZWRLZXlVc2FnZSA9IGNsaWVudEF1dGgsc2VydmVyQXV0aApFT0YKCiMgR2VuZXJhdGUgc2VydmVyJ3MgcHJpdmF0ZSBrZXkgYW5kIGNzcgpvcGVuc3NsIGdlbnJzYSAtb3V0ICIke1NFUlZFUl9LRVl9IiA0MDk2CmNobW9kIDQwMCAiJHtTRVJWRVJfS0VZfSIKb3BlbnNzbCByZXEgLW5ldyAtZGF5cyAxMDAwIFwKICAgICAgICAta2V5ICIke1NFUlZFUl9LRVl9IiBcCiAgICAgICAgLW91dCAiJHtTRVJWRVJfQ1NSfSIgXAogICAgICAgIC1yZXFleHRzIHJlcV9leHQgXAogICAgICAgIC1jb25maWcgIiR7Y2VydF9jb25mX2Rpcn0vc2VydmVyLmNvbmYiCgojIFNlbmQgY3NyIHRvIE1hZ251bSB0byBoYXZlIGl0IHNpZ25lZApjc3JfcmVxPSQocHl0aG9uIC1jICJpbXBvcnQganNvbjsgZnAgPSBvcGVuKCcke1NFUlZFUl9DU1J9Jyk7IHByaW50IGpzb24uZHVtcHMoeydjbHVzdGVyX3V1aWQnOiAnJENMVVNURVJfVVVJRCcsICdjc3InOiBmcC5yZWFkKCl9KTsgZnAuY2xvc2UoKSIpCmN1cmwgLWsgLVggUE9TVCBcCiAgICAtSCAiWC1BdXRoLVRva2VuOiAkVVNFUl9UT0tFTiIgXAogICAgLUggIkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbiIgXAogICAgLWQgIiRjc3JfcmVxIiBcCiAgICAkTUFHTlVNX1VSTC9jZXJ0aWZpY2F0ZXMgfCBweXRob24gLWMgJ2ltcG9ydCBzeXMsIGpzb247IHByaW50IGpzb24ubG9hZChzeXMuc3RkaW4pWyJwZW0iXScgPiAke1NFUlZFUl9DRVJUfQoKIyBDb21tb24gY2VydHMgYW5kIGtleSBhcmUgY3JlYXRlZCBmb3IgYm90aCBldGNkIGFuZCBrdWJlcm5ldGVzIHNlcnZpY2VzLgojIEJvdGggZXRjZCBhbmQga3ViZSB1c2VyIHNob3VsZCBoYXZlIHBlcm1pc3Npb24gdG8gYWNjZXNzIHRoZSBjZXJ0cyBhbmQga2V5Lgpncm91cGFkZCBrdWJlX2V0Y2QKdXNlcm1vZCAtYSAtRyBrdWJlX2V0Y2QgZXRjZAp1c2VybW9kIC1hIC1HIGt1YmVfZXRjZCBrdWJlCmNobW9kIDU1MCAiJHtjZXJ0X2Rpcn0iCmNob3duIC1SIGt1YmU6a3ViZV9ldGNkICIke2NlcnRfZGlyfSIKY2htb2QgNDQwICRTRVJWRVJfS0VZCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLW4gIiRET0NLRVJfVk9MVU1FX1NJWkUiIF0gJiYgWyAiJERPQ0tFUl9WT0xVTUVfU0laRSIgLWd0IDAgXTsgdGhlbgogICAgaWYgWyAiJEVOQUJMRV9DSU5ERVIiID09ICJGYWxzZSIgXTsgdGhlbgogICAgICAgICMgRklYTUUoeXVhbnlpbmcpOiBVc2UgZXBoZW1lcmFsIGRpc2sgZm9yIGRvY2tlciBzdG9yYWdlCiAgICAgICAgIyBDdXJyZW50bHkgSXJvbmljIGRvZXNuJ3Qgc3VwcG9ydCBjaW5kZXIgdm9sdW1lcywKICAgICAgICAjIHNvIHdlIG11c3QgdXNlIHByZXNlcnZlZCBlcGhlbWVyYWwgZGlzayBpbnN0ZWFkIG9mIGEgY2luZGVyIHZvbHVtZS4KICAgICAgICBkZXZpY2VfcGF0aD0kKHJlYWRsaW5rIC1mIC9kZXYvZGlzay9ieS1sYWJlbC9lcGhlbWVyYWwwKQogICAgZWxzZQogICAgICAgIGF0dGVtcHRzPTYwCiAgICAgICAgd2hpbGUgWyAke2F0dGVtcHRzfSAtZ3QgMCBdOyBkbwogICAgICAgICAgICBkZXZpY2VfbmFtZT0kKGxzIC9kZXYvZGlzay9ieS1pZCB8IGdyZXAgJHtET0NLRVJfVk9MVU1FOjA6MjB9JCkKICAgICAgICAgICAgaWYgWyAtbiAiJHtkZXZpY2VfbmFtZX0iIF07IHRoZW4KICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGZpCiAgICAgICAgICAgIGVjaG8gIndhaXRpbmcgZm9yIGRpc2sgZGV2aWNlIgogICAgICAgICAgICBzbGVlcCAwLjUKICAgICAgICAgICAgdWRldmFkbSB0cmlnZ2VyCiAgICAgICAgICAgIGxldCBhdHRlbXB0cy0tCiAgICAgICAgZG9uZQoKICAgICAgICBpZiBbIC16ICIke2RldmljZV9uYW1lfSIgXTsgdGhlbgogICAgICAgICAgICBlY2hvICJFUlJPUjogZGlzayBkZXZpY2UgZG9lcyBub3QgZXhpc3QiID4mMgogICAgICAgICAgICBleGl0IDEKICAgICAgICBmaQoKICAgICAgICBkZXZpY2VfcGF0aD0vZGV2L2Rpc2svYnktaWQvJHtkZXZpY2VfbmFtZX0KICAgIGZpCmZpCgojIFRoaXMgZmlsZSBjb250YWlucyBkb2NrZXIgc3RvcmFnZSBkcml2ZXJzIGNvbmZpZ3VyYXRpb24gZm9yIGZlZG9yYQojIGF0b21pYyBob3N0cy4gQ3VycmVudGx5LCBkZXZpY2VtYXBwZXIgYW5kIG92ZXJsYXkgYXJlIHN1cHBvcnRlZC4KCiMgUmVtb3ZlIGFueSBleGlzdGluZyBkb2NrZXItc3RvcmFnZSBjb25maWd1cmF0aW9uLiBJbiBjYXNlIG9mIGFuCiMgZXhpc3RpbmcgY29uZmlndXJhdGlvbiwgZG9ja2VyLXN0b3JhZ2Utc2V0dXAgd2lsbCBmYWlsLgpjbGVhcl9kb2NrZXJfc3RvcmFnZV9jb25maWd1cmF0aW9uICgpIHsKICAgIGlmIFsgLWYgL2V0Yy9zeXNjb25maWcvZG9ja2VyLXN0b3JhZ2UgXTsgdGhlbgogICAgICAgIHNlZCAtaSAiL15ET0NLRVJfU1RPUkFHRV9PUFRJT05TPS8gcy89LiovPS8iIC9ldGMvc3lzY29uZmlnL2RvY2tlci1zdG9yYWdlCiAgICBmaQp9CgojIENvbmZpZ3VyZSBkb2NrZXIgc3RvcmFnZSB3aXRoIHhmcyBhcyBiYWNraW5nIGZpbGVzeXN0ZW0uCmNvbmZpZ3VyZV9vdmVybGF5ICgpIHsKICAgIGNsZWFyX2RvY2tlcl9zdG9yYWdlX2NvbmZpZ3VyYXRpb24KCiAgICBybSAtcmYgL3Zhci9saWIvZG9ja2VyLyoKCiAgICBpZiBbIC1uICIkRE9DS0VSX1ZPTFVNRV9TSVpFIiBdICYmIFsgIiRET0NLRVJfVk9MVU1FX1NJWkUiIC1ndCAwIF07IHRoZW4KICAgICAgICBta2ZzLnhmcyAtZiAke2RldmljZV9wYXRofQogICAgICAgIGVjaG8gIiR7ZGV2aWNlX3BhdGh9IC92YXIvbGliL2RvY2tlciB4ZnMgZGVmYXVsdHMgMCAwIiA+PiAvZXRjL2ZzdGFiCiAgICAgICAgbW91bnQgLWEKICAgIGZpCgogICAgZWNobyAiU1RPUkFHRV9EUklWRVI9b3ZlcmxheSIgPiAvZXRjL3N5c2NvbmZpZy9kb2NrZXItc3RvcmFnZS1zZXR1cAoKICAgICMgU0VMaW51eCBtdXN0IGJlIGVuYWJsZWQgYW5kIGluIGVuZm9yY2luZyBtb2RlIG9uIHRoZSBwaHlzaWNhbAogICAgIyBtYWNoaW5lLCBidXQgbXVzdCBiZSBkaXNhYmxlZCBpbiB0aGUgY29udGFpbmVyIHdoZW4gcGVyZm9ybWluZwogICAgIyBjb250YWluZXIgc2VwYXJhdGlvbgogICAgc2VkIC1pICIvXk9QVElPTlM9LyBzLy0tc2VsaW51eC1lbmFibGVkLy0tc2VsaW51eC1lbmFibGVkPWZhbHNlLyIgL2V0Yy9zeXNjb25maWcvZG9ja2VyCn0KCiMgQ29uZmlndXJlIGRvY2tlciBzdG9yYWdlIHdpdGggZGV2aWNlbWFwcGVyIHVzaW5nIGRpcmVjdCBMVk0KY29uZmlndXJlX2RldmljZW1hcHBlciAoKSB7CiAgICBjbGVhcl9kb2NrZXJfc3RvcmFnZV9jb25maWd1cmF0aW9uCgogICAgaWYgWyAtbiAiJERPQ0tFUl9WT0xVTUVfU0laRSIgXSAmJiBbICIkRE9DS0VSX1ZPTFVNRV9TSVpFIiAtZ3QgMCBdOyB0aGVuCiAgICAgICAgcHZjcmVhdGUgLWYgJHtkZXZpY2VfcGF0aH0KICAgICAgICB2Z2NyZWF0ZSBkb2NrZXIgJHtkZXZpY2VfcGF0aH0KCiAgICAgICAgZWNobyAiVkc9ZG9ja2VyIiA+IC9ldGMvc3lzY29uZmlnL2RvY2tlci1zdG9yYWdlLXNldHVwCiAgICBmaQp9CgoKaWYgWyAiJERPQ0tFUl9TVE9SQUdFX0RSSVZFUiIgPSAib3ZlcmxheSIgXTsgdGhlbgogICAgaWYgWyAkKGVjaG8gLWUgIiQodW5hbWUgLXIpXG4zLjE4IiB8IHNvcnQgLVYgfCBoZWFkIC0xKSA9ICQodW5hbWUgLXIpIF07IHRoZW4KICAgICAgICBFUlJPUl9NRVNTQUdFPSJPdmVybGF5RlMgcmVxdWlyZXMgYXQgbGVhc3QgTGludXgga2VybmVsIDMuMTguIENsdXN0ZXIgbm9kZSBrZXJuZWwgdmVyc2lvbjogJCh1bmFtZSAtcikiCiAgICAgICAgZWNobyAiRVJST1I6ICR7RVJST1JfTUVTU0FHRX0iID4mMgogICAgICAgIHNoIC1jICIke1dBSVRfQ1VSTH0gLS1kYXRhLWJpbmFyeSAne1wic3RhdHVzXCI6IFwiRkFJTFVSRVwiLCBcInJlYXNvblwiOiBcIiR7RVJST1JfTUVTU0FHRX1cIn0nIgogICAgZWxzZQogICAgICAgIGNvbmZpZ3VyZV9vdmVybGF5CiAgICBmaQplbHNlCiAgICBjb25maWd1cmVfZGV2aWNlbWFwcGVyCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmVjaG8gImNvbmZpZ3VyaW5nIGt1YmVybmV0ZXMgKG1hc3RlcikiCgppZiBbIC16ICIkS1VCRV9OT0RFX0lQIiBdOyB0aGVuCiAgICAjIEZJWE1FKHl1YW55aW5nKTogU2V0IEtVQkVfTk9ERV9JUCBjb3JyZWN0bHkKICAgIEtVQkVfTk9ERV9JUD0kKGN1cmwgLXMgaHR0cDovLzE2OS4yNTQuMTY5LjI1NC9sYXRlc3QvbWV0YS1kYXRhL2xvY2FsLWlwdjQpCmZpCgpzZWQgLWkgJwogICAgL15LVUJFX0FMTE9XX1BSSVY9LyBzLz0uKi89Ii0tYWxsb3ctcHJpdmlsZWdlZD0nIiRLVUJFX0FMTE9XX1BSSVYiJyIvCicgL2V0Yy9rdWJlcm5ldGVzL2NvbmZpZwoKS1VCRV9BUElfQVJHUz0iLS1ydW50aW1lLWNvbmZpZz1hcGkvYWxsPXRydWUiCmlmIFsgIiRUTFNfRElTQUJMRUQiID09ICJUcnVlIiBdOyB0aGVuCiAgICBLVUJFX0FQSV9BRERSRVNTPSItLWluc2VjdXJlLWJpbmQtYWRkcmVzcz0wLjAuMC4wIC0taW5zZWN1cmUtcG9ydD0kS1VCRV9BUElfUE9SVCIKZWxzZQogICAgS1VCRV9BUElfQUREUkVTUz0iLS1iaW5kLWFkZHJlc3M9MC4wLjAuMCAtLXNlY3VyZS1wb3J0PSRLVUJFX0FQSV9QT1JUIgogICAgIyBpbnNlY3VyZSBwb3J0IGlzIHVzZWQgaW50ZXJuYWx5CiAgICBLVUJFX0FQSV9BRERSRVNTPSIkS1VCRV9BUElfQUREUkVTUyAtLWluc2VjdXJlLXBvcnQ9ODA4MCIKICAgIEtVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIC0tdGxzLWNlcnQtZmlsZT0vc3J2L2t1YmVybmV0ZXMvc2VydmVyLmNydCIKICAgIEtVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIC0tdGxzLXByaXZhdGUta2V5LWZpbGU9L3Nydi9rdWJlcm5ldGVzL3NlcnZlci5rZXkiCiAgICBLVUJFX0FQSV9BUkdTPSIkS1VCRV9BUElfQVJHUyAtLWNsaWVudC1jYS1maWxlPS9zcnYva3ViZXJuZXRlcy9jYS5jcnQiCmZpCgpzZWQgLWkgJwogICAgL15LVUJFX0FQSV9BRERSRVNTPS8gcy89LiovPSInIiR7S1VCRV9BUElfQUREUkVTU30iJyIvCiAgICAvXktVQkVfU0VSVklDRV9BRERSRVNTRVM9LyBzfD0uKnw9Ii0tc2VydmljZS1jbHVzdGVyLWlwLXJhbmdlPSciJFBPUlRBTF9ORVRXT1JLX0NJRFIiJyJ8CiAgICAvXktVQkVfQVBJX0FSR1M9LyBzL0tVQkVfQVBJX0FSR1MuLy8KICAgIC9eS1VCRV9FVENEX1NFUlZFUlM9LyBzLz0uKi89Ii0tZXRjZC1zZXJ2ZXJzPWh0dHA6XC9cLzEyNy4wLjAuMToyMzc5Ii8KICAgIC9eS1VCRV9BRE1JU1NJT05fQ09OVFJPTD0vIHMvPS4qLz0iIi8KJyAvZXRjL2t1YmVybmV0ZXMvYXBpc2VydmVyCmNhdCA8PCBfRU9DXyA+PiAvZXRjL2t1YmVybmV0ZXMvYXBpc2VydmVyCiNVbmNvbW1lbnQgdGhlIGZvbGxvd2luZyBsaW5lIHRvIGRpc2FibGUgTG9hZCBCYWxhbmNlciBmZWF0dXJlCktVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIgojVW5jb21tZW50IHRoZSBmb2xsb3dpbmcgbGluZSB0byBlbmFibGUgTG9hZCBCYWxhbmNlciBmZWF0dXJlCiNLVUJFX0FQSV9BUkdTPSIkS1VCRV9BUElfQVJHUyAtLWNsb3VkLWNvbmZpZz0vZXRjL3N5c2NvbmZpZy9rdWJlX29wZW5zdGFja19jb25maWcgLS1jbG91ZC1wcm92aWRlcj1vcGVuc3RhY2siCl9FT0NfCgpzZWQgLWkgJwogICAgL15LVUJFTEVUX0FERFJFU1NFUz0vIHMvPS4qLz0iLS1tYWNoaW5lcz0nIiInIi8KICAgIC9eS1VCRV9DT05UUk9MTEVSX01BTkFHRVJfQVJHUz0vIHMvS1VCRV9DT05UUk9MTEVSX01BTkFHRVJfQVJHUy4qLyNVbmNvbW1lbnQgdGhlIGZvbGxvd2luZyBsaW5lIHRvIGVuYWJsZSBLdWJlcm5ldGVzIExvYWQgQmFsYW5jZXIgZmVhdHVyZSBcbiNLVUJFX0NPTlRST0xMRVJfTUFOQUdFUl9BUkdTPSItLWNsb3VkLWNvbmZpZz1cL2V0Y1wvc3lzY29uZmlnXC9rdWJlX29wZW5zdGFja19jb25maWcgLS1jbG91ZC1wcm92aWRlcj1vcGVuc3RhY2siLwonIC9ldGMva3ViZXJuZXRlcy9jb250cm9sbGVyLW1hbmFnZXIKCktVQkVMRVRfQVJHUz0iLS1yZWdpc3Rlci1ub2RlPXRydWUgLS1yZWdpc3Rlci1zY2hlZHVsYWJsZT1mYWxzZSAtLWNvbmZpZz0vZXRjL2t1YmVybmV0ZXMvbWFuaWZlc3RzIC0taG9zdG5hbWUtb3ZlcnJpZGU9JEtVQkVfTk9ERV9JUCIKCmlmIFsgLW4gIiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfSIgXTsgdGhlbgogICAgS1VCRUxFVF9BUkdTPSIke0tVQkVMRVRfQVJHU30gLS1wb2QtaW5mcmEtY29udGFpbmVyLWltYWdlPSR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfS9nb29nbGVfY29udGFpbmVycy9wYXVzZVw6MC44LjAiCiAgICBlY2hvICJJTlNFQ1VSRV9SRUdJU1RSWT0nLS1pbnNlY3VyZS1yZWdpc3RyeSAke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0nIiA+PiAvZXRjL3N5c2NvbmZpZy9kb2NrZXIKZmkKCnNlZCAtaSAnCiAgICAvXktVQkVMRVRfQUREUkVTUz0vIHMvPS4qLz0iLS1hZGRyZXNzPTAuMC4wLjAiLwogICAgL15LVUJFTEVUX0hPU1ROQU1FPS8gcy89LiovPSIiLwogICAgL15LVUJFTEVUX0FSR1M9LyBzfD0uKnw9JyIkS1VCRUxFVF9BUkdTIid8CicgL2V0Yy9rdWJlcm5ldGVzL2t1YmVsZXQKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKRE9DS0VSX0hUVFBfUFJPWFlfQ09ORj0vZXRjL3N5c3RlbWQvc3lzdGVtL2RvY2tlci5zZXJ2aWNlLmQvaHR0cF9wcm94eS5jb25mCgpET0NLRVJfSFRUUFNfUFJPWFlfQ09ORj0vZXRjL3N5c3RlbWQvc3lzdGVtL2RvY2tlci5zZXJ2aWNlLmQvaHR0cHNfcHJveHkuY29uZgoKRE9DS0VSX05PX1BST1hZX0NPTkY9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9kb2NrZXIuc2VydmljZS5kL25vX3Byb3h5LmNvbmYKCkRPQ0tFUl9SRVNUQVJUPTAKCkJBU0hfUkM9L2V0Yy9iYXNocmMKCm1rZGlyIC1wIC9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZAoKaWYgWyAtbiAiJEhUVFBfUFJPWFkiIF07IHRoZW4KICAgIGNhdCA8PEVPRiB8IHNlZCAicy9eICovLyIgPiAkRE9DS0VSX0hUVFBfUFJPWFlfQ09ORgogICAgW1NlcnZpY2VdCiAgICBFbnZpcm9ubWVudD1IVFRQX1BST1hZPSRIVFRQX1BST1hZCkVPRgoKICAgIERPQ0tFUl9SRVNUQVJUPTEKCiAgICBpZiBbIC1mICIkQkFTSF9SQyIgXTsgdGhlbgogICAgICAgIGVjaG8gImRlY2xhcmUgLXggaHR0cF9wcm94eT0kSFRUUF9QUk9YWSIgPj4gJEJBU0hfUkMKICAgIGVsc2UKICAgICAgICBlY2hvICJGaWxlICRCQVNIX1JDIGRvZXMgbm90IGV4aXN0LCBub3Qgc2V0dGluZyBodHRwX3Byb3h5IgogICAgZmkKZmkKCmlmIFsgLW4gIiRIVFRQU19QUk9YWSIgXTsgdGhlbgogICAgY2F0IDw8RU9GIHwgc2VkICJzL14gKi8vIiA+ICRET0NLRVJfSFRUUFNfUFJPWFlfQ09ORgogICAgW1NlcnZpY2VdCiAgICBFbnZpcm9ubWVudD1IVFRQU19QUk9YWT0kSFRUUFNfUFJPWFkKRU9GCgogICAgRE9DS0VSX1JFU1RBUlQ9MQoKICAgIGlmIFsgLWYgIiRCQVNIX1JDIiBdOyB0aGVuCiAgICAgICAgZWNobyAiZGVjbGFyZSAteCBodHRwc19wcm94eT0kSFRUUFNfUFJPWFkiID4+ICRCQVNIX1JDCiAgICBlbHNlCiAgICAgICAgZWNobyAiRmlsZSAkQkFTSF9SQyBkb2VzIG5vdCBleGlzdCwgbm90IHNldHRpbmcgaHR0cHNfcHJveHkiCiAgICBmaQpmaQoKaWYgWyAtbiAiJE5PX1BST1hZIiBdOyB0aGVuCiAgICBjYXQgPDxFT0YgfCBzZWQgInMvXiAqLy8iID4gJERPQ0tFUl9OT19QUk9YWV9DT05GCiAgICBbU2VydmljZV0KICAgIEVudmlyb25tZW50PU5PX1BST1hZPSROT19QUk9YWQpFT0YKCiAgICBET0NLRVJfUkVTVEFSVD0xCgogICAgaWYgWyAtZiAiJEJBU0hfUkMiIF07IHRoZW4KICAgICAgICBlY2hvICJkZWNsYXJlIC14IG5vX3Byb3h5PSROT19QUk9YWSIgPj4gJEJBU0hfUkMKICAgIGVsc2UKICAgICAgICBlY2hvICJGaWxlICRCQVNIX1JDIGRvZXMgbm90IGV4aXN0LCBub3Qgc2V0dGluZyBub19wcm94eSIKICAgIGZpCmZpCgppZiBbICIkRE9DS0VSX1JFU1RBUlQiIC1lcSAxIF07IHRoZW4KICAgIHN5c3RlbWN0bCBkYWVtb24tcmVsb2FkCiAgICBzeXN0ZW1jdGwgLS1uby1ibG9jayByZXN0YXJ0IGRvY2tlci5zZXJ2aWNlCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCiMgbWFrZSBzdXJlIHdlIHBpY2sgdXAgYW55IG1vZGlmaWVkIHVuaXQgZmlsZXMKc3lzdGVtY3RsIGRhZW1vbi1yZWxvYWQKCmVjaG8gInN0YXJ0aW5nIHNlcnZpY2VzIgpmb3Igc2VydmljZSBpbiBldGNkIGRvY2tlciBrdWJlLWFwaXNlcnZlciBrdWJlbGV0OyBkbwogICAgZWNobyAiYWN0aXZhdGluZyBzZXJ2aWNlICRzZXJ2aWNlIgogICAgc3lzdGVtY3RsIGVuYWJsZSAkc2VydmljZQogICAgc3lzdGVtY3RsIC0tbm8tYmxvY2sgc3RhcnQgJHNlcnZpY2UKZG9uZQoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbICIkTkVUV09SS19EUklWRVIiICE9ICJmbGFubmVsIiBdOyB0aGVuCiAgICBleGl0IDAKZmkKCi4gL2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCkZMQU5ORUxfSlNPTj0vZXRjL3N5c2NvbmZpZy9mbGFubmVsLW5ldHdvcmsuanNvbgpGTEFOTkVMRF9DT05GSUc9L2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCnNlZCAtaSAnCiAgICAvXkZMQU5ORUxfRVRDRD0vIHMvPS4qLz0iaHR0cDpcL1wvMTI3LjAuMC4xOjIzNzkiLwonIC9ldGMvc3lzY29uZmlnL2ZsYW5uZWxkCgojIEdlbmVyYXRlIGEgZmxhbm5lbCBjb25maWd1cmF0aW9uIHRoYXQgd2Ugd2lsbAojIHN0b3JlIGludG8gZXRjZCB1c2luZyBjdXJsLgpjYXQgPiAkRkxBTk5FTF9KU09OIDw8RU9GCnsKICAiTmV0d29yayI6ICIkRkxBTk5FTF9ORVRXT1JLX0NJRFIiLAogICJTdWJuZXRsZW4iOiAkRkxBTk5FTF9ORVRXT1JLX1NVQk5FVExFTiwKICAiQmFja2VuZCI6IHsKICAgICJUeXBlIjogIiRGTEFOTkVMX0JBQ0tFTkQiCiAgfQp9CkVPRgoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbICIkTkVUV09SS19EUklWRVIiICE9ICJmbGFubmVsIiBdOyB0aGVuCiAgICBleGl0IDAKZmkKQ0VSVF9ESVI9L3Nydi9rdWJlcm5ldGVzClBST1RPQ09MPWh0dHBzCkZMQU5ORUxfT1BUSU9OUz0iLWV0Y2QtY2FmaWxlICRDRVJUX0RJUi9jYS5jcnQgXAotZXRjZC1jZXJ0ZmlsZSAkQ0VSVF9ESVIvc2VydmVyLmNydCBcCi1ldGNkLWtleWZpbGUgJENFUlRfRElSL3NlcnZlci5rZXkiCkVUQ0RfQ1VSTF9PUFRJT05TPSItLWNhY2VydCAkQ0VSVF9ESVIvY2EuY3J0IFwKLS1jZXJ0ICRDRVJUX0RJUi9zZXJ2ZXIuY3J0IC0ta2V5ICRDRVJUX0RJUi9zZXJ2ZXIua2V5IgpGTEFOTkVMRF9DT05GSUc9L2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCmlmIFsgIiRUTFNfRElTQUJMRUQiID0gIlRydWUiIF07IHRoZW4KICAgIFBST1RPQ09MPWh0dHAKICAgIEZMQU5ORUxfT1BUSU9OUz0iIgogICAgRVRDRF9DVVJMX09QVElPTlM9IiIKZmkKCnNlZCAtaSAnL0ZMQU5ORUxfT1BUSU9OUy8nZCAkRkxBTk5FTERfQ09ORklHCgpjYXQgPj4gJEZMQU5ORUxEX0NPTkZJRyA8PEVPRgpGTEFOTkVMX09QVElPTlM9IiRGTEFOTkVMX09QVElPTlMiCkVPRgoKLiAkRkxBTk5FTERfQ09ORklHCgpGTEFOTkVMX0NPTkZJR19CSU49L3Vzci9sb2NhbC9iaW4vZmxhbm5lbC1jb25maWcKRkxBTk5FTF9DT05GSUdfU0VSVklDRT0vZXRjL3N5c3RlbWQvc3lzdGVtL2ZsYW5uZWwtY29uZmlnLnNlcnZpY2UKRkxBTk5FTF9KU09OPS9ldGMvc3lzY29uZmlnL2ZsYW5uZWwtbmV0d29yay5qc29uCgplY2hvICJjcmVhdGluZyAkRkxBTk5FTF9DT05GSUdfQklOIgpjYXQgPiAkRkxBTk5FTF9DT05GSUdfQklOIDw8RU9GCiMhL2Jpbi9zaAoKaWYgISBbIC1mICIkRkxBTk5FTF9KU09OIiBdOyB0aGVuCiAgZWNobyAiRVJST1I6IG1pc3NpbmcgbmV0d29yayBjb25maWd1cmF0aW9uIGZpbGUiID4mMgogIGV4aXQgMQpmaQoKaWYgISBbICIkRkxBTk5FTF9FVENEIiBdICYmIFsgIiRGTEFOTkVMX0VUQ0RfS0VZIiBdOyB0aGVuCiAgZWNobyAiRVJST1I6IG1pc3NpbmcgcmVxdWlyZWQgY29uZmlndXJhdGlvbiIgPiYyCiAgZXhpdCAxCmZpCgplY2hvICJjcmVhdGluZyBmbGFubmVsZCBjb25maWcgaW4gZXRjZCIKd2hpbGUgISBjdXJsIC1zZiAtTCAkRVRDRF9DVVJMX09QVElPTlMgXAogICAgICAgICRGTEFOTkVMX0VUQ0QvdjIva2V5cyR7RkxBTk5FTF9FVENEX0tFWX0vY29uZmlnIFwKICAgICAgICAtWCBQVVQgLS1kYXRhLXVybGVuY29kZSB2YWx1ZUAke0ZMQU5ORUxfSlNPTn07IGRvCiAgICBlY2hvICJ3YWl0aW5nIGZvciBldGNkIgogICAgc2xlZXAgMQpkb25lCkVPRgoKY2F0ID4gJEZMQU5ORUxfQ09ORklHX1NFUlZJQ0UgPDxFT0YKW1VuaXRdCkFmdGVyPWV0Y2Quc2VydmljZQpSZXF1aXJlcz1ldGNkLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnRGaWxlPS9ldGMvc3lzY29uZmlnL2ZsYW5uZWxkCkV4ZWNTdGFydD0kRkxBTk5FTF9DT05GSUdfQklOCgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCgpjaG93biByb290OnJvb3QgJEZMQU5ORUxfQ09ORklHX0JJTgpjaG1vZCAwNzU1ICRGTEFOTkVMX0NPTkZJR19CSU4KCmNob3duIHJvb3Q6cm9vdCAkRkxBTk5FTF9DT05GSUdfU0VSVklDRQpjaG1vZCAwNjQ0ICRGTEFOTkVMX0NPTkZJR19TRVJWSUNFCgpzeXN0ZW1jdGwgZW5hYmxlIGZsYW5uZWwtY29uZmlnCnN5c3RlbWN0bCBzdGFydCAtLW5vLWJsb2NrIGZsYW5uZWwtY29uZmlnCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgIiRORVRXT1JLX0RSSVZFUiIgIT0gImZsYW5uZWwiIF07IHRoZW4KICAgIGV4aXQgMApmaQoKRkxBTk5FTF9ET0NLRVJfQlJJREdFX0JJTj0vdXNyL2xvY2FsL2Jpbi9mbGFubmVsLWRvY2tlci1icmlkZ2UKRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9mbGFubmVsLWRvY2tlci1icmlkZ2Uuc2VydmljZQpET0NLRVJfRkxBTk5FTF9DT05GPS9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZC9mbGFubmVsLmNvbmYKRkxBTk5FTF9ET0NLRVJfQlJJREdFX0NPTkY9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9mbGFubmVsZC5zZXJ2aWNlLmQvZmxhbm5lbC1kb2NrZXItYnJpZGdlLmNvbmYKCm1rZGlyIC1wIC9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZApta2RpciAtcCAvZXRjL3N5c3RlbWQvc3lzdGVtL2ZsYW5uZWxkLnNlcnZpY2UuZAoKY2F0ID4+ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQklOIDw8RU9GMQojIS9iaW4vc2gKCmlmICEgWyAiXCRGTEFOTkVMX1NVQk5FVCIgXSAmJiBbICJcJEZMQU5ORUxfTVRVIiBdIDsgdGhlbgogIGVjaG8gIkVSUk9SOiBtaXNzaW5nIHJlcXVpcmVkIGVudmlyb25tZW50IHZhcmlhYmxlcy4iID4mMgogIGV4aXQgMQpmaQoKbWtkaXIgLXAgL3J1bi9mbGFubmVsLwpjYXQgPiAvcnVuL2ZsYW5uZWwvZG9ja2VyIDw8RU9GMgpET0NLRVJfTkVUV09SS19PUFRJT05TPSItLWJpcD1cJEZMQU5ORUxfU1VCTkVUIC0tbXR1PVwkRkxBTk5FTF9NVFUiCkVPRjIKRU9GMQoKY2hvd24gcm9vdDpyb290ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQklOCmNobW9kIDA3NTUgJEZMQU5ORUxfRE9DS0VSX0JSSURHRV9CSU4KCmNhdCA+PiAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UgPDxFT0YKW1VuaXRdCkFmdGVyPWZsYW5uZWxkLnNlcnZpY2UKQmVmb3JlPWRvY2tlci5zZXJ2aWNlClJlcXVpcmVzPWZsYW5uZWxkLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnRGaWxlPS9ydW4vZmxhbm5lbC9zdWJuZXQuZW52CkV4ZWNTdGFydD0vdXNyL2xvY2FsL2Jpbi9mbGFubmVsLWRvY2tlci1icmlkZ2UKCltJbnN0YWxsXQpXYW50ZWRCeT1kb2NrZXIuc2VydmljZQpFT0YKCmNob3duIHJvb3Q6cm9vdCAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UKY2htb2QgMDY0NCAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UKCmNhdCA+PiAkRE9DS0VSX0ZMQU5ORUxfQ09ORiA8PEVPRgpbVW5pdF0KUmVxdWlyZXM9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKQWZ0ZXI9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKCltTZXJ2aWNlXQpFbnZpcm9ubWVudEZpbGU9L3J1bi9mbGFubmVsL2RvY2tlcgpFT0YKCmNob3duIHJvb3Q6cm9vdCAkRE9DS0VSX0ZMQU5ORUxfQ09ORgpjaG1vZCAwNjQ0ICRET0NLRVJfRkxBTk5FTF9DT05GCgpjYXQgPj4gJEZMQU5ORUxfRE9DS0VSX0JSSURHRV9DT05GIDw8RU9GCltVbml0XQpSZXF1aXJlcz1mbGFubmVsLWRvY2tlci1icmlkZ2Uuc2VydmljZQpCZWZvcmU9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKCltJbnN0YWxsXQpBbHNvPWZsYW5uZWwtZG9ja2VyLWJyaWRnZS5zZXJ2aWNlCkVPRgoKY2hvd24gcm9vdDpyb290ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQ09ORgpjaG1vZCAwNjQ0ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQ09ORgoKZWNobyAiYWN0aXZhdGluZyBzZXJ2aWNlIGZsYW5uZWxkIgpzeXN0ZW1jdGwgZW5hYmxlIGZsYW5uZWxkCnN5c3RlbWN0bCAtLW5vLWJsb2NrIHN0YXJ0IGZsYW5uZWxkCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCiMgdGhpcyBzZXJ2aWNlIHJlcXVpcmVkIGJlY2F1c2UgZG9ja2VyIHdpbGwgc3RhcnQgb25seSBhZnRlciBjbG91ZCBpbml0IHdhcyBmaW5pc2hlZAojIGR1ZSBzZXJ2aWNlIGRlcGVuZGVuY2llcyBhdCBGZWRvcmEgQXRvbWljIChkb2NrZXIgPC0gZG9ja2VyLXN0b3JhZ2Utc2V0dXAgPC0gY2xvdWQtZmluYWwpCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgpLVUJFX1NZU1RFTV9KU09OPS9zcnYva3ViZXJuZXRlcy9rdWJlLXN5c3RlbS1uYW1lc3BhY2UuanNvbgpbIC1mICR7S1VCRV9TWVNURU1fSlNPTn0gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1NZU1RFTV9KU09OIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fSlNPTn0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1NZU1RFTV9KU09OfQp7CiAgImFwaVZlcnNpb24iOiAidjEiLAogICJraW5kIjogIk5hbWVzcGFjZSIsCiAgIm1ldGFkYXRhIjogewogICAgIm5hbWUiOiAia3ViZS1zeXN0ZW0iCiAgfQp9CkVPRgp9CgpLVUJFX1NZU1RFTV9CSU49L3Vzci9sb2NhbC9iaW4va3ViZS1zeXN0ZW0tbmFtZXNwYWNlClsgLWYgJHtLVUJFX1NZU1RFTV9CSU59IF0gfHwgewogICAgZWNobyAiV3JpdGluZyBGaWxlOiAkS1VCRV9TWVNURU1fQklOIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fQklOfSkKICAgIGNhdCA8PCBFT0YgPiAke0tVQkVfU1lTVEVNX0JJTn0KIyEvYmluL3NoCnVudGlsIGN1cmwgLXNmICJodHRwOi8vMTI3LjAuMC4xOjgwODAvaGVhbHRoeiIKZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCgojY2hlY2sgZm9yIGV4aXN0ZW5jZSBvZiBuYW1lc3BhY2UKL3Vzci9iaW4va3ViZWN0bCBnZXQgbmFtZXNwYWNlIGt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMva3ViZS1zeXN0ZW0tbmFtZXNwYWNlLmpzb24KZmkKRU9GCn0KCktVQkVfU1lTVEVNX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9rdWJlLXN5c3RlbS1uYW1lc3BhY2Uuc2VydmljZQpbIC1mICR7S1VCRV9TWVNURU1fU0VSVklDRX0gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1NZU1RFTV9TRVJWSUNFIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fU0VSVklDRX0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1NZU1RFTV9TRVJWSUNFfQpbVW5pdF0KQWZ0ZXI9a3ViZWxldC5zZXJ2aWNlClJlcXVpcmVzPWt1YmVsZXQuc2VydmljZQoKW1NlcnZpY2VdClR5cGU9b25lc2hvdApFbnZpcm9ubWVudD1IT01FPS9yb290CkVudmlyb25tZW50RmlsZT0tL2V0Yy9rdWJlcm5ldGVzL2NvbmZpZwpFeGVjU3RhcnQ9JHtLVUJFX1NZU1RFTV9CSU59CgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfU1lTVEVNX0JJTn0KY2htb2QgMDc1NSAke0tVQkVfU1lTVEVNX0JJTn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfU1lTVEVNX1NFUlZJQ0V9CmNobW9kIDA2NDQgJHtLVUJFX1NZU1RFTV9TRVJWSUNFfQoKc3lzdGVtY3RsIGVuYWJsZSBrdWJlLXN5c3RlbS1uYW1lc3BhY2UKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sga3ViZS1zeXN0ZW0tbmFtZXNwYWNlCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLW4gIiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfSIgXTsgdGhlbgogICAgSFlQRVJLVUJFX0lNQUdFPSIke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0vZ29vZ2xlX2NvbnRhaW5lcnMvaHlwZXJrdWJlOiR7S1VCRV9WRVJTSU9OfSIKZWxzZQogICAgSFlQRVJLVUJFX0lNQUdFPSJnY3IuaW8vZ29vZ2xlX2NvbnRhaW5lcnMvaHlwZXJrdWJlOiR7S1VCRV9WRVJTSU9OfSIKZmkKCiMgdmFycyBhbHNvIHVzZWQgYnkgdGhlIEt1YmVybmV0ZXMgY29uZmlnIGZpbGVzCnVuc2V0IEtVQkVfQVBJX1BPUlQKdW5zZXQgS1VCRV9BTExPV19QUklWCgojIHRoaXMgZnVuY3Rpb24gZ2VuZXJhdGUgYSBsaXN0IG9mIGFyZ3MgKG9uZSBwZXIgbGluZSkgZnJvbSBhIGxpc3Qgb2YgcG9zc2libHkgbmVzdGVkIGFyZ3MKIyB0aGUgZmlyc3QgcGFyYW1ldGVyIGlzIHRoZSBwcmVmaXggdG8gYmUgYWRkZWQgYmVmb3JlIGVhY2ggYXJnCiMgZW1wdHkgYXJncyBhcmUgaWdub3JlZApnZW5lcmF0ZV9wb2RfYXJncygpIHsKICAgIHByZWZpeD0kMQoKICAgIGZvciB2YXIgaW4gIiR7QDoyfSIgOyBkbwogICAgICAgIGZvciBhcmcgaW4gIiR2YXIiIDsgZG8KICAgICAgICAgICAgZWNobyAiJHByZWZpeCRhcmciCiAgICAgICAgZG9uZQogICAgZG9uZQp9CgoKaW5pdF90ZW1wbGF0ZXMgKCkgewogICAgLiAvZXRjL2t1YmVybmV0ZXMvY29uZmlnCgogICAgLiAvZXRjL2t1YmVybmV0ZXMvY29udHJvbGxlci1tYW5hZ2VyCgogICAgbG9jYWwgVEVNUExBVEU9L2V0Yy9rdWJlcm5ldGVzL21hbmlmZXN0cy9rdWJlLWNvbnRyb2xsZXItbWFuYWdlci55YW1sCiAgICBbIC1mICR7VEVNUExBVEV9IF0gfHwgewogICAgICAgIGVjaG8gIlRFTVBMQVRFOiAkVEVNUExBVEUiCiAgICAgICAgbWtkaXIgLXAgJChkaXJuYW1lICR7VEVNUExBVEV9KQogICAgICAgIGNhdCA8PCBFT0YgPiAke1RFTVBMQVRFfQphcGlWZXJzaW9uOiB2MQpraW5kOiBQb2QKbWV0YWRhdGE6CiAgbmFtZToga3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICAgIGltYWdlOiAke0hZUEVSS1VCRV9JTUFHRX0KICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gY29udHJvbGxlci1tYW5hZ2VyCiAgICAtIC0tbGVhZGVyLWVsZWN0PXRydWUKJChnZW5lcmF0ZV9wb2RfYXJncyAiICAgIC0gIiAkS1VCRV9MT0dUT1NUREVSUiAkS1VCRV9MT0dfTEVWRUwgJEtVQkVfTUFTVEVSICRLVUJFX0NPTlRST0xMRVJfTUFOQUdFUl9BUkdTKQogICAgbGl2ZW5lc3NQcm9iZToKICAgICAgaHR0cEdldDoKICAgICAgICBob3N0OiAxMjcuMC4wLjEKICAgICAgICBwYXRoOiAvaGVhbHRoegogICAgICAgIHBvcnQ6IDEwMjUyCiAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDE1CiAgICAgIHRpbWVvdXRTZWNvbmRzOiAxCiAgICB2b2x1bWVNb3VudHM6CiAgICAtIG1vdW50UGF0aDogL2V0Yy9zc2wvY2VydHMKICAgICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAgICAgcmVhZE9ubHk6IHRydWUKICAgIC0gbW91bnRQYXRoOiAvc3J2L2t1YmVybmV0ZXMKICAgICAgbmFtZToga3ViZXJuZXRlcy1jb25maWcKICAgICAgcmVhZE9ubHk6IHRydWUKICAgIC0gbW91bnRQYXRoOiAvZXRjL3N5c2NvbmZpZwogICAgICBuYW1lOiBzeXNjb25maWcKICAgICAgcmVhZE9ubHk6IHRydWUKICB2b2x1bWVzOgogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC9ldGMvc3NsL2NlcnRzCiAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC9zcnYva3ViZXJuZXRlcwogICAgbmFtZToga3ViZXJuZXRlcy1jb25maWcKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvZXRjL3N5c2NvbmZpZwogICAgbmFtZTogc3lzY29uZmlnCkVPRgogICAgfQoKICAgIC4gL2V0Yy9rdWJlcm5ldGVzL3NjaGVkdWxlcgoKICAgIGxvY2FsIFRFTVBMQVRFPS9ldGMva3ViZXJuZXRlcy9tYW5pZmVzdHMva3ViZS1zY2hlZHVsZXIueWFtbAogICAgWyAtZiAke1RFTVBMQVRFfSBdIHx8IHsKICAgICAgICBlY2hvICJURU1QTEFURTogJFRFTVBMQVRFIgogICAgICAgIG1rZGlyIC1wICQoZGlybmFtZSAke1RFTVBMQVRFfSkKICAgICAgICBjYXQgPDwgRU9GID4gJHtURU1QTEFURX0KYXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgICBpbWFnZTogJHtIWVBFUktVQkVfSU1BR0V9CiAgICBjb21tYW5kOgogICAgLSAvaHlwZXJrdWJlCiAgICAtIHNjaGVkdWxlcgogICAgLSAtLWxlYWRlci1lbGVjdD10cnVlCiQoZ2VuZXJhdGVfcG9kX2FyZ3MgIiAgICAtICIgJEtVQkVfTE9HVE9TVERFUlIgJEtVQkVfTE9HX0xFVkVMICRLVUJFX01BU1RFUiAkS1VCRV9TQ0hFRFVMRVJfQVJHUykKICAgIGxpdmVuZXNzUHJvYmU6CiAgICAgIGh0dHBHZXQ6CiAgICAgICAgaG9zdDogMTI3LjAuMC4xCiAgICAgICAgcGF0aDogL2hlYWx0aHoKICAgICAgICBwb3J0OiAxMDI1MQogICAgICBpbml0aWFsRGVsYXlTZWNvbmRzOiAxNQogICAgICB0aW1lb3V0U2Vjb25kczogMQogICAgdm9sdW1lTW91bnRzOgogICAgLSBtb3VudFBhdGg6IC9ldGMvc3NsL2NlcnRzCiAgICAgIG5hbWU6IHNzbC1jZXJ0cy1ob3N0CiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAtIG1vdW50UGF0aDogL3Nydi9rdWJlcm5ldGVzCiAgICAgIG5hbWU6IGt1YmVybmV0ZXMtY29uZmlnCiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAtIG1vdW50UGF0aDogL2V0Yy9zeXNjb25maWcKICAgICAgbmFtZTogc3lzY29uZmlnCiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgdm9sdW1lczoKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvc3J2L2t1YmVybmV0ZXMKICAgIG5hbWU6IGt1YmVybmV0ZXMtY29uZmlnCiAgLSBob3N0UGF0aDoKICAgICAgcGF0aDogL2V0Yy9zeXNjb25maWcKICAgIG5hbWU6IHN5c2NvbmZpZwpFT0YKICAgIH0KfQoKaW5pdF90ZW1wbGF0ZXMKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKaWYgWyAtbiAiJHtJTlNFQ1VSRV9SRUdJU1RSWV9VUkx9IiBdOyB0aGVuCiAgICBIWVBFUktVQkVfSU1BR0U9IiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfS9nb29nbGVfY29udGFpbmVycy9oeXBlcmt1YmU6JHtLVUJFX1ZFUlNJT059IgplbHNlCiAgICBIWVBFUktVQkVfSU1BR0U9Imdjci5pby9nb29nbGVfY29udGFpbmVycy9oeXBlcmt1YmU6JHtLVUJFX1ZFUlNJT059IgpmaQoKaW5pdF90ZW1wbGF0ZXMgKCkgewogICAgbG9jYWwgVEVNUExBVEU9L2V0Yy9rdWJlcm5ldGVzL21hbmlmZXN0cy9rdWJlLXByb3h5LnlhbWwKICAgIFsgLWYgJHtURU1QTEFURX0gXSB8fCB7CiAgICAgICAgZWNobyAiVEVNUExBVEU6ICRURU1QTEFURSIKICAgICAgICBta2RpciAtcCAkKGRpcm5hbWUgJHtURU1QTEFURX0pCiAgICAgICAgY2F0IDw8IEVPRiA+ICR7VEVNUExBVEV9CmFwaVZlcnNpb246IHYxCmtpbmQ6IFBvZAptZXRhZGF0YToKICBuYW1lOiBrdWJlLXByb3h5CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtcHJveHkKICAgIGltYWdlOiAke0hZUEVSS1VCRV9JTUFHRX0KICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1tYXN0ZXI9aHR0cDovLzEyNy4wLjAuMTo4MDgwCiAgICAtIC0tbG9ndG9zdGRlcnI9dHJ1ZQogICAgLSAtLXY9MAogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCkVPRgogICAgfQp9Cgppbml0X3RlbXBsYXRlcwoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgojIHRoaXMgc2VydmljZSBpcyByZXF1aXJlZCBiZWNhdXNlIGRvY2tlciB3aWxsIHN0YXJ0IG9ubHkgYWZ0ZXIgY2xvdWQgaW5pdCB3YXMgZmluaXNoZWQKIyBkdWUgdG8gdGhlIHNlcnZpY2UgZGVwZW5kZW5jaWVzIGluIEZlZG9yYSBBdG9taWMgKGRvY2tlciA8LSBkb2NrZXItc3RvcmFnZS1zZXR1cCA8LSBjbG91ZC1maW5hbCkKCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbIC1uICIke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0iIF07IHRoZW4KICAgIEtVQkVVSV9JTUFHRT0iJHtJTlNFQ1VSRV9SRUdJU1RSWV9VUkx9L2dvb2dsZV9jb250YWluZXJzL2t1YmUtdWk6djQiCmVsc2UKICAgIEtVQkVVSV9JTUFHRT0iZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2t1YmUtdWk6djQiCmZpCgpLVUJFX1VJX1JDPS9zcnYva3ViZXJuZXRlcy9tYW5pZmVzdHMva3ViZS11aS1yYy55YW1sCgpbIC1mICR7S1VCRV9VSV9SQ30gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1VJX1JDIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9VSV9SQ30pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX1JDfQphcGlWZXJzaW9uOiB2MQpraW5kOiBSZXBsaWNhdGlvbkNvbnRyb2xsZXIKbWV0YWRhdGE6CiAgbmFtZToga3ViZS11aS12NAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBsYWJlbHM6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICB2ZXJzaW9uOiB2NAogICAga3ViZXJuZXRlcy5pby9jbHVzdGVyLXNlcnZpY2U6ICJ0cnVlIgpzcGVjOgogIHJlcGxpY2FzOiAxCiAgc2VsZWN0b3I6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICB2ZXJzaW9uOiB2NAogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICAgICAgdmVyc2lvbjogdjQKICAgICAgICBrdWJlcm5ldGVzLmlvL2NsdXN0ZXItc2VydmljZTogInRydWUiCiAgICBzcGVjOgogICAgICBjb250YWluZXJzOgogICAgICAtIG5hbWU6IGt1YmUtdWkKICAgICAgICBpbWFnZTogJHtLVUJFVUlfSU1BR0V9CiAgICAgICAgcmVzb3VyY2VzOgogICAgICAgICAgbGltaXRzOgogICAgICAgICAgICBjcHU6IDEwMG0KICAgICAgICAgICAgbWVtb3J5OiA1ME1pCiAgICAgICAgcG9ydHM6CiAgICAgICAgLSBjb250YWluZXJQb3J0OiA4MDgwCkVPRgp9CgpLVUJFX1VJX1NWQz0vc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktc3ZjLnlhbWwKWyAtZiAke0tVQkVfVUlfU1ZDfSBdIHx8IHsKICAgIGVjaG8gIldyaXRpbmcgRmlsZTogJEtVQkVfVUlfU1ZDIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9VSV9TVkN9KQogICAgY2F0IDw8IEVPRiA+ICR7S1VCRV9VSV9TVkN9CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2UKbWV0YWRhdGE6CiAgbmFtZToga3ViZS11aQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBsYWJlbHM6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICBrdWJlcm5ldGVzLmlvL2NsdXN0ZXItc2VydmljZTogInRydWUiCiAgICBrdWJlcm5ldGVzLmlvL25hbWU6ICJLdWJlVUkiCnNwZWM6CiAgc2VsZWN0b3I6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgcG9ydHM6CiAgLSBwb3J0OiA4MAogICAgdGFyZ2V0UG9ydDogODA4MApFT0YKfQoKS1VCRV9VSV9CSU49L3Vzci9sb2NhbC9iaW4va3ViZS11aQpbIC1mICR7S1VCRV9VSV9CSU59IF0gfHwgewogICAgZWNobyAiV3JpdGluZyBGaWxlOiAkS1VCRV9VSV9CSU4iCiAgICBta2RpciAtcCAkKGRpcm5hbWUgJHtLVUJFX1VJX0JJTn0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX0JJTn0KIyEvYmluL3NoCnVudGlsIGN1cmwgLXNmICJodHRwOi8vMTI3LjAuMC4xOjgwODAvaGVhbHRoeiIKZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCgojZWNobyBjaGVjayBmb3IgZXhpc3RlbmNlIG9mIGt1YmUtdWktdjQgcmVwbGljYXRpb24gY29udHJvbGxlcgovdXNyL2Jpbi9rdWJlY3RsIGdldCByYyBrdWJlLXVpLXY0IC0tbmFtZXNwYWNlPWt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktcmMueWFtbCAtLW5hbWVzcGFjZT1rdWJlLXN5c3RlbQpmaQoKI2VjaG8gY2hlY2sgZm9yIGV4aXN0ZW5jZSBvZiBrdWJlLXVpIHNlcnZpY2UKL3Vzci9iaW4va3ViZWN0bCBnZXQgc2VydmljZSBrdWJlLXVpIC0tbmFtZXNwYWNlPWt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktc3ZjLnlhbWwgLS1uYW1lc3BhY2U9a3ViZS1zeXN0ZW0KZmkKRU9GCn0KCktVQkVfVUlfU0VSVklDRT0vZXRjL3N5c3RlbWQvc3lzdGVtL2t1YmUtdWkuc2VydmljZQpbIC1mICR7S1VCRV9VSV9TRVJWSUNFfSBdIHx8IHsKICAgIGVjaG8gIldyaXRpbmcgRmlsZTogJEtVQkVfVUlfU0VSVklDRSIKICAgIG1rZGlyIC1wICQoZGlybmFtZSAke0tVQkVfVUlfU0VSVklDRX0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX1NFUlZJQ0V9CltVbml0XQpBZnRlcj1rdWJlLXN5c3RlbS1uYW1lc3BhY2Uuc2VydmljZQpSZXF1aXJlcz1rdWJlbGV0LnNlcnZpY2UKV2FudHM9a3ViZS1zeXN0ZW0tbmFtZXNwYWNlLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnQ9SE9NRT0vcm9vdApFbnZpcm9ubWVudEZpbGU9LS9ldGMva3ViZXJuZXRlcy9jb25maWcKRXhlY1N0YXJ0PSR7S1VCRV9VSV9CSU59CgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfVUlfQklOfQpjaG1vZCAwNzU1ICR7S1VCRV9VSV9CSU59CgpjaG93biByb290OnJvb3QgJHtLVUJFX1VJX1NFUlZJQ0V9CmNobW9kIDA2NDQgJHtLVUJFX1VJX1NFUlZJQ0V9CgpzeXN0ZW1jdGwgZW5hYmxlIGt1YmUtdWkKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sga3ViZS11aQoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKI2Nsb3VkLWNvbmZpZwptZXJnZV9ob3c6IGRpY3QocmVjdXJzZV9hcnJheSkrbGlzdChhcHBlbmQpCndyaXRlX2ZpbGVzOgogIC0gcGF0aDogL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3JlcGxpY2F0aW9uLWNvbnRyb2xsZXIueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFJlcGxpY2F0aW9uQ29udHJvbGxlcgogICAgICBtZXRhZGF0YToKICAgICAgICBuYW1lOiBuZ2lueC1jb250cm9sbGVyCiAgICAgIHNwZWM6CiAgICAgICAgcmVwbGljYXM6IDIKICAgICAgICAjIHNlbGVjdG9yIGlkZW50aWZpZXMgdGhlIHNldCBvZiBwb2RzIHRoYXQgdGhpcwogICAgICAgICMgcmVwbGljYXRpb24gY29udHJvbGxlciBpcyByZXNwb25zaWJsZSBmb3IgbWFuYWdpbmcKICAgICAgICBzZWxlY3RvcjoKICAgICAgICAgIG5hbWU6IG5naW54CiAgICAgICAgIyB0ZW1wbGF0ZSBkZWZpbmVzIHRoZSAnY29va2llIGN1dHRlcicgdXNlZCBmb3IgY3JlYXRpbmcKICAgICAgICAjIG5ldyBwb2RzIHdoZW4gbmVjZXNzYXJ5CiAgICAgICAgdGVtcGxhdGU6CiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgbGFiZWxzOgogICAgICAgICAgICAgICMgSW1wb3J0YW50OiB0aGVzZSBsYWJlbHMgbmVlZCB0byBtYXRjaCB0aGUgc2VsZWN0b3IgYWJvdmUKICAgICAgICAgICAgICAjIFRoZSBhcGkgc2VydmVyIGVuZm9yY2VzIHRoaXMgY29uc3RyYWludC4KICAgICAgICAgICAgICBhcHA6IG5naW54CiAgICAgICAgICBzcGVjOgogICAgICAgICAgICBjb250YWluZXJzOgogICAgICAgICAgICAgIC0gbmFtZTogbmdpbngKICAgICAgICAgICAgICAgIGltYWdlOiBuZ2lueAogICAgICAgICAgICAgICAgcG9ydHM6CiAgICAgICAgICAgICAgICAgIC0gY29udGFpbmVyUG9ydDogODAKCiAgLSBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvcG9kLW5naW54LXdpdGgtbGFiZWwueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFBvZAogICAgICBtZXRhZGF0YToKICAgICAgICBuYW1lOiBuZ2lueAogICAgICAgIGxhYmVsczoKICAgICAgICAgIGFwcDogbmdpbngKICAgICAgc3BlYzoKICAgICAgICBjb250YWluZXJzOgogICAgICAgIC0gbmFtZTogbmdpbngKICAgICAgICAgIGltYWdlOiBuZ2lueAogICAgICAgICAgcG9ydHM6CiAgICAgICAgICAtIGNvbnRhaW5lclBvcnQ6IDgwCgogIC0gcGF0aDogL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3NlcnZpY2UueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFNlcnZpY2UKICAgICAgbWV0YWRhdGE6CiAgICAgICAgbmFtZTogbmdpbngtc2VydmljZQogICAgICBzcGVjOgogICAgICAgIHBvcnRzOgogICAgICAgIC0gcG9ydDogODAwMCAjIHRoZSBwb3J0IHRoYXQgdGhpcyBzZXJ2aWNlIHNob3VsZCBzZXJ2ZSBvbgogICAgICAgICAgIyB0aGUgY29udGFpbmVyIG9uIGVhY2ggcG9kIHRvIGNvbm5lY3QgdG8sIGNhbiBiZSBhIG5hbWUKICAgICAgICAgICMgKGUuZy4gJ3d3dycpIG9yIGEgbnVtYmVyIChlLmcuIDgwKQogICAgICAgICAgdGFyZ2V0UG9ydDogODAKICAgICAgICAgIHByb3RvY29sOiBUQ1AKICAgICAgICAjIGp1c3QgbGlrZSB0aGUgc2VsZWN0b3IgaW4gdGhlIHJlcGxpY2F0aW9uIGNvbnRyb2xsZXIsCiAgICAgICAgIyBidXQgdGhpcyB0aW1lIGl0IGlkZW50aWZpZXMgdGhlIHNldCBvZiBwb2RzIHRvIGxvYWQgYmFsYW5jZQogICAgICAgICMgdHJhZmZpYyB0by4KICAgICAgICBzZWxlY3RvcjoKICAgICAgICAgIGFwcDogbmdpbngKCiAgLSBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvUkVBRE1FLm1kCiAgICBvd25lcjogInJvb3Q6cm9vdCIKICAgIHBlcm1pc3Npb25zOiAiMDY0NCIKICAgIGNvbnRlbnQ6IHwKICAgICAgS3ViZXJuZXRlcyAxMDEgKGh0dHA6Ly9rdWJlcm5ldGVzLmlvL3YxLjAvZG9jcy91c2VyLWd1aWRlL3dhbGt0aHJvdWdoL1JFQURNRS5odG1sKQogICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgogICAgICBMaXN0IGFsbCBub2RlczoKCiAgICAgICAgICBrdWJlY3RsIGdldCBub2RlcwoKICAgICAgUmVwbGljYXRpb24gQ29udHJvbGxlcnM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3JlcGxpY2F0aW9uLWNvbnRyb2xsZXIueWFtbAogICAgICAgICAga3ViZWN0bCBnZXQgcmMKICAgICAgICAgIGt1YmVjdGwgZGVsZXRlIHJjIG5naW54LWNvbnRyb2xsZXIKCiAgICAgIFBvZHM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3BvZC1uZ2lueC13aXRoLWxhYmVsLnlhbWwKICAgICAgICAgIGt1YmVjdGwgZ2V0IHBvZHMKICAgICAgICAgIGN1cmwgaHR0cDovLyQoa3ViZWN0bCBnZXQgcG9kIG5naW54IC1vPXRlbXBsYXRlIC10PXt7LnN0YXR1cy5wb2RJUH19KQoKICAgICAgU2VydmljZXM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3NlcnZpY2UueWFtbAogICAgICAgICAga3ViZWN0bCBnZXQgc2VydmljZXMKCiAgICAgICAgICBleHBvcnQgU0VSVklDRV9JUD0kKGt1YmVjdGwgZ2V0IHNlcnZpY2Ugbmdpbngtc2VydmljZSAtbz10ZW1wbGF0ZSAtdD17ey5zcGVjLmNsdXN0ZXJJUH19KQogICAgICAgICAgZXhwb3J0IFNFUlZJQ0VfUE9SVD0kKGt1YmVjdGwgZ2V0IHNlcnZpY2Ugbmdpbngtc2VydmljZSAtbz10ZW1wbGF0ZSAnLXQ9e3soaW5kZXggLnNwZWMucG9ydHMgMCkucG9ydH19JykKICAgICAgICAgIGN1cmwgaHR0cDovLyR7U0VSVklDRV9JUH06JHtTRVJWSUNFX1BPUlR9CgogICAgICAgICAga3ViZWN0bCBkZWxldGUgc2VydmljZSBuZ2lueC1zZXJ2aWNlCgogICAgICBUcm91Ymxlc2hvb3Rpbmc6CgogICAgICAgICAga3ViZWN0bCBnZXQgZXZlbnRzCgogICAgICAgICAga3ViZWN0bCBkZXNjcmliZSByYyBuZ2lueC1jb250cm9sbGVyCgogICAgICAgICAga3ViZWN0bCBkZXNjcmliZSBwb2QgbmdpbngKCiAgICAgICAgICBrdWJlY3RsIGRlc2NyaWJlIHNlcnZpY2Ugbmdpbngtc2VydmljZQoKICAgICAgICAgIGt1YmVjdGwgZXhlYyBuZ2lueCBlbnYKCiAgICAgICAgICBrdWJlY3RsIGV4ZWMgLXRpIG5naW54IC0tIGJhc2gKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKV0NfTk9USUZZX0JJTj0vdXNyL2xvY2FsL2Jpbi93Yy1ub3RpZnkKV0NfTk9USUZZX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS93Yy1ub3RpZnkuc2VydmljZQoKY2F0ID4gJFdDX05PVElGWV9CSU4gPDxFT0YKIyEvYmluL2Jhc2ggLXYKdW50aWwgY3VybCAtc2YgImh0dHA6Ly8xMjcuMC4wLjE6ODA4MC9oZWFsdGh6IjsgZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCiRXQUlUX0NVUkwgLS1kYXRhLWJpbmFyeSAneyJzdGF0dXMiOiAiU1VDQ0VTUyJ9JwpFT0YKCmNhdCA+ICRXQ19OT1RJRllfU0VSVklDRSA8PEVPRgpbVW5pdF0KRGVzY3JpcHRpb249Tm90aWZ5IEhlYXQKQWZ0ZXI9ZG9ja2VyLnNlcnZpY2UgZXRjZC5zZXJ2aWNlClJlcXVpcmVzPWRvY2tlci5zZXJ2aWNlIGV0Y2Quc2VydmljZQpbU2VydmljZV0KVHlwZT1vbmVzaG90CkV4ZWNTdGFydD0kV0NfTk9USUZZX0JJTgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCgpjaG93biByb290OnJvb3QgJFdDX05PVElGWV9CSU4KY2htb2QgMDc1NSAkV0NfTk9USUZZX0JJTgoKY2hvd24gcm9vdDpyb290ICRXQ19OT1RJRllfU0VSVklDRQpjaG1vZCAwNjQ0ICRXQ19OT1RJRllfU0VSVklDRQoKc3lzdGVtY3RsIGVuYWJsZSB3Yy1ub3RpZnkKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sgd2Mtbm90aWZ5Ci0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09LS0K',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='building'), SecurityGroupList(objects=[SecurityGroup(UNKNOWN)]), BlockDeviceMappingList(objects=[BlockDeviceMapping(UNKNOWN)]), 1, 0, False)", 
                "name": "nova.compute.api.API.create_db_entry_for_new_instance", 
                "kwargs": "{'create_instance': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fa7afee7-6a63-44b7-805e-d4cd7d0cf1fc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c0c22a78-8722-4484-adfc-e91c011a3589": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "95a2a7a4-853c-49cc-9510-ac1ddce70d03": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1f21a916-9c74-4db5-85cb-e25445d56263": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "af086cba-bc1b-47b0-8e45-7e47f9d3e2b9": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "e9224245-2509-4d63-be8e-2e5115b39a31": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2f693287-b9c6-4866-8982-2df487d648d1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b711eded-e33b-4dee-a28a-1616cf2a759f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "64aefffe-f3be-4117-ae6b-33b4f06f87ab": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "879cf6bb-8e48-4b7a-b32a-25faaf4bb7a1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.serialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "100cfea6-9afd-4a29-8efd-0acc5e624183": {
            "function": {
                "args": "(<nova.scheduler.manager.SchedulerManager object at 0x7f52069556d0>, <nova.context.RequestContext object at 0x7f52062a4310>)", 
                "name": "nova.scheduler.manager.SchedulerManager.inner", 
                "kwargs": "{u'spec_obj': RequestSpec(availability_zone=None,flavor=Flavor(7),force_hosts=None,force_nodes=None,id=<?>,ignore_hosts=None,image=ImageMeta(63388f50-4450-4c85-8f3c-197af8f6f6cf),instance_group=None,instance_uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,limits=SchedulerLimits,num_instances=1,numa_topology=None,pci_requests=InstancePCIRequests,project_id='f789928a4f254f96965ff7f3dedd02be',requested_destination=None,retry=SchedulerRetries,scheduler_hints={},security_groups=<?>)}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "271a4d8f-68c7-4ca5-a401-5e2b7cd3f5b1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5d1d6ed6-383c-4802-8623-80f7ee218ca1": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": "allow_expired=1"
            }
        }, 
        "e76f7e4d-0dfd-455b-85cc-e006fca94af5": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "47557193-7b7b-411b-aa64-28febca84ccc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c23ccf91-d6af-4313-8953-9ce0c6f9d789": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952d89dc10>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-enable_docker_registry-fkji4ss7v6vh', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$REGISTRY_ENABLED\" = \"False\" ]; then\\n    exit 0\\nfi\\n\\necho \"starting docker registry ...\"\\nsystemctl daemon-reload\\nsystemctl enable registry\\nsystemctl --no-block start registry\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c6fc4d15-1e27-4cb1-adb4-491b7b1f92b3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "da35057a-48f0-4777-86a9-2b81ee594bcb": {
            "function": {
                "args": "(<nova.virt.libvirt.vif.LibvirtGenericVIFDriver object at 0x7f67efb80e90>, VIFBridge(active=False,address=fa:16:3e:a9:11:04,bridge_name='qbr2c0275e1-3f',has_traffic_filtering=True,id=2c0275e1-3f3e-4ca5-aa69-a0660197e312,network=Network(f55f8258-835a-4732-ba02-0b3c78b6c1c1),plugin='ovs',port_profile=VIFPortProfileBase,preserve_on_delete=True,vif_name='tap2c0275e1-3f'))", 
                "name": "nova.virt.libvirt.vif.LibvirtGenericVIFDriver.get_firewall_required_os_vif", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7584fa9a-78bf-422e-8bc1-e3d6a776655c": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "fb176914-92ac-492d-a6bc-c2808a780524": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd6bf90>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-configure_docker_storage-opiwaf7ls5eo', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n    if [ \"$ENABLE_CINDER\" == \"False\" ]; then\\n        # FIXME(yuanying): Use ephemeral disk for docker storage\\n        # Currently Ironic doesn\\'t support cinder volumes,\\n        # so we must use preserved ephemeral disk instead of a cinder volume.\\n        device_path=$(readlink -f /dev/disk/by-label/ephemeral0)\\n    else\\n        attempts=60\\n        while [ ${attempts} -gt 0 ]; do\\n            device_name=$(ls /dev/disk/by-id | grep ${DOCKER_VOLUME:0:20}$)\\n            if [ -n \"${device_name}\" ]; then\\n                break\\n            fi\\n            echo \"waiting for disk device\"\\n            sleep 0.5\\n            udevadm trigger\\n            let attempts--\\n        done\\n\\n        if [ -z \"${device_name}\" ]; then\\n            echo \"ERROR: disk device does not exist\" >&2\\n            exit 1\\n        fi\\n\\n        device_path=/dev/disk/by-id/${device_name}\\n    fi\\nfi\\n\\n# This file contains docker storage drivers configuration for fedora\\n# atomic hosts. Currently, devicemapper and overlay are supported.\\n\\n# Remove any existing docker-storage configuration. In case of an\\n# existing configuration, docker-storage-setup will fail.\\nclear_docker_storage_configuration () {\\n    if [ -f /etc/sysconfig/docker-storage ]; then\\n        sed -i \"/^DOCKER_STORAGE_OPTIONS=/ s/=.*/=/\" /etc/sysconfig/docker-storage\\n    fi\\n}\\n\\n# Configure docker storage with xfs as backing filesystem.\\nconfigure_overlay () {\\n    clear_docker_storage_configuration\\n\\n    rm -rf /var/lib/docker/*\\n\\n    if [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n        mkfs.xfs -f ${device_path}\\n        echo \"${device_path} /var/lib/docker xfs defaults 0 0\" >> /etc/fstab\\n        mount -a\\n    fi\\n\\n    echo \"STORAGE_DRIVER=overlay\" > /etc/sysconfig/docker-storage-setup\\n\\n    # SELinux must be enabled and in enforcing mode on the physical\\n    # machine, but must be disabled in the container when performing\\n    # container separation\\n    sed -i \"/^OPTIONS=/ s/--selinux-enabled/--selinux-enabled=false/\" /etc/sysconfig/docker\\n}\\n\\n# Configure docker storage with devicemapper using direct LVM\\nconfigure_devicemapper () {\\n    clear_docker_storage_configuration\\n\\n    if [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n        pvcreate -f ${device_path}\\n        vgcreate docker ${device_path}\\n\\n        echo \"VG=docker\" > /etc/sysconfig/docker-storage-setup\\n    fi\\n}\\n\\n\\nif [ \"$DOCKER_STORAGE_DRIVER\" = \"overlay\" ]; then\\n    if [ $(echo -e \"$(uname -r)\\\\n3.18\" | sort -V | head -1) = $(uname -r) ]; then\\n        ERROR_MESSAGE=\"OverlayFS requires at least Linux kernel 3.18. Cluster node kernel version: $(uname -r)\"\\n        echo \"ERROR: ${ERROR_MESSAGE}\" >&2\\n        sh -c \"${WAIT_CURL} --data-binary \\'{\\\\\"status\\\\\": \\\\\"FAILURE\\\\\", \\\\\"reason\\\\\": \\\\\"${ERROR_MESSAGE}\\\\\"}\\'\"\\n    else\\n        configure_overlay\\n    fi\\nelse\\n    configure_devicemapper\\nfi\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "31c6ff44-9b8b-47d6-8c98-080ba9310e58": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "520e958c-2492-404b-8e35-6a4298f3c6c4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, 'fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.show_port", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b1fc0140-76f3-46b8-9aff-bf736bf589f6": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e0818d0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0b67aa6b-29d3-4514-8baa-9cf5ca32685d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5be97ba1-1f50-4d8b-837e-de8e2a132610": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e191cd0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 23, u'data': {u'input_data': {u'tuple:(25, True)': {u'status': u'COMPLETE', u'name': u'loadbalancer', u'reference_id': u'c8ad12bd-ad89-4b09-83fc-4c05fcaf56f7', u'attrs': {u'vip_port_id': None, u'vip_address': None}, u'action': u'CREATE', u'id': 25, u'uuid': u'1c8c3ce1-9d30-42fe-97e0-7b866cfbe863'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'242ae84c-5677-4bf7-a2a2-5c1f8aa2dc1e'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2352bdcf-8014-490f-bd14-27836bb1c012": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0d95c642-3c5d-418d-a382-79a6e7c455e0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ae7e25b8-c9b8-42d2-9690-b5829fe12a52": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e014250>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 68, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "049fa713-0f83-4a15-a003-b42fde021598": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc68bd0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'a181370c-ab54-4c71-97e3-92ac13f9fcb1'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "474484a9-7bd6-4626-bd8f-d54280096159": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3dff1d4a-6d1f-4f32-b179-a415adbea123": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "51b95be8-4a00-4cf8-8f79-11138bc82d21": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/5299fdb3-2219-46f9-8c52-86fce045e372", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "98e469e2-dd44-4c9d-b58f-b2552ae16e3e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4fcf53bc-fe5a-40de-8c25-bb2c86bfabcc": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab/os-volume_attachments", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "409e3446-f1d3-4a6d-be12-b86dfe0e2b1a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'tenant_id': u'f789928a4f254f96965ff7f3dedd02be', 'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "18dd2ea5-f896-499f-8668-e8b283643459": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e0818d0>,)", 
                "name": "heat.engine.stack.create_stack_user_project_id", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cd0995d5-c24a-4086-b72c-397372824ce1": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dece3d0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'a5bd70fa-fe4c-4e92-87c0-49e747f23aff'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dbac03f8-c6e2-445f-8c20-99559ecb57ab": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd3d350>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 52, u'data': {u'input_data': {u'tuple:(54, True)': {u'status': u'COMPLETE', u'name': u'kube_master_eth0', u'uuid': u'7cbcebb9-0b62-4743-ad2d-73f619fc6da6', u'attrs': {u\"tuple:(u'fixed_ips', 0, u'ip_address')\": u'10.0.0.9'}, u'action': u'CREATE', u'id': 54, u'reference_id': u'2c0275e1-3f3e-4ca5-aa69-a0660197e312'}, u'tuple:(53, True)': {u'status': u'COMPLETE', u'name': u'kube_master_floating', u'reference_id': u'43fda14d-5b83-4e0f-80a7-6bacfa2f6f63', u'attrs': {u'floating_ip_address': u'172.24.4.11'}, u'action': u'CREATE', u'id': 53, u'uuid': u'ae7eb1f7-fe1c-4b80-ae57-98b26c8fcc91'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fa49ff6f-a639-4480-ae5f-eaf59d1f9c7f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0e743a53-5899-4538-910c-ff759050f864": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:43:04Z\", \"device_owner\": \"compute:None\", \"revision_number\": 10, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a865f985-820b-4ee5-a254-c31df73c5dd6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>, 'GET', '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'fields': ['binding:vnic_type', 'network_id']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "10a635cf-7c45-4a06-a761-665eb1b69ff7": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dce8610>, u'CREATE', 'COMPLETE', u'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e2a8761e-5dab-41ec-a922-c09d4932c507": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f953174f810>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e1c717a5-b999-4be7-ae89-88f5b060c3ef": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6a98623c-5597-43ab-b920-b14188c81bcb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "940c90e3-acaa-433c-82db-9a2e46b52c10": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e7cdc50>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': ComputeNode(cpu_allocation_ratio=16.0,cpu_info='{\"vendor\": \"Intel\", \"model\": \"Broadwell\", \"arch\": \"x86_64\", \"features\": [\"smap\", \"avx\", \"clflush\", \"sep\", \"rtm\", \"vme\", \"dtes64\", \"invpcid\", \"tsc\", \"fsgsbase\", \"xsave\", \"pge\", \"vmx\", \"erms\", \"xtpr\", \"cmov\", \"hle\", \"smep\", \"ssse3\", \"est\", \"pat\", \"monitor\", \"smx\", \"pbe\", \"lm\", \"msr\", \"adx\", \"3dnowprefetch\", \"nx\", \"fxsr\", \"syscall\", \"tm\", \"sse4.1\", \"pae\", \"sse4.2\", \"pclmuldq\", \"acpi\", \"fma\", \"tsc-deadline\", \"mmx\", \"osxsave\", \"cx8\", \"mce\", \"de\", \"tm2\", \"ht\", \"pse\", \"lahf_lm\", \"abm\", \"rdseed\", \"popcnt\", \"mca\", \"pdpe1gb\", \"apic\", \"sse\", \"f16c\", \"ds\", \"mpx\", \"invtsc\", \"pni\", \"rdtscp\", \"avx2\", \"aes\", \"sse2\", \"ss\", \"ds_cpl\", \"bmi1\", \"bmi2\", \"pcid\", \"fpu\", \"cx16\", \"pse36\", \"mtrr\", \"movbe\", \"pdcm\", \"rdrand\", \"x2apic\"], \"topology\": {\"cores\": 4, \"cells\": 1, \"threads\": 2, \"sockets\": 1}}',created_at=2017-01-19T04:24:03Z,current_workload=1,deleted=False,deleted_at=None,disk_allocation_ratio=1.0,disk_available_least=373,free_disk_gb=402,free_ram_mb=11267,host='vinhnt-LAB',host_ip=10.164.180.85,hypervisor_hostname='vinhnt-LAB',hypervisor_type='QEMU',hypervisor_version=2005000,id=1,local_gb=442,local_gb_used=40,memory_mb=15875,memory_mb_used=4608,metrics='[]',numa_topology='{\"nova_object.version\": \"1.2\", \"nova_object.changes\": [\"cells\"], \"nova_object.name\": \"NUMATopology\", \"nova_object.data\": {\"cells\": [{\"nova_object.version\": \"1.2\", \"nova_object.changes\": [\"cpu_usage\", \"memory_usage\", \"cpuset\", \"pinned_cpus\", \"siblings\", \"memory\", \"mempages\", \"id\"], \"nova_object.name\": \"NUMACell\", \"nova_object.data\": {\"cpu_usage\": 0, \"memory_usage\": 0, \"cpuset\": [0, 1, 2, 3, 4, 5, 6, 7], \"pinned_cpus\": [], \"siblings\": [[1, 5], [2, 6], [3, 7], [0, 4]], \"memory\": 15875, \"mempages\": [{\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"reserved\", \"size_kb\", \"used\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 4064230, \"reserved\": 0, \"size_kb\": 4}, \"nova_object.namespace\": \"nova\"}, {\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"reserved\", \"size_kb\", \"used\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 0, \"reserved\": 0, \"size_kb\": 2048}, \"nova_object.namespace\": \"nova\"}, {\"nova_object.version\": \"1.1\", \"nova_object.changes\": [\"total\", \"reserved\", \"size_kb\", \"used\"], \"nova_object.name\": \"NUMAPagesTopology\", \"nova_object.data\": {\"used\": 0, \"total\": 0, \"reserved\": 0, \"size_kb\": 1048576}, \"nova_object.namespace\": \"nova\"}], \"id\": 0}, \"nova_object.namespace\": \"nova\"}]}, \"nova_object.namespace\": \"nova\"}',pci_device_pools=PciDevicePoolList,ram_allocation_ratio=1.5,running_vms=2,service_id=None,stats={io_workload='1',num_instances='2',num_os_type_None='2',num_proj_f789928a4f254f96965ff7f3dedd02be='2',num_task_None='1',num_task_networking='1',num_vm_active='1',num_vm_building='1'},supported_hv_specs=[HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec,HVSpec],updated_at=2017-01-19T06:42:21Z,uuid=2a21119c-0f53-4ec4-b7b6-8390910f2abc,vcpus=8,vcpus_used=2), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d22efeb7-22a1-4900-83f3-1c553762a14f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "702f191a-d108-4a7a-ae87-77b9e81f714f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2d8d3cda-c8e3-4423-b3f8-948155cf2131": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a2462359-48df-4f30-885f-1ca399732e6d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "eb550ebe-626f-4e95-9a6f-33a41dc04a23": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "10c132b3-8160-4348-bd86-7c3546d073dc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.list_subnets of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ba656816-0f0c-4bec-b07f-9cb95051cc72": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37ed36d10>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "56dac732-6fa1-4fbc-b78a-66e1bab90f2d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4b369c07-7d4e-4901-8007-9dd0b19bd770": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd1a1d0>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "da8b1908-a3f6-4930-941e-36f0111ec6c4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "80175239-5dd5-4ace-b77d-089fdf54456c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d739d41e-3537-4ed9-8582-6099435d09c8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'floatingips', '/floatingips', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'fixed_ip_address': u'10.0.0.9', 'port_id': u'2c0275e1-3f3e-4ca5-aa69-a0660197e312'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f9932d78-c21f-4c0b-bd68-8f6863330518": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0e3dc652-71c5-4a60-95e7-a9c4d09d8ae3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'tenant_id': u'f789928a4f254f96965ff7f3dedd02be', 'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "72d446f2-f77d-42d6-bac8-2e554bbd1105": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d9be347d-558e-42cb-824c-403dff48efd6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "36a4282e-f7b7-4170-bd4e-0b9802ba1fd7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8f62fef7-1448-4d66-bb68-cf56dabdd4c8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d83c83c8-6a6a-44b5-a7f3-4dd907f8e592": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e191d90>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20141016 object at 0x7f952dcea9d0>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "db964920-7969-4d13-8ac9-fd4c737aa160": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "68551d4e-31dc-46ac-972e-75c817e22b5b": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "68535b2f-4ea0-43e1-afbe-1a1d5b6418b6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:55Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5cecfa75-0cb9-4b12-93f6-7cdeb1f816cd\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"9f30a188-364e-4d5f-b1a1-d4385bf9f402\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a2021987-017e-4cde-92c0-4fdde9a6cc3f\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"udp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a3cb2896-fc2a-4d4c-829f-0ec2895e8f3c\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"e0dfc1a7-2dad-42a1-8c64-88c542eb0f03\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 4, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_minion-tj5ln4ifneos\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "784816a3-1bbc-4493-9c92-018e629fbb60": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "64000ffa-f300-4e47-9adc-e0315adfef03": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "78725ca6-ed97-457f-bf0b-4cc9b124255b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "576f233e-7c81-4957-9257-09209e16d098": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "1ab1e4a7-e4c7-43f0-831b-3fb7481623b5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "02e41edb-aed1-4b20-8dad-e5206d6f2a13": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dcfd190>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-enable_kube_proxy-lws2dwc25fzg', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    HYPERKUBE_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/hyperkube:${KUBE_VERSION}\"\\nelse\\n    HYPERKUBE_IMAGE=\"gcr.io/google_containers/hyperkube:${KUBE_VERSION}\"\\nfi\\n\\ninit_templates () {\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-proxy.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-proxy\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-proxy\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - proxy\\n    - --master=http://127.0.0.1:8080\\n    - --logtostderr=true\\n    - --v=0\\n    securityContext:\\n      privileged: true\\nEOF\\n    }\\n}\\n\\ninit_templates\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9f269798-b891-49dd-a072-8e20432a5cb4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "36af3044-e69c-4389-a734-091fab936905": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dc62150>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20141016 object at 0x7f952dd0cd50>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "93222d8b-37db-4d72-a9cf-4507c0afdfd2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e5c8cd8f-34aa-4089-a733-574ff7290bce": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dbc2890>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20141016 object at 0x7f952dbc2690>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "aa7f5a13-7aac-4476-883b-c13c19adea62": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "21d5b2f8-0aea-4835-b01a-44696a2cf6ff": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "baa469c5-e916-4226-ad26-9a23d3e1a549": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "7aaeab61-3cf2-422f-8c5b-d0c741f55cf4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "660f4924-ff51-40ab-8f1c-9d779f94af27": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b96e8b69-2951-4265-acc0-408b70cdafbb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "af043876-2398-44de-8732-51ea16d82e23": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "71f04496-d2e5-472b-b6de-a0af834f70b9": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dcfa750>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "04204154-e503-47d0-9796-b5234709b934": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d3ce5fff-fc94-4cd2-84af-2f06a234b192": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/regions", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "3f5b6a46-6347-466b-b840-8cff6332fe22": {
            "function": {
                "args": "(<cinder.volume.manager.VolumeManager object at 0x7f95e2c81d50>, <cinder.context.RequestContext object at 0x7f95d46ca050>)", 
                "name": "cinder.volume.manager.VolumeManager.initialize_connection", 
                "kwargs": "{u'connector': {u'initiator': u'iqn.1993-08.org.debian:01:1cd767b1343d', u'ip': u'10.164.180.85', u'platform': u'x86_64', u'host': u'vinhnt-LAB', u'do_local_attach': False, u'os_type': u'linux2', u'multipath': False}, u'volume': Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:42:12Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-docker_volume-4xhyfkrl657w',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=82c28688-a34b-4bc3-89c6-fdc04285570b,launched_at=2017-01-19T06:42:14Z,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth=None,provider_geometry=None,provider_id=None,provider_location=None,replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:42:13Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='attaching',terminated_at=None,updated_at=2017-01-19T06:43:10Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32)}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d41d6df1-907d-43e6-a4c5-bbe7dfddcf2b": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dce3390>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20150430 object at 0x7f952dcd3f10>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "70fbb637-5df7-4f78-bb38-d0111e941816": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "074014be-9389-4a12-9a30-38b0c12d0cfc": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "3d0d5bee-fb41-4b54-bae4-12f06f8d4a23": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b34d17a6-b1ba-4943-80c4-50efcd3e2190": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1622b330-2549-4bce-a011-c287cdba24a2": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/5299fdb3-2219-46f9-8c52-86fce045e372", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "ae540aea-1ec7-4916-9407-6bcb3ddc6665": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6eca4051-1dd9-4957-801d-0c9792d17684": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0ef03f70-f8b1-42f8-931c-a64e8dc8a4f7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "84275bac-f2b9-4dff-b2f4-73f5a5d450c9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8ea524db-ec58-42cc-ae55-55e00c6696f0": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "4d101f31-6b52-43a9-84e2-5d71af08d21f": {
            "function": {
                "args": "(<nova.virt.libvirt.vif.LibvirtGenericVIFDriver object at 0x7f67efb80e90>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic',network_allocated='True'},tags=<?>,task_state='spawning',terminated_at=None,updated_at=2017-01-19T06:45:23Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=VirtCPUModel,vcpus=1,vm_mode=None,vm_state='building'), u'fa:16:3e:cf:f0:f1', ImageMeta(checksum='1db43e5c5f8fda49dc4324cbb391bc55',container_format='bare',created_at=2017-01-19T04:22:26Z,direct_url=<?>,disk_format='qcow2',id=63388f50-4450-4c85-8f3c-197af8f6f6cf,min_disk=0,min_ram=0,name='fedora-atomic-latest',owner='952ab5c3e12a4e4093bed04b75f3afc5',properties=ImageMetaProps,protected=<?>,size=697925632,status='active',tags=<?>,updated_at=2017-01-19T04:28:13Z,virtual_size=<?>,visibility=<?>), Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), 'kvm', u'normal')", 
                "name": "nova.virt.libvirt.vif.LibvirtGenericVIFDriver.get_base_config", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "003efa3f-8105-4eb0-af29-27caea8c3763": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc6fbd0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'43707c0a-7eee-4360-b11b-31bafaec50d1'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4cc22daa-fefa-425b-a60e-8dcefa5ac702": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "72830441-75f9-4b0f-a9b5-cd6ece562400": {
            "function": {
                "args": "(Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:45:13Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-docker_volume-mepwnfw7kzo7',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=1ad44791-704f-415a-a915-fb4ba2c7c87e,launched_at=2017-01-19T06:45:15Z,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth='CHAP TDW5RwwS3v4Lc7vMtMSQ 5XFw6quSTsTMA37o',provider_geometry=None,provider_id=None,provider_location='10.164.180.85:3260,2 iqn.2010-10.org.openstack:volume-1ad44791-704f-415a-a915-fb4ba2c7c87e 1',replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:45:14Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='attaching',terminated_at=None,updated_at=2017-01-19T06:45:31Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), {u'initiator': u'iqn.1993-08.org.debian:01:1cd767b1343d', u'ip': u'10.164.180.85', u'platform': u'x86_64', u'host': u'vinhnt-LAB', u'do_local_attach': False, u'os_type': u'linux2', u'multipath': False})", 
                "name": "cinder.volume.drivers.lvm.LVMVolumeDriver.initialize_connection", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6d8b64d2-00ce-4076-b5e9-59241bf29d6f": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "8150333b-db8d-4915-8ca8-26db377cb78a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "422ab783-2adb-422a-8f99-53deb0b5bdb3": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952df53a10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 6, u'data': {u'input_data': {u'tuple:(9, True)': {u'status': u'COMPLETE', u'name': u'network', u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-network-bsueqzfm4pjs/4f715e6a-6c85-4397-adb1-c21fee6efcbb', u'attrs': {u'fixed_network': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', u'fixed_subnet': u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257'}, u'action': u'CREATE', u'id': 9, u'uuid': u'4ace3d32-8486-40ca-9045-69b97b368568'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'e26ac53a-442d-4077-b980-74afdd7ee184'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "19b8fed1-70c0-4c1c-b528-302a22367562": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2581bca8-c39a-4b80-80bc-185f76577954": {
            "function": {
                "args": "(<nova.virt.libvirt.volume.iscsi.LibvirtISCSIVolumeDriver object at 0x7f67efb85150>, {u'driver_volume_type': u'iscsi', 'connector': {'platform': 'x86_64', 'host': 'vinhnt-LAB', 'do_local_attach': False, 'ip': '10.164.180.85', 'os_type': 'linux2', 'multipath': False, 'initiator': u'iqn.1993-08.org.debian:01:1cd767b1343d'}, 'serial': u'1ad44791-704f-415a-a915-fb4ba2c7c87e', u'data': {u'access_mode': u'rw', u'target_discovered': False, u'encrypted': False, u'qos_specs': None, u'target_iqn': u'iqn.2010-10.org.openstack:volume-1ad44791-704f-415a-a915-fb4ba2c7c87e', u'target_portal': u'10.164.180.85:3260', u'volume_id': u'1ad44791-704f-415a-a915-fb4ba2c7c87e', u'target_lun': 1, 'device_path': u'/dev/disk/by-path/ip-10.164.180.85:3260-iscsi-iqn.2010-10.org.openstack:volume-1ad44791-704f-415a-a915-fb4ba2c7c87e-lun-1', u'auth_password': u'5XFw6quSTsTMA37o', u'auth_username': u'TDW5RwwS3v4Lc7vMtMSQ', u'auth_method': u'CHAP'}}, {'bus': 'virtio', 'type': 'disk', 'dev': u'vdb'})", 
                "name": "nova.virt.libvirt.volume.volume.LibvirtBaseVolumeDriver.get_config", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "05a1e6b4-c708-4260-8730-3e3c3e5165d7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d96aa1e2-ab78-44de-89cd-14276c5772bc": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e191d90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "08498710-15e7-46ed-9ea8-0134e548808a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "736ee027-cbe8-469f-8760-f4e12f780884": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952df70a50>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_examples-ky33m3zlpw2j', u'outputs': [], u'config': u'#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /etc/kubernetes/examples/replication-controller.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: ReplicationController\\n      metadata:\\n        name: nginx-controller\\n      spec:\\n        replicas: 2\\n        # selector identifies the set of pods that this\\n        # replication controller is responsible for managing\\n        selector:\\n          name: nginx\\n        # template defines the \\'cookie cutter\\' used for creating\\n        # new pods when necessary\\n        template:\\n          metadata:\\n            labels:\\n              # Important: these labels need to match the selector above\\n              # The api server enforces this constraint.\\n              app: nginx\\n          spec:\\n            containers:\\n              - name: nginx\\n                image: nginx\\n                ports:\\n                  - containerPort: 80\\n\\n  - path: /etc/kubernetes/examples/pod-nginx-with-label.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Pod\\n      metadata:\\n        name: nginx\\n        labels:\\n          app: nginx\\n      spec:\\n        containers:\\n        - name: nginx\\n          image: nginx\\n          ports:\\n          - containerPort: 80\\n\\n  - path: /etc/kubernetes/examples/service.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Service\\n      metadata:\\n        name: nginx-service\\n      spec:\\n        ports:\\n        - port: 8000 # the port that this service should serve on\\n          # the container on each pod to connect to, can be a name\\n          # (e.g. \\'www\\') or a number (e.g. 80)\\n          targetPort: 80\\n          protocol: TCP\\n        # just like the selector in the replication controller,\\n        # but this time it identifies the set of pods to load balance\\n        # traffic to.\\n        selector:\\n          app: nginx\\n\\n  - path: /etc/kubernetes/examples/README.md\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      Kubernetes 101 (http://kubernetes.io/v1.0/docs/user-guide/walkthrough/README.html)\\n      ==================================================================================\\n\\n      List all nodes:\\n\\n          kubectl get nodes\\n\\n      Replication Controllers:\\n\\n          kubectl create -f /etc/kubernetes/examples/replication-controller.yaml\\n          kubectl get rc\\n          kubectl delete rc nginx-controller\\n\\n      Pods:\\n\\n          kubectl create -f /etc/kubernetes/examples/pod-nginx-with-label.yaml\\n          kubectl get pods\\n          curl http://$(kubectl get pod nginx -o=template -t={{.status.podIP}})\\n\\n      Services:\\n\\n          kubectl create -f /etc/kubernetes/examples/service.yaml\\n          kubectl get services\\n\\n          export SERVICE_IP=$(kubectl get service nginx-service -o=template -t={{.spec.clusterIP}})\\n          export SERVICE_PORT=$(kubectl get service nginx-service -o=template \\'-t={{(index .spec.ports 0).port}}\\')\\n          curl http://${SERVICE_IP}:${SERVICE_PORT}\\n\\n          kubectl delete service nginx-service\\n\\n      Troubleshooting:\\n\\n          kubectl get events\\n\\n          kubectl describe rc nginx-controller\\n\\n          kubectl describe pod nginx\\n\\n          kubectl describe service nginx-service\\n\\n          kubectl exec nginx env\\n\\n          kubectl exec -ti nginx -- bash\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a94e0f48-7df7-4db3-8fd7-4b19402c1932": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc6f8d0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'88197835-6b68-444d-8d30-4f95c370869b'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3feeb9c1-76e9-4025-a442-fb85ed54429d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3768a310-ee1c-4fe8-ab20-f585bd78f316": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952db431d0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 28, u'data': {u'input_data': {u'tuple:(54, True)': {u'status': u'COMPLETE', u'name': u'kube_master_eth0', u'reference_id': u'2c0275e1-3f3e-4ca5-aa69-a0660197e312', u'attrs': {u\"tuple:(u'fixed_ips', 0, u'ip_address')\": u'10.0.0.9'}, u'action': u'CREATE', u'id': 54, u'uuid': u'7cbcebb9-0b62-4743-ad2d-73f619fc6da6'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0bea50ea-7c4a-4953-ab39-ee5b9c492db0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "71c62e15-5896-472f-9e85-eeb5db1e0c58": {
            "function": {
                "args": "(<cinder.volume.manager.VolumeManager object at 0x7f95e2c81d50>, <cinder.context.RequestContext object at 0x7f95d4357290>)", 
                "name": "cinder.volume.manager.VolumeManager.initialize_connection", 
                "kwargs": "{u'connector': {u'initiator': u'iqn.1993-08.org.debian:01:1cd767b1343d', u'ip': u'10.164.180.85', u'platform': u'x86_64', u'host': u'vinhnt-LAB', u'do_local_attach': False, u'os_type': u'linux2', u'multipath': False}, u'volume': Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:45:13Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-docker_volume-mepwnfw7kzo7',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=1ad44791-704f-415a-a915-fb4ba2c7c87e,launched_at=2017-01-19T06:45:15Z,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth=None,provider_geometry=None,provider_id=None,provider_location=None,replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:45:14Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='attaching',terminated_at=None,updated_at=2017-01-19T06:45:31Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32)}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "705d87ac-ec9e-41ae-91bb-95bee74fc8a2": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "df9a1932-d480-4f8a-82e0-a41c538ae65a": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e7c1fd0>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'create', u'args': [], u'objinst': VirtualInterface(address='fa:16:3e:a9:11:04/2c0275e1-3f3e-4ca5-aa69-a0660197e312',created_at=<?>,deleted=<?>,deleted_at=<?>,id=<?>,instance_uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,network_id=<?>,tag=None,updated_at=<?>,uuid=2c0275e1-3f3e-4ca5-aa69-a0660197e312), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6fa7be55-b15e-43f5-b8ea-f8fc1004c056": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "aef05289-ea32-434a-a282-4331863502a0": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "3204a887-b237-44dd-addb-396437f03b42": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "5a51acd7-048f-4ae5-ab0d-ff8602b11402": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cb088765-d307-4322-a120-cf4143b6cc27": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952d7cbb50>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 74, u'data': {u'input_data': {u'tuple:(75, True)': {u'status': u'COMPLETE', u'name': u'kube_minion_eth0', u'reference_id': u'fcff5957-172c-4937-8341-670d27155ef6', u'attrs': {u\"tuple:(u'fixed_ips', 0, u'ip_address')\": u'10.0.0.3'}, u'action': u'CREATE', u'id': 75, u'uuid': u'1bb9a653-fb55-4593-9931-50a2c16c63a9'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b6ce4b15-e283-4ee7-b4d0-d7f5789753f1": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "d9a95334-3d04-42c6-a484-ce23178e02d3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8d8966c4-2319-44a1-9edd-d344a4db60bb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9819c953-0b6b-4530-848b-52cbe7cf88df": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3b8bc231-f072-4bc3-bbd3-72abc730b480": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'network_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', 'device_owner': 'network:dhcp'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a12076f0-b1d7-4d4f-9325-092e7d888e32": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "fae64294-68b7-4138-ba19-75fa6d4e4c28": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952df8c810>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7c313509-181e-4f17-b6a1-e1b05e6d58db": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "224168c5-400d-400d-bcfc-7e0845621857": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "df7f0bb5-5d79-4065-a33f-9c4bc1eec817": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "3328407c-735f-4e33-8429-ec0298b01f0b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "97eb43b5-7141-4146-88b7-b4a780170239": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors/2", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "c666c59f-9625-427b-b14f-bbd810f67f11": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8294da31-bc90-42b0-af32-04e45dc09ad4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8c0d3a04-ab5f-45f1-b602-4548b15bff27": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e95789f4-86b5-455f-8599-30ae73fd9e9d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8d9cc541-3235-4464-be58-9a0502340cf0": {
            "function": {
                "args": "(<nova.compute.rpcapi.ComputeAPI object at 0x7ff381184990>, <nova.context.RequestContext object at 0x7ff380829f10>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=<?>,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=<?>,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=<?>,host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=<?>,launch_index=0,launched_at=2017-01-19T06:45:28Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=<?>,node='vinhnt-LAB',numa_topology=<?>,old_flavor=<?>,os_type=None,pci_devices=<?>,pci_requests=<?>,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:45:29Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=<?>,vcpus=1,vm_mode=None,vm_state='active'), u'/dev/vdb', u'1ad44791-704f-415a-a915-fb4ba2c7c87e')", 
                "name": "nova.compute.rpcapi.ComputeAPI.reserve_block_device_name", 
                "kwargs": "{'disk_bus': None, 'device_type': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "aae7e4cf-208f-4428-8c7b-9b3781aaadaa": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5b3176b8-fd10-41df-bbda-352ea7e0552e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7ac777f0-40dd-478b-8158-4bd7d3a0aa42": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "1f6e31f8-2505-4a80-a3e3-aaa5a92a1d9b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, 'GET', '/networks')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'f55f8258-835a-4732-ba02-0b3c78b6c1c1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c4c5803d-04a7-43e1-a053-e81eccd78674": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.serialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e80fe7fa-2f7a-434a-9e39-ac4b8015d064": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "13528b54-f384-439d-8661-5dc2acacfae2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6b53c359-567e-4fb8-8ffb-aacd05864587": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dcf0f90>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-configure_docker_storage-bnuxa4twaq34', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n    if [ \"$ENABLE_CINDER\" == \"False\" ]; then\\n        # FIXME(yuanying): Use ephemeral disk for docker storage\\n        # Currently Ironic doesn\\'t support cinder volumes,\\n        # so we must use preserved ephemeral disk instead of a cinder volume.\\n        device_path=$(readlink -f /dev/disk/by-label/ephemeral0)\\n    else\\n        attempts=60\\n        while [ ${attempts} -gt 0 ]; do\\n            device_name=$(ls /dev/disk/by-id | grep ${DOCKER_VOLUME:0:20}$)\\n            if [ -n \"${device_name}\" ]; then\\n                break\\n            fi\\n            echo \"waiting for disk device\"\\n            sleep 0.5\\n            udevadm trigger\\n            let attempts--\\n        done\\n\\n        if [ -z \"${device_name}\" ]; then\\n            echo \"ERROR: disk device does not exist\" >&2\\n            exit 1\\n        fi\\n\\n        device_path=/dev/disk/by-id/${device_name}\\n    fi\\nfi\\n\\n# This file contains docker storage drivers configuration for fedora\\n# atomic hosts. Currently, devicemapper and overlay are supported.\\n\\n# Remove any existing docker-storage configuration. In case of an\\n# existing configuration, docker-storage-setup will fail.\\nclear_docker_storage_configuration () {\\n    if [ -f /etc/sysconfig/docker-storage ]; then\\n        sed -i \"/^DOCKER_STORAGE_OPTIONS=/ s/=.*/=/\" /etc/sysconfig/docker-storage\\n    fi\\n}\\n\\n# Configure docker storage with xfs as backing filesystem.\\nconfigure_overlay () {\\n    clear_docker_storage_configuration\\n\\n    rm -rf /var/lib/docker/*\\n\\n    if [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n        mkfs.xfs -f ${device_path}\\n        echo \"${device_path} /var/lib/docker xfs defaults 0 0\" >> /etc/fstab\\n        mount -a\\n    fi\\n\\n    echo \"STORAGE_DRIVER=overlay\" > /etc/sysconfig/docker-storage-setup\\n\\n    # SELinux must be enabled and in enforcing mode on the physical\\n    # machine, but must be disabled in the container when performing\\n    # container separation\\n    sed -i \"/^OPTIONS=/ s/--selinux-enabled/--selinux-enabled=false/\" /etc/sysconfig/docker\\n}\\n\\n# Configure docker storage with devicemapper using direct LVM\\nconfigure_devicemapper () {\\n    clear_docker_storage_configuration\\n\\n    if [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n        pvcreate -f ${device_path}\\n        vgcreate docker ${device_path}\\n\\n        echo \"VG=docker\" > /etc/sysconfig/docker-storage-setup\\n    fi\\n}\\n\\n\\nif [ \"$DOCKER_STORAGE_DRIVER\" = \"overlay\" ]; then\\n    if [ $(echo -e \"$(uname -r)\\\\n3.18\" | sort -V | head -1) = $(uname -r) ]; then\\n        ERROR_MESSAGE=\"OverlayFS requires at least Linux kernel 3.18. Cluster node kernel version: $(uname -r)\"\\n        echo \"ERROR: ${ERROR_MESSAGE}\" >&2\\n        sh -c \"${WAIT_CURL} --data-binary \\'{\\\\\"status\\\\\": \\\\\"FAILURE\\\\\", \\\\\"reason\\\\\": \\\\\"${ERROR_MESSAGE}\\\\\"}\\'\"\\n    else\\n        configure_overlay\\n    fi\\nelse\\n    configure_devicemapper\\nfi\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a7b9d7b0-3a70-4d84-8541-10323941a7ea": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dde7ad0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 36, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "105d509d-a680-4b8d-9c30-99814f1e3719": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e5e512c5-a452-4092-b3ee-d9bbee12a32f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "730c06fb-b154-4b96-b52b-904957df905a": {
            "function": {
                "args": "(<nova.scheduler.manager.SchedulerManager object at 0x7f52069556d0>, <nova.context.RequestContext object at 0x7f52060f2110>)", 
                "name": "nova.scheduler.manager.SchedulerManager.update_instance_info", 
                "kwargs": "{u'host_name': u'vinhnt-LAB', u'instance_info': InstanceList(objects=[Instance(5299fdb3-2219-46f9-8c52-86fce045e372)])}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d266adbd-8995-44e2-a860-a711ff80ce50": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952df8ce90>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 47, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cfc8ce2c-b834-4663-9c9c-b28aa3796632": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'subnets', '/subnets', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0b3abd49-cedb-4a96-85e1-6d06d55641e8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8d9c7678-c32d-4c41-8f40-977a4d04fd8e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "084993b2-fa46-4a94-ac9f-0a135ac98fca": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/5299fdb3-2219-46f9-8c52-86fce045e372", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "4133d662-cc2f-4583-bae8-1ace97c9efc4": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dcfa750>, 'CREATE', 'COMPLETE', 'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9769aff5-f52c-457c-8988-b6bc6ab06a5f": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "a747b8ac-52ca-4e6c-899e-ac49db0c38a0": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37e9cde50>, u'5299fdb3-2219-46f9-8c52-86fce045e372')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "58b9506d-dd23-4044-98b0-f21ef9a0f86e": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e5a1550>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDevicePool': u'1.1', u'Service': u'1.20', u'InstancePCIRequests': u'1.1', u'SecurityGroup': u'1.2', u'BlockDeviceMappingList': u'1.17', u'Instance': u'2.3', u'DeviceMetadata': u'1.0', u'SecurityGroupList': u'1.0', u'VirtCPUTopology': u'1.0', u'InstanceFault': u'1.2', u'InstanceDeviceMetadata': u'1.0', u'PciDeviceList': u'1.3', u'PciDevicePoolList': u'1.1', u'ServiceList': u'1.19', u'BlockDeviceMapping': u'1.17', u'VirtCPUModel': u'1.0', u'MigrationContext': u'1.1', u'KeyPair': u'1.4', u'KeyPairList': u'1.3', u'InstancePCIRequest': u'1.1', u'Flavor': u'1.1', u'InstanceInfoCache': u'1.5', u'VirtCPUFeature': u'1.0', u'PciDevice': u'1.5', u'InstanceNUMACell': u'1.3', u'DeviceBus': u'1.0', u'ComputeNode': u'1.16', u'Tag': u'1.1', u'HVSpec': u'1.2', u'EC2Ids': u'1.0', u'InstanceNUMATopology': u'1.3', u'TagList': u'1.1'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'], u'objname': u'BlockDeviceMappingList', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "40424668-5850-4d40-a38e-975935abad15": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "966e2328-6d6f-4e03-b9bd-1f269334a0b3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8aa3fa6d-256a-4314-8c64-b547dda9ec98": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "47907f88-2213-4d41-ad5b-38ecce2d940e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d1122707-1c37-4aa9-a0a5-fbf3b63112b0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "068535eb-d334-4887-941e-a5e0d6774bff": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "25053e7e-74ae-4780-9615-4c57d97f731c": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e015890>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-api_address_switch-e2doxqp6dko2', u'stack_id': u'89cd8e6a-1d52-4e02-b0ea-295c13e928c6', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2cc51cf9-9b81-45a7-a9aa-4c8565284fd9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0c668557-0336-458c-8093-a57913ef381a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'tenant_id': u'f789928a4f254f96965ff7f3dedd02be', 'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1cd0a8ea-d576-403e-b4e7-dfa7aa3cbc17": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "02de5e21-259c-4b09-bb87-c534b8addfe5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5097ed9d-401c-41a0-93ce-9dbda9933dbb": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e015c90>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'8e85ff36-0c04-435c-833f-e7168a3d2305'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dc58e335-7235-4f56-949b-e00bb8eb76a0": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/OS-TRUST/trusts", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "7d645b3b-968c-4543-ac4d-f0b4210aa7e4": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "1aa97d65-e15b-49e8-8cf9-13cb13940127": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7803a2f4-f164-4cb6-bb04-4537569b9b31": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd6f710>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f1f4f807-2cee-40bd-8a23-5851142c17f9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "80752869-8f58-4004-9285-a594837ee79b": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd3dfd0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 1, u'data': {u'input_data': {u'tuple:(4, True)': {u'status': u'COMPLETE', u'name': u'api_address_lb_switch', u'reference_id': u'arn:openstack:heat::f789928a4f254f96965ff7f3dedd02be:stacks/k8s-cluster-ui4f4ogezhm7-api_address_lb_switch-giqcpj3ubkxa/54f157d2-b705-4a81-8680-2eaec5fcbd06', u'attrs': {u'public_ip': u'172.24.4.11', u'private_ip': u'10.0.0.9'}, u'action': u'CREATE', u'id': 4, u'uuid': u'7740aae0-027a-4322-8b85-e830bc86f78e'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'e26ac53a-442d-4077-b980-74afdd7ee184'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d9920b98-425e-49b0-8b66-318e1dbf4979": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "cf48213d-2be4-42a0-b70b-e5e2aec5c195": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5cd12e1a-d372-4063-881f-4dcb626b5294": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'GET', '/subnets')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3332c7f3-4b56-4e13-adbf-8b395dc33503": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/roles", 
                "scheme": "http", 
                "method": "GET", 
                "query": "name=heat_stack_user"
            }
        }, 
        "19724243-375a-44a1-8fd5-e02229be31fb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c94f505c-0a8e-4c55-aabb-e3207bcf8daa": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9fac6ed7-cd15-427f-92d2-b9844bb6a104": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:43:04Z\", \"device_owner\": \"compute:None\", \"revision_number\": 10, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "005c92f5-e3b2-4c29-91fb-7799fbb0e023": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d2c3dd9d-4096-478e-bec2-1f284fbf5ce8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c6bc3286-8706-41cc-899a-effbe7634fa8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a913962d-0136-4046-9b85-ecb7526236f1": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e0159d0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 21, u'data': {u'input_data': {u'tuple:(22, True)': {u'status': u'COMPLETE', u'name': u'pool', u'reference_id': u'eaebe04d-665b-44e0-b618-38b9d529f6b0', u'attrs': {}, u'action': u'CREATE', u'id': 22, u'uuid': u'2983d76b-e493-4a18-b5db-b3e8a426dfaf'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'242ae84c-5677-4bf7-a2a2-5c1f8aa2dc1e'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b4cf128b-048e-48f0-9d2b-14013b87067a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5602c623-c218-43e1-bde4-636ead56a5ef": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38087ebd0>, 'GET', '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7951ceba-a0b1-4992-a8ce-97c8a8a24ccf": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "3ca99591-555b-42c2-b5eb-30c6872fee8e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "9fa66c9a-0a7e-441e-b977-d6c6778d28b6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9393f475-79c4-44af-b34e-283be8b32056": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e5db2df5-4cd0-48d5-ac5c-672cac96ae22": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "7bb1e352-5130-4c03-9462-d302495a77e5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, 'GET', '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f31ba2ad-11f2-46ec-b109-eeeb7a2f9f30": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, u'{\"port\": {\"status\": \"DOWN\", \"binding:host_id\": \"\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:cf:f0:f1\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:45:13Z\", \"device_owner\": \"\", \"revision_number\": 6, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.3\"}], \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"security_groups\": [\"a194cf94-7b7a-42dd-86a1-306e04d6c859\"], \"device_id\": \"\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_eth0-le73kun3tjst\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"unbound\", \"mac_address\": \"fa:16:3e:cf:f0:f1\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:13Z\"}}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6314723c-86fb-4a34-94ea-ad1fff0069f5": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "360cdac7-ba92-49f6-be64-f5bea0a51ffd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d66d47cd-faa6-4b9f-bb7e-ab45a6bbf106": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "75e1d00c-f7f2-4312-a690-7a5d331ef8ab": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dceaa50>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 37, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a7ece5cd-8689-4331-89ff-8c5d13880e47": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8679f62f-3874-4d50-b558-756d1fa5559d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1837ec65-fe8b-4ee6-bd56-28eac336cf57": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "afcac7ba-cfc9-4906-aa71-48f87e2b7a1a": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952df8c810>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c3c7a79b-2031-4af2-8be5-b951e6d75354": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'tenant_id': u'f789928a4f254f96965ff7f3dedd02be', 'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "078fb6e4-0308-4cd8-80c8-0279fcdec0f0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c41dd7cb-543d-48b8-a0d0-ae9367dd82ee": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c0ebcb07-8593-43c3-8987-934e18732b24": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c62898a6-3279-46c7-870f-bb17016cf187": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "915530c3-499b-4855-8ca3-9d1985a6a87d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4669ab9d-3afe-49a7-872f-faeded977459": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, 'GET', '/extensions')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "96d55d2e-2cac-4871-8b6b-7e8317f99ba2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "08f6efd7-dd71-4307-9014-dff5f1234c26": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e43641e2-5e3e-4375-930d-c7440853e451": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5138ddb4-19f4-4561-b100-c674704274bc": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "89effdc1-3bae-479e-b4c2-bb3c1413216a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "23b7236d-7ba2-46fb-ba84-69fff71d63d3": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e200ed0>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-minion_wc_notify-rrlds4p5de5w', u'outputs': [], u'config': u'#!/bin/bash -v\\ncurl -i -X POST -H \\'X-Auth-Token: gAAAAABYgGB5noXDDSbj8Ng3eHpHgCbOYM7zEglsOggifCzCBOclCcm3-ONpMVYEZ-36cWKMBP_NY7NGfaXv8WPOLxuHLZERbSYxYtKzY0Vk9-pNRp7TR9HEWzdyWQ_yY01L0AVdtH2cSQtSmSnWgspUsypqsLWLqGxTzianfN40CrqISq2ZZiQ\\' -H \\'Content-Type: application/json\\' -H \\'Accept: application/json\\' http://10.164.180.85:8004/v1/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/stacks/k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr/01356360-a283-455d-b873-caffa7bc43c7/resources/minion_wait_handle/signal --data-binary \\'{\"status\": \"SUCCESS\"}\\'\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "18635a2e-5a94-46e0-8706-f352207adbde": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, u'{\"networks\": [{\"provider:physical_network\": null, \"ipv6_address_scope\": null, \"revision_number\": 5, \"port_security_enabled\": true, \"mtu\": 1450, \"id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"router:external\": false, \"availability_zone_hints\": [], \"availability_zones\": [\"nova\"], \"ipv4_address_scope\": null, \"shared\": false, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"status\": \"ACTIVE\", \"subnets\": [\"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\"], \"description\": \"\", \"tags\": [], \"updated_at\": \"2017-01-19T06:41:57Z\", \"provider:segmentation_id\": 9, \"name\": \"private\", \"admin_state_up\": true, \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:55Z\", \"provider:network_type\": \"vxlan\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9871c107-2f6e-496c-a228-89261a3a77bd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "85351ff7-abe8-44b0-910d-6aef0fa7e4ea": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff38005acd0>, 'GET', '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'fields': ['binding:vnic_type', 'network_id']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e32fdd70-cc0a-4afc-a2cf-b8955f6e6d5c": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952df8c810>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20141016 object at 0x7f952e027310>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "47c10487-49dc-4ac9-857d-b75f54999410": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'PUT', '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': {'port': {'device_owner': 'compute:None', 'binding:host_id': u'vinhnt-LAB', 'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}}, 'headers': None, 'params': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bafa244b-4858-4410-a8ed-6c68dc713a0f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dffd0b8e-67f0-4602-832f-cb71684c5cd2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "aa04831e-803c-4eb4-b0b0-6fbf09e72cbe": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3ac7bb63-168f-464a-a13b-749bb8481f39": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "a55c5940-8cc0-42ea-bf8a-4c23b8ee5aa5": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/projects", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "6b32c958-7277-4c1c-97d0-ed54b8dd10cf": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "88ef22fa-104c-49bb-89b0-da07714547b5": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "8b12838b-5a5c-4ce2-8d9d-7d5ce473e6f9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f5bb3d87-af15-427d-8a11-cf4e73f19b19": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "a05111b7-31a6-4649-8bbf-d181d8c62c62": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e194d50>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 9, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'e26ac53a-442d-4077-b980-74afdd7ee184'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "01a02ece-af57-4a70-b447-5d819156fa79": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6829f77a-7b4b-4800-a12d-a4cca648aa12": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ebb62a98-f78c-40ef-a260-3c77f9b5ab6e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c66030a3-1e30-40e1-8bc0-45f50aaf0671": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "d4c12793-b6d0-4670-80f7-0afd7f5f560e": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37f01eb90>, u'5299fdb3-2219-46f9-8c52-86fce045e372')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f98039bc-6987-49f2-b677-9feb415075e2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "75b10877-11ce-4b33-a17d-d354dcbe3ad3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, u'{\"ports\": []}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e7ed61a6-84f0-4798-bdfd-0f6d0452da45": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3e6227c1-62ec-4ef4-9f52-ebe1c4cadc37": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dcfa750>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d41259c4-44a0-42d8-a9c2-52d9832b39c5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f1c70118-dca9-48cc-ace1-d7af8b47e0a7": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dc71a50>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 57, u'data': {u'input_data': {u'tuple:(71, True)': {u'status': u'COMPLETE', u'name': u'minion_wait_handle', u'uuid': u'7d82f5be-a2e8-461e-9af0-1808ab75d423', u'attrs': {u'curl_cli': u\"curl -i -X POST -H 'X-Auth-Token: gAAAAABYgGB5noXDDSbj8Ng3eHpHgCbOYM7zEglsOggifCzCBOclCcm3-ONpMVYEZ-36cWKMBP_NY7NGfaXv8WPOLxuHLZERbSYxYtKzY0Vk9-pNRp7TR9HEWzdyWQ_yY01L0AVdtH2cSQtSmSnWgspUsypqsLWLqGxTzianfN40CrqISq2ZZiQ' -H 'Content-Type: application/json' -H 'Accept: application/json' http://10.164.180.85:8004/v1/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/stacks/k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr/01356360-a283-455d-b873-caffa7bc43c7/resources/minion_wait_handle/signal\"}, u'action': u'CREATE', u'id': 71, u'reference_id': u'16a78306dad744958b042daf74fe8afe'}, u'tuple:(59, True)': {u'status': u'COMPLETE', u'name': u'kube-minion', u'reference_id': u'5299fdb3-2219-46f9-8c52-86fce045e372', u'attrs': {}, u'action': u'CREATE', u'id': 59, u'uuid': u'9489896b-c33a-4ff5-a7f1-d1e1449ee9be'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b82a5c31-4575-4f0d-b8dd-7c910c8a2a21": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:cf:f0:f1\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:45:23Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.3\"}], \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"security_groups\": [\"a194cf94-7b7a-42dd-86a1-306e04d6c859\"], \"device_id\": \"5299fdb3-2219-46f9-8c52-86fce045e372\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_eth0-le73kun3tjst\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:cf:f0:f1\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:13Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "46ca81f6-ea38-495b-8833-ea3abb40845b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bd894cb2-18d7-4b78-a2f2-11131df6e323": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a32d00db-e79b-4fff-a449-5e01ab7cbccb": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e191d90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': 'c952feca-3f0f-49b1-8797-40b9c2f87dd0'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a429da01-600d-4b28-8895-8c8623d5ec36": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>, <bound method ClientWrapper.show_port of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5a52a35f-b174-4155-a5f0-78d1fbe4184a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "44362ed1-1ec2-4121-a8b6-9325df84632c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "26c0fdb6-601a-4914-974c-5edc0582183a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "99d0719a-26a3-42b1-b331-ffa6fa59042f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "597e24fe-ae7b-4016-b8e9-75af77009213": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "64c9687d-fa1b-4990-b5f5-d90e93f0d4ae": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cabf8ed2-abff-43f5-8e0e-049777ebf90e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e/action", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "618b0daf-c6d5-4121-b68a-83c3e0659155": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:02Z\", \"device_owner\": \"network:dhcp\", \"revision_number\": 7, \"port_security_enabled\": false, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.2\"}], \"id\": \"96e9f982-71d4-446c-b2cf-fa9de18783a8\", \"security_groups\": [], \"device_id\": \"dhcpaa770327-bd14-5133-b64a-23cefe630767-f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"name\": \"\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:ee:c8:ee\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:57Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6afb42c1-d825-4425-9ec0-ff539dd48b2f": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b/action", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "a6b92043-6119-4aa8-8e0f-b1bf1c70350d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, u'{\"port\": {\"status\": \"DOWN\", \"binding:host_id\": \"\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:12Z\", \"device_owner\": \"\", \"revision_number\": 6, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"unbound\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "93af359f-a483-4fdd-91cd-38862ac0cdc9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efcd150>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cc8db0e1-d20d-424a-a303-717a671e6847": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd1a4d0>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "77681488-71cd-47c5-a54a-1ebe56ede14f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "06ac7e94-616b-4f1a-9ce7-97448876cd1a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e3ebeee1-a003-46a5-8a30-9e0fd18d4b82": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ad908934-32ab-409e-996b-55c20a9541e4": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f2f381d0-ea54-4157-8842-3d91cca7ad54": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37eef2d90>, u'5299fdb3-2219-46f9-8c52-86fce045e372')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "86f353b8-dc7a-4f6b-94dd-9046c5d20ae2": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dd6f810>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4a820011-5eb2-4e18-8567-e3f13f20edda": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "65f07da2-32b4-4485-bb8b-e2020289e4b2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, '/networks')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'f55f8258-835a-4732-ba02-0b3c78b6c1c1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6d794946-8260-4690-a5b9-d99a21eb55d0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5cae650d-475b-4ab4-b1f3-f2bc7eb1fd6a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "20224e94-d47b-4a6f-a736-bacf34bdfdec": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dc681d0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 59, u'data': {u'input_data': {u'tuple:(75, True)': {u'status': u'COMPLETE', u'name': u'kube_minion_eth0', u'uuid': u'1bb9a653-fb55-4593-9931-50a2c16c63a9', u'attrs': {u\"tuple:(u'fixed_ips', 0, u'ip_address')\": u'10.0.0.3'}, u'action': u'CREATE', u'id': 75, u'reference_id': u'fcff5957-172c-4937-8341-670d27155ef6'}, u'tuple:(60, True)': {u'status': u'COMPLETE', u'name': u'kube_minion_init', u'reference_id': u'dbc7bdcd-4deb-49e2-97bb-5c6f2684f42b', u'attrs': {}, u'action': u'CREATE', u'id': 60, u'uuid': u'621b9ee0-b6b3-46c9-8641-e6f9c7c2be51'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0bf7c355-5bcd-4eef-bbb9-0328834440ac": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b5371142-da72-4413-bba4-92953bfdf8e2": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa598ed710>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': BlockDeviceMapping(boot_index=None,connection_info='{\"driver_volume_type\": \"iscsi\", \"connector\": {\"platform\": \"x86_64\", \"host\": \"vinhnt-LAB\", \"do_local_attach\": false, \"ip\": \"10.164.180.85\", \"os_type\": \"linux2\", \"multipath\": false, \"initiator\": \"iqn.1993-08.org.debian:01:1cd767b1343d\"}, \"serial\": \"82c28688-a34b-4bc3-89c6-fdc04285570b\", \"data\": {\"access_mode\": \"rw\", \"target_discovered\": false, \"encrypted\": false, \"qos_specs\": null, \"target_iqn\": \"iqn.2010-10.org.openstack:volume-82c28688-a34b-4bc3-89c6-fdc04285570b\", \"target_portal\": \"10.164.180.85:3260\", \"volume_id\": \"82c28688-a34b-4bc3-89c6-fdc04285570b\", \"target_lun\": 1, \"device_path\": \"/dev/disk/by-path/ip-10.164.180.85:3260-iscsi-iqn.2010-10.org.openstack:volume-82c28688-a34b-4bc3-89c6-fdc04285570b-lun-1\", \"auth_password\": \"***\", \"auth_username\": \"THyZ8adaN383MNpA3jyq\", \"auth_method\": \"CHAP\"}}',created_at=2017-01-19T06:43:09Z,delete_on_termination=False,deleted=False,deleted_at=None,destination_type='volume',device_name='/dev/vdb',device_type=None,disk_bus=None,guest_format=None,id=3,image_id=None,instance=<?>,instance_uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,no_device=False,snapshot_id=None,source_type='volume',tag=None,updated_at=2017-01-19T06:43:16Z,volume_id='82c28688-a34b-4bc3-89c6-fdc04285570b',volume_size=3), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c394e549-67a3-4ec2-ada4-279062d039fe": {
            "function": {
                "args": "(Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:42:12Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-docker_volume-4xhyfkrl657w',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=82c28688-a34b-4bc3-89c6-fdc04285570b,launched_at=None,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth=None,provider_geometry=None,provider_id=None,provider_location=None,replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:42:13Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='creating',terminated_at=None,updated_at=2017-01-19T06:42:13Z,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32),)", 
                "name": "cinder.volume.drivers.lvm.LVMVolumeDriver.create_volume", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ffca5cf3-1dfb-487e-96cb-df94078201b1": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dcb7b50>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-etcd_lb-kbhpmtcuvob2', u'stack_id': u'a1cc2b35-433b-4395-af9a-299915cb643d', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ead118c8-a0f2-493b-b890-75f39f70d786": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "bfbd715c-0c00-4f4d-b06f-339f49b2629e": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952ddd7850>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 34, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c79d8a49-215c-402f-a654-bd22c2ec6ea2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "942d6a6a-d8c9-4174-b6ef-ae1235a2dfe1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "69cbca75-2aef-4f54-afb2-b85bbba96bbb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4a052393-d9de-444a-abd7-89749068a8af": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "0ea70ba3-3349-4041-a580-711512b31bec": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "df27f9cd-df53-4a94-8d91-751ff107cbaf": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "570413d8-ef12-4737-83b5-59345c95faca": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity/v3/auth/tokens", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "2ee1d86c-8209-4508-a59b-433bc0eacaf8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "01117459-4a5c-4f08-bbb1-47b7114b4af0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c844ea47-732e-4d0f-896b-91d82fec3774": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bab097ca-d19f-47b3-9a13-7eb3668b34da": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ff0082ba-1db5-4394-9d42-8fa4078c850a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7fbf4099-c11b-4853-95f5-a701dafda0a2": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d4b91290-5f0f-4a6a-adae-ed18f5d60155": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0c251e7b-d48c-4335-b6e2-15372415180e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8f2a9fd3-3b4a-4186-b704-6e6bf8c0d183": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "e5bd911a-5f74-436e-88e3-3683875ac4ce": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4267d86e-ae08-4570-8051-9887e2370a6b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dc8da4bb-197d-4c7b-a394-46960a8ef485": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952e025310>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': {u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/configure-etcd.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -z \"$KUBE_NODE_IP\" ]; then\\n    # FIXME(yuanying): Set KUBE_NODE_IP correctly\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nmyip=\"${KUBE_NODE_IP}\"\\ncert_dir=\"/srv/kubernetes\"\\nprotocol=\"https\"\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    protocol=\"http\"\\nfi\\n\\ncat > /etc/etcd/etcd.conf <<EOF\\nETCD_NAME=\"$myip\"\\nETCD_DATA_DIR=\"/var/lib/etcd/default.etcd\"\\nETCD_LISTEN_CLIENT_URLS=\"$protocol://$myip:2379,http://127.0.0.1:2379\"\\nETCD_LISTEN_PEER_URLS=\"$protocol://$myip:2380\"\\n\\nETCD_ADVERTISE_CLIENT_URLS=\"$protocol://$myip:2379,http://127.0.0.1:2379\"\\nETCD_INITIAL_ADVERTISE_PEER_URLS=\"$protocol://$myip:2380\"\\nETCD_DISCOVERY=\"$ETCD_DISCOVERY_URL\"\\nEOF\\n\\nif [ \"$TLS_DISABLED\" = \"False\" ]; then\\n\\ncat >> /etc/etcd/etcd.conf <<EOF\\nETCD_CA_FILE=$cert_dir/ca.crt\\nETCD_CERT_FILE=$cert_dir/server.crt\\nETCD_KEY_FILE=$cert_dir/server.key\\nETCD_PEER_CA_FILE=$cert_dir/ca.crt\\nETCD_PEER_CERT_FILE=$cert_dir/server.crt\\nETCD_PEER_KEY_FILE=$cert_dir/server.key\\nEOF\\n\\nfi\\n\\nif [ -n \"$HTTP_PROXY\" ]; then\\n    echo \"ETCD_DISCOVERY_PROXY=$HTTP_PROXY\" >> /etc/etcd/etcd.conf\\nfi\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/make-cert-client.sh': u'#!/bin/sh\\n\\n# Copyright 2014 The Kubernetes Authors All rights reserved.\\n#\\n# Licensed under the Apache License, Version 2.0 (the \"License\");\\n# you may not use this file except in compliance with the License.\\n# You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \"AS IS\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n. /etc/sysconfig/heat-params\\n\\nset -o errexit\\nset -o nounset\\nset -o pipefail\\n\\nif [ \"$TLS_DISABLED\" == \"True\" ]; then\\n    exit 0\\nfi\\n\\ncert_dir=/srv/kubernetes\\ncert_conf_dir=${cert_dir}/conf\\n\\nmkdir -p \"$cert_dir\"\\nmkdir -p \"$cert_conf_dir\"\\n\\nCA_CERT=$cert_dir/ca.crt\\nCLIENT_CERT=$cert_dir/client.crt\\nCLIENT_CSR=$cert_dir/client.csr\\nCLIENT_KEY=$cert_dir/client.key\\n\\n#Get a token by user credentials and trust\\nauth_json=$(cat << EOF\\n{\\n    \"auth\": {\\n        \"identity\": {\\n            \"methods\": [\\n                \"password\"\\n            ],\\n            \"password\": {\\n                \"user\": {\\n                    \"id\": \"$TRUSTEE_USER_ID\",\\n                    \"password\": \"$TRUSTEE_PASSWORD\"\\n                }\\n            }\\n        },\\n        \"scope\": {\\n            \"OS-TRUST:trust\": {\\n                \"id\": \"$TRUST_ID\"\\n            }\\n        }\\n    }\\n}\\nEOF\\n)\\n\\n#trust is introduced in Keystone v3 version\\nAUTH_URL=${AUTH_URL/v2.0/v3}\\ncontent_type=\\'Content-Type: application/json\\'\\nurl=\"$AUTH_URL/auth/tokens\"\\nUSER_TOKEN=`curl -k -s -i -X POST -H \"$content_type\" -d \"$auth_json\" $url \\\\\\n    | grep X-Subject-Token | awk \\'{print $2}\\' | tr -d \\'[[:space:]]\\'`\\n\\n# Get CA certificate for this cluster\\ncurl -k -X GET \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    $MAGNUM_URL/certificates/$CLUSTER_UUID | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > $CA_CERT\\n\\n# Create config for client\\'s csr\\ncat > ${cert_conf_dir}/client.conf <<EOF\\n[req]\\ndistinguished_name = req_distinguished_name\\nreq_extensions     = req_ext\\nprompt = no\\n[req_distinguished_name]\\nCN = kubernetes.invalid\\n[req_ext]\\nkeyUsage=critical,digitalSignature,keyEncipherment\\nextendedKeyUsage=clientAuth\\nsubjectAltName=dirName:kubelet,dirName:kubeproxy\\n[kubelet]\\nCN=kubelet\\n[kubeproxy]\\nCN=kube-proxy\\nEOF\\n\\n# Generate client\\'s private key and csr\\nopenssl genrsa -out \"${CLIENT_KEY}\" 4096\\nchmod 400 \"${CLIENT_KEY}\"\\nopenssl req -new -days 1000 \\\\\\n        -key \"${CLIENT_KEY}\" \\\\\\n        -out \"${CLIENT_CSR}\" \\\\\\n        -reqexts req_ext \\\\\\n        -config \"${cert_conf_dir}/client.conf\"\\n\\n# Send csr to Magnum to have it signed\\ncsr_req=$(python -c \"import json; fp = open(\\'${CLIENT_CSR}\\'); print json.dumps({\\'cluster_uuid\\': \\'$CLUSTER_UUID\\', \\'csr\\': fp.read()}); fp.close()\")\\ncurl -k -X POST \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    -H \"Content-Type: application/json\" \\\\\\n    -d \"$csr_req\" \\\\\\n    $MAGNUM_URL/certificates | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > ${CLIENT_CERT}\\n\\n# Common certs and key are created for both etcd and kubernetes services.\\n# Both etcd and kube user should have permission to access the certs and key.\\ngroupadd kube_etcd\\nusermod -a -G kube_etcd etcd\\nusermod -a -G kube_etcd kube\\nchmod 550 \"${cert_dir}\"\\nchown -R kube:kube_etcd \"${cert_dir}\"\\nchmod 440 $CLIENT_KEY\\n\\nsed -i \\'\\n    s|CA_CERT|\\'\"$CA_CERT\"\\'|\\n    s|CLIENT_CERT|\\'\"$CLIENT_CERT\"\\'|\\n    s|CLIENT_KEY|\\'\"$CLIENT_KEY\"\\'|\\n\\' /srv/kubernetes/kubeconfig.yaml\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/kube-ui-service.sh': u'#!/bin/sh\\n\\n# this service is required because docker will start only after cloud init was finished\\n# due to the service dependencies in Fedora Atomic (docker <- docker-storage-setup <- cloud-final)\\n\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    KUBEUI_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/kube-ui:v4\"\\nelse\\n    KUBEUI_IMAGE=\"gcr.io/google_containers/kube-ui:v4\"\\nfi\\n\\nKUBE_UI_RC=/srv/kubernetes/manifests/kube-ui-rc.yaml\\n\\n[ -f ${KUBE_UI_RC} ] || {\\n    echo \"Writing File: $KUBE_UI_RC\"\\n    mkdir -p $(dirname ${KUBE_UI_RC})\\n    cat << EOF > ${KUBE_UI_RC}\\napiVersion: v1\\nkind: ReplicationController\\nmetadata:\\n  name: kube-ui-v4\\n  namespace: kube-system\\n  labels:\\n    k8s-app: kube-ui\\n    version: v4\\n    kubernetes.io/cluster-service: \"true\"\\nspec:\\n  replicas: 1\\n  selector:\\n    k8s-app: kube-ui\\n    version: v4\\n  template:\\n    metadata:\\n      labels:\\n        k8s-app: kube-ui\\n        version: v4\\n        kubernetes.io/cluster-service: \"true\"\\n    spec:\\n      containers:\\n      - name: kube-ui\\n        image: ${KUBEUI_IMAGE}\\n        resources:\\n          limits:\\n            cpu: 100m\\n            memory: 50Mi\\n        ports:\\n        - containerPort: 8080\\nEOF\\n}\\n\\nKUBE_UI_SVC=/srv/kubernetes/manifests/kube-ui-svc.yaml\\n[ -f ${KUBE_UI_SVC} ] || {\\n    echo \"Writing File: $KUBE_UI_SVC\"\\n    mkdir -p $(dirname ${KUBE_UI_SVC})\\n    cat << EOF > ${KUBE_UI_SVC}\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: kube-ui\\n  namespace: kube-system\\n  labels:\\n    k8s-app: kube-ui\\n    kubernetes.io/cluster-service: \"true\"\\n    kubernetes.io/name: \"KubeUI\"\\nspec:\\n  selector:\\n    k8s-app: kube-ui\\n  ports:\\n  - port: 80\\n    targetPort: 8080\\nEOF\\n}\\n\\nKUBE_UI_BIN=/usr/local/bin/kube-ui\\n[ -f ${KUBE_UI_BIN} ] || {\\n    echo \"Writing File: $KUBE_UI_BIN\"\\n    mkdir -p $(dirname ${KUBE_UI_BIN})\\n    cat << EOF > ${KUBE_UI_BIN}\\n#!/bin/sh\\nuntil curl -sf \"http://127.0.0.1:8080/healthz\"\\ndo\\n    echo \"Waiting for Kubernetes API...\"\\n    sleep 5\\ndone\\n\\n#echo check for existence of kube-ui-v4 replication controller\\n/usr/bin/kubectl get rc kube-ui-v4 --namespace=kube-system\\n\\nif [ \"\\\\$?\" != \"0\" ]; then\\n    /usr/bin/kubectl create -f /srv/kubernetes/manifests/kube-ui-rc.yaml --namespace=kube-system\\nfi\\n\\n#echo check for existence of kube-ui service\\n/usr/bin/kubectl get service kube-ui --namespace=kube-system\\n\\nif [ \"\\\\$?\" != \"0\" ]; then\\n    /usr/bin/kubectl create -f /srv/kubernetes/manifests/kube-ui-svc.yaml --namespace=kube-system\\nfi\\nEOF\\n}\\n\\nKUBE_UI_SERVICE=/etc/systemd/system/kube-ui.service\\n[ -f ${KUBE_UI_SERVICE} ] || {\\n    echo \"Writing File: $KUBE_UI_SERVICE\"\\n    mkdir -p $(dirname ${KUBE_UI_SERVICE})\\n    cat << EOF > ${KUBE_UI_SERVICE}\\n[Unit]\\nAfter=kube-system-namespace.service\\nRequires=kubelet.service\\nWants=kube-system-namespace.service\\n\\n[Service]\\nType=oneshot\\nEnvironment=HOME=/root\\nEnvironmentFile=-/etc/kubernetes/config\\nExecStart=${KUBE_UI_BIN}\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n}\\n\\nchown root:root ${KUBE_UI_BIN}\\nchmod 0755 ${KUBE_UI_BIN}\\n\\nchown root:root ${KUBE_UI_SERVICE}\\nchmod 0644 ${KUBE_UI_SERVICE}\\n\\nsystemctl enable kube-ui\\nsystemctl start --no-block kube-ui\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/network-config-service.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$NETWORK_DRIVER\" != \"flannel\" ]; then\\n    exit 0\\nfi\\nCERT_DIR=/srv/kubernetes\\nPROTOCOL=https\\nFLANNEL_OPTIONS=\"-etcd-cafile $CERT_DIR/ca.crt \\\\\\n-etcd-certfile $CERT_DIR/server.crt \\\\\\n-etcd-keyfile $CERT_DIR/server.key\"\\nETCD_CURL_OPTIONS=\"--cacert $CERT_DIR/ca.crt \\\\\\n--cert $CERT_DIR/server.crt --key $CERT_DIR/server.key\"\\nFLANNELD_CONFIG=/etc/sysconfig/flanneld\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    PROTOCOL=http\\n    FLANNEL_OPTIONS=\"\"\\n    ETCD_CURL_OPTIONS=\"\"\\nfi\\n\\nsed -i \\'/FLANNEL_OPTIONS/\\'d $FLANNELD_CONFIG\\n\\ncat >> $FLANNELD_CONFIG <<EOF\\nFLANNEL_OPTIONS=\"$FLANNEL_OPTIONS\"\\nEOF\\n\\n. $FLANNELD_CONFIG\\n\\nFLANNEL_CONFIG_BIN=/usr/local/bin/flannel-config\\nFLANNEL_CONFIG_SERVICE=/etc/systemd/system/flannel-config.service\\nFLANNEL_JSON=/etc/sysconfig/flannel-network.json\\n\\necho \"creating $FLANNEL_CONFIG_BIN\"\\ncat > $FLANNEL_CONFIG_BIN <<EOF\\n#!/bin/sh\\n\\nif ! [ -f \"$FLANNEL_JSON\" ]; then\\n  echo \"ERROR: missing network configuration file\" >&2\\n  exit 1\\nfi\\n\\nif ! [ \"$FLANNEL_ETCD\" ] && [ \"$FLANNEL_ETCD_KEY\" ]; then\\n  echo \"ERROR: missing required configuration\" >&2\\n  exit 1\\nfi\\n\\necho \"creating flanneld config in etcd\"\\nwhile ! curl -sf -L $ETCD_CURL_OPTIONS \\\\\\n        $FLANNEL_ETCD/v2/keys${FLANNEL_ETCD_KEY}/config \\\\\\n        -X PUT --data-urlencode value@${FLANNEL_JSON}; do\\n    echo \"waiting for etcd\"\\n    sleep 1\\ndone\\nEOF\\n\\ncat > $FLANNEL_CONFIG_SERVICE <<EOF\\n[Unit]\\nAfter=etcd.service\\nRequires=etcd.service\\n\\n[Service]\\nType=oneshot\\nEnvironmentFile=/etc/sysconfig/flanneld\\nExecStart=$FLANNEL_CONFIG_BIN\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n\\nchown root:root $FLANNEL_CONFIG_BIN\\nchmod 0755 $FLANNEL_CONFIG_BIN\\n\\nchown root:root $FLANNEL_CONFIG_SERVICE\\nchmod 0644 $FLANNEL_CONFIG_SERVICE\\n\\nsystemctl enable flannel-config\\nsystemctl start --no-block flannel-config\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/configure_docker_storage_driver_atomic.sh': u'# This file contains docker storage drivers configuration for fedora\\n# atomic hosts. Currently, devicemapper and overlay are supported.\\n\\n# Remove any existing docker-storage configuration. In case of an\\n# existing configuration, docker-storage-setup will fail.\\nclear_docker_storage_configuration () {\\n    if [ -f /etc/sysconfig/docker-storage ]; then\\n        sed -i \"/^DOCKER_STORAGE_OPTIONS=/ s/=.*/=/\" /etc/sysconfig/docker-storage\\n    fi\\n}\\n\\n# Configure docker storage with xfs as backing filesystem.\\nconfigure_overlay () {\\n    clear_docker_storage_configuration\\n\\n    rm -rf /var/lib/docker/*\\n\\n    if [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n        mkfs.xfs -f ${device_path}\\n        echo \"${device_path} /var/lib/docker xfs defaults 0 0\" >> /etc/fstab\\n        mount -a\\n    fi\\n\\n    echo \"STORAGE_DRIVER=overlay\" > /etc/sysconfig/docker-storage-setup\\n\\n    # SELinux must be enabled and in enforcing mode on the physical\\n    # machine, but must be disabled in the container when performing\\n    # container separation\\n    sed -i \"/^OPTIONS=/ s/--selinux-enabled/--selinux-enabled=false/\" /etc/sysconfig/docker\\n}\\n\\n# Configure docker storage with devicemapper using direct LVM\\nconfigure_devicemapper () {\\n    clear_docker_storage_configuration\\n\\n    if [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n        pvcreate -f ${device_path}\\n        vgcreate docker ${device_path}\\n\\n        echo \"VG=docker\" > /etc/sysconfig/docker-storage-setup\\n    fi\\n}\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/network_switcher_private.yaml': u'{\"outputs\": {\"subnet\": {\"value\": {\"get_param\": \"private_subnet\"}}, \"network\": {\"value\": {\"get_param\": \"private_network\"}}}, \"heat_template_version\": \"2014-10-16\", \"parameters\": {\"private_network\": {\"default\": \"\", \"type\": \"string\"}, \"existing_subnet\": {\"default\": \"\", \"type\": \"string\"}, \"existing_network\": {\"default\": \"\", \"type\": \"string\"}, \"private_subnet\": {\"default\": \"\", \"type\": \"string\"}}}', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/wc-notify-master.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nWC_NOTIFY_BIN=/usr/local/bin/wc-notify\\nWC_NOTIFY_SERVICE=/etc/systemd/system/wc-notify.service\\n\\ncat > $WC_NOTIFY_BIN <<EOF\\n#!/bin/bash -v\\nuntil curl -sf \"http://127.0.0.1:8080/healthz\"; do\\n    echo \"Waiting for Kubernetes API...\"\\n    sleep 5\\ndone\\n$WAIT_CURL --data-binary \\'{\"status\": \"SUCCESS\"}\\'\\nEOF\\n\\ncat > $WC_NOTIFY_SERVICE <<EOF\\n[Unit]\\nDescription=Notify Heat\\nAfter=docker.service etcd.service\\nRequires=docker.service etcd.service\\n[Service]\\nType=oneshot\\nExecStart=$WC_NOTIFY_BIN\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n\\nchown root:root $WC_NOTIFY_BIN\\nchmod 0755 $WC_NOTIFY_BIN\\n\\nchown root:root $WC_NOTIFY_SERVICE\\nchmod 0644 $WC_NOTIFY_SERVICE\\n\\nsystemctl enable wc-notify\\nsystemctl start --no-block wc-notify', u'file:///opt/stack/magnum/magnum/drivers/common/templates/lb.yaml': u'{\"outputs\": {\"floating_address\": {\"value\": {\"get_attr\": [\"floating\", \"floating_ip_address\"]}}, \"pool_id\": {\"value\": {\"get_resource\": \"pool\"}}, \"address\": {\"value\": {\"get_attr\": [\"loadbalancer\", \"vip_address\"]}}}, \"heat_template_version\": \"2014-10-16\", \"parameters\": {\"external_network\": {\"type\": \"string\"}, \"protocol\": {\"default\": \"TCP\", \"type\": \"string\", \"constraints\": [{\"allowed_values\": [\"TCP\", \"HTTP\"]}]}, \"port\": {\"type\": \"number\"}, \"fixed_subnet\": {\"type\": \"string\"}}, \"resources\": {\"listener\": {\"type\": \"Magnum::Optional::Neutron::LBaaS::Listener\", \"properties\": {\"protocol_port\": {\"get_param\": \"port\"}, \"protocol\": {\"get_param\": \"loadbalancing_protocol\"}, \"loadbalancer\": {\"get_resource\": \"loadbalancer\"}}}, \"floating\": {\"type\": \"Magnum::Optional::Neutron::LBaaS::FloatingIP\", \"properties\": {\"floating_network\": {\"get_param\": \"external_network\"}, \"port_id\": {\"get_attr\": [\"loadbalancer\", \"vip_port_id\"]}}}, \"loadbalancer\": {\"type\": \"Magnum::Optional::Neutron::LBaaS::LoadBalancer\", \"properties\": {\"vip_subnet\": {\"get_param\": \"fixed_subnet\"}}}, \"pool\": {\"type\": \"Magnum::Optional::Neutron::LBaaS::Pool\", \"properties\": {\"lb_algorithm\": \"ROUND_ROBIN\", \"listener\": {\"get_resource\": \"listener\"}, \"protocol\": {\"get_param\": \"loadbalancing_protocol\"}}}, \"monitor\": {\"type\": \"Magnum::Optional::Neutron::LBaaS::HealthMonitor\", \"properties\": {\"delay\": 5, \"max_retries\": 5, \"type\": \"TCP\", \"timeout\": 5, \"pool\": {\"get_resource\": \"pool\"}}}}}', u'file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/api_gateway_switcher_master.yaml': u'{\"outputs\": {\"public_ip\": {\"value\": {\"get_param\": \"master_public_ip\"}}, \"private_ip\": {\"value\": {\"get_param\": \"master_private_ip\"}}}, \"heat_template_version\": \"2014-10-16\", \"description\": \"This is a template resource that accepts public and private IPs from both a Neutron LBaaS Pool and a master node. It connects the master inputs to its outputs, essentially acting as one state of a multiplexer.\\\\n\", \"parameters\": {\"pool_public_ip\": {\"default\": \"\", \"type\": \"string\"}, \"pool_private_ip\": {\"default\": \"\", \"type\": \"string\"}, \"master_public_ip\": {\"default\": \"\", \"type\": \"string\"}, \"master_private_ip\": {\"default\": \"\", \"type\": \"string\"}}}', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/add-proxy.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nDOCKER_HTTP_PROXY_CONF=/etc/systemd/system/docker.service.d/http_proxy.conf\\n\\nDOCKER_HTTPS_PROXY_CONF=/etc/systemd/system/docker.service.d/https_proxy.conf\\n\\nDOCKER_NO_PROXY_CONF=/etc/systemd/system/docker.service.d/no_proxy.conf\\n\\nDOCKER_RESTART=0\\n\\nBASH_RC=/etc/bashrc\\n\\nmkdir -p /etc/systemd/system/docker.service.d\\n\\nif [ -n \"$HTTP_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_HTTP_PROXY_CONF\\n    [Service]\\n    Environment=HTTP_PROXY=$HTTP_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x http_proxy=$HTTP_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting http_proxy\"\\n    fi\\nfi\\n\\nif [ -n \"$HTTPS_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_HTTPS_PROXY_CONF\\n    [Service]\\n    Environment=HTTPS_PROXY=$HTTPS_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x https_proxy=$HTTPS_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting https_proxy\"\\n    fi\\nfi\\n\\nif [ -n \"$NO_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_NO_PROXY_CONF\\n    [Service]\\n    Environment=NO_PROXY=$NO_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x no_proxy=$NO_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting no_proxy\"\\n    fi\\nfi\\n\\nif [ \"$DOCKER_RESTART\" -eq 1 ]; then\\n    systemctl daemon-reload\\n    systemctl --no-block restart docker.service\\nfi\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/make-cert.sh': u'#!/bin/sh\\n\\n# Copyright 2014 The Kubernetes Authors All rights reserved.\\n#\\n# Licensed under the Apache License, Version 2.0 (the \"License\");\\n# you may not use this file except in compliance with the License.\\n# You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \"AS IS\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n. /etc/sysconfig/heat-params\\n\\nset -o errexit\\nset -o nounset\\nset -o pipefail\\n\\nif [ \"$TLS_DISABLED\" == \"True\" ]; then\\n    exit 0\\nfi\\n\\nif [[ -z \"${KUBE_NODE_PUBLIC_IP}\" ]]; then\\n    KUBE_NODE_PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\\nfi\\nif [[ -z \"${KUBE_NODE_IP}\" ]]; then\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nsans=\"IP:${KUBE_NODE_PUBLIC_IP},IP:${KUBE_NODE_IP}\"\\nif [ \"${KUBE_NODE_PUBLIC_IP}\" != \"${KUBE_API_PUBLIC_ADDRESS}\" ] \\\\\\n        && [ -n \"${KUBE_API_PUBLIC_ADDRESS}\" ]; then\\n    sans=\"${sans},IP:${KUBE_API_PUBLIC_ADDRESS}\"\\nfi\\nif [ \"${KUBE_NODE_IP}\" != \"${KUBE_API_PRIVATE_ADDRESS}\" ] \\\\\\n        && [ -n \"${KUBE_API_PRIVATE_ADDRESS}\" ]; then\\n    sans=\"${sans},IP:${KUBE_API_PRIVATE_ADDRESS}\"\\nfi\\nMASTER_HOSTNAME=${MASTER_HOSTNAME:-}\\nif [[ -n \"${MASTER_HOSTNAME}\" ]]; then\\n    sans=\"${sans},DNS:${MASTER_HOSTNAME}\"\\nfi\\nsans=\"${sans},IP:127.0.0.1\"\\n\\ncert_dir=/srv/kubernetes\\ncert_conf_dir=${cert_dir}/conf\\n\\nmkdir -p \"$cert_dir\"\\nmkdir -p \"$cert_conf_dir\"\\n\\nCA_CERT=$cert_dir/ca.crt\\nSERVER_CERT=$cert_dir/server.crt\\nSERVER_CSR=$cert_dir/server.csr\\nSERVER_KEY=$cert_dir/server.key\\n\\n#Get a token by user credentials and trust\\nauth_json=$(cat << EOF\\n{\\n    \"auth\": {\\n        \"identity\": {\\n            \"methods\": [\\n                \"password\"\\n            ],\\n            \"password\": {\\n                \"user\": {\\n                    \"id\": \"$TRUSTEE_USER_ID\",\\n                    \"password\": \"$TRUSTEE_PASSWORD\"\\n                }\\n            }\\n        },\\n        \"scope\": {\\n            \"OS-TRUST:trust\": {\\n                \"id\": \"$TRUST_ID\"\\n            }\\n        }\\n    }\\n}\\nEOF\\n)\\n\\n#trust is introduced in Keystone v3 version\\nAUTH_URL=${AUTH_URL/v2.0/v3}\\ncontent_type=\\'Content-Type: application/json\\'\\nurl=\"$AUTH_URL/auth/tokens\"\\nUSER_TOKEN=`curl -k -s -i -X POST -H \"$content_type\" -d \"$auth_json\" $url \\\\\\n    | grep X-Subject-Token | awk \\'{print $2}\\' | tr -d \\'[[:space:]]\\'`\\n\\n# Get CA certificate for this cluster\\ncurl -k -X GET \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    $MAGNUM_URL/certificates/$CLUSTER_UUID | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > ${CA_CERT}\\n\\n# Create config for server\\'s csr\\ncat > ${cert_conf_dir}/server.conf <<EOF\\n[req]\\ndistinguished_name = req_distinguished_name\\nreq_extensions     = req_ext\\nprompt = no\\n[req_distinguished_name]\\nCN = kubernetes.invalid\\n[req_ext]\\nsubjectAltName = ${sans}\\nextendedKeyUsage = clientAuth,serverAuth\\nEOF\\n\\n# Generate server\\'s private key and csr\\nopenssl genrsa -out \"${SERVER_KEY}\" 4096\\nchmod 400 \"${SERVER_KEY}\"\\nopenssl req -new -days 1000 \\\\\\n        -key \"${SERVER_KEY}\" \\\\\\n        -out \"${SERVER_CSR}\" \\\\\\n        -reqexts req_ext \\\\\\n        -config \"${cert_conf_dir}/server.conf\"\\n\\n# Send csr to Magnum to have it signed\\ncsr_req=$(python -c \"import json; fp = open(\\'${SERVER_CSR}\\'); print json.dumps({\\'cluster_uuid\\': \\'$CLUSTER_UUID\\', \\'csr\\': fp.read()}); fp.close()\")\\ncurl -k -X POST \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    -H \"Content-Type: application/json\" \\\\\\n    -d \"$csr_req\" \\\\\\n    $MAGNUM_URL/certificates | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > ${SERVER_CERT}\\n\\n# Common certs and key are created for both etcd and kubernetes services.\\n# Both etcd and kube user should have permission to access the certs and key.\\ngroupadd kube_etcd\\nusermod -a -G kube_etcd etcd\\nusermod -a -G kube_etcd kube\\nchmod 550 \"${cert_dir}\"\\nchown -R kube:kube_etcd \"${cert_dir}\"\\nchmod 440 $SERVER_KEY\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/enable-kube-proxy-minion.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    HYPERKUBE_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/hyperkube:${KUBE_VERSION}\"\\nelse\\n    HYPERKUBE_IMAGE=\"gcr.io/google_containers/hyperkube:${KUBE_VERSION}\"\\nfi\\n\\ninit_templates () {\\n    local KUBE_PROTOCOL=\"https\"\\n    local KUBE_CONFIG=\"/srv/kubernetes/kubeconfig.yaml\"\\n    if [ \"${TLS_DISABLED}\" = \"True\" ]; then\\n        KUBE_PROTOCOL=\"http\"\\n        KUBE_CONFIG=\\n    fi\\n\\n    local MASTER=\"${KUBE_PROTOCOL}://${KUBE_MASTER_IP}:${KUBE_API_PORT}\"\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-proxy.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-proxy\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-proxy\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - proxy\\n    - --master=${MASTER}\\n    - --kubeconfig=${KUBE_CONFIG}\\n    - --logtostderr=true\\n    - --v=0\\n    securityContext:\\n      privileged: true\\n    volumeMounts:\\n    - mountPath: /srv/kubernetes\\n      name: \"srv-kube\"\\n      readOnly: true\\n  volumes:\\n  - hostPath:\\n      path: \"/srv/kubernetes\"\\n    name: \"srv-kube\"\\nEOF\\n    }\\n}\\n\\ninit_templates\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/enable-docker-registry.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$REGISTRY_ENABLED\" = \"False\" ]; then\\n    exit 0\\nfi\\n\\necho \"starting docker registry ...\"\\nsystemctl daemon-reload\\nsystemctl enable registry\\nsystemctl --no-block start registry\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/network.yaml': u'{\"outputs\": {\"fixed_network\": {\"description\": \"Network ID where to provision machines\\\\n\", \"value\": {\"get_attr\": [\"network_switch\", \"network\"]}}, \"fixed_subnet\": {\"description\": \"Subnet ID where to provision machines\\\\n\", \"value\": {\"get_attr\": [\"network_switch\", \"subnet\"]}}}, \"heat_template_version\": \"2014-10-16\", \"description\": \"Creates network resources for the cluster. allocate a network and router for our server.\\\\n\", \"parameters\": {\"existing_subnet\": {\"default\": \"\", \"type\": \"string\"}, \"existing_network\": {\"default\": \"\", \"type\": \"string\"}, \"private_network_cidr\": {\"type\": \"string\", \"description\": \"network range for fixed ip network\"}, \"private_network_name\": {\"default\": \"\", \"type\": \"string\", \"description\": \"fixed network name\"}, \"external_network\": {\"type\": \"string\", \"description\": \"uuid/name of a network to use for floating ip addresses\"}, \"dns_nameserver\": {\"type\": \"string\", \"description\": \"address of a dns nameserver reachable in your environment\"}}, \"resources\": {\"private_network\": {\"type\": \"Magnum::Optional::Neutron::Net\", \"properties\": {\"name\": {\"get_param\": \"private_network_name\"}}}, \"extrouter_inside\": {\"type\": \"Magnum::Optional::Neutron::RouterInterface\", \"properties\": {\"router_id\": {\"get_resource\": \"extrouter\"}, \"subnet\": {\"get_resource\": \"private_subnet\"}}}, \"extrouter\": {\"type\": \"Magnum::Optional::Neutron::Router\", \"properties\": {\"external_gateway_info\": {\"network\": {\"get_param\": \"external_network\"}}}}, \"private_subnet\": {\"type\": \"Magnum::Optional::Neutron::Subnet\", \"properties\": {\"cidr\": {\"get_param\": \"private_network_cidr\"}, \"dns_nameservers\": [{\"get_param\": \"dns_nameserver\"}], \"network\": {\"get_resource\": \"private_network\"}}}, \"network_switch\": {\"type\": \"Magnum::NetworkSwitcher\", \"properties\": {\"private_network\": {\"get_resource\": \"private_network\"}, \"existing_subnet\": {\"get_param\": \"existing_subnet\"}, \"existing_network\": {\"get_param\": \"existing_network\"}, \"private_subnet\": {\"get_resource\": \"private_subnet\"}}}}}', u'file:///opt/stack/magnum/magnum/drivers/common/templates/environments/with_private_network.yaml': u'{\"resource_registry\": {\"Magnum::NetworkSwitcher\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/network_switcher_private.yaml\", \"Magnum::Optional::Neutron::RouterInterface\": \"OS::Neutron::RouterInterface\", \"Magnum::Optional::Neutron::Subnet\": \"OS::Neutron::Subnet\", \"Magnum::Optional::Neutron::Router\": \"OS::Neutron::Router\", \"Magnum::Optional::Neutron::Net\": \"OS::Neutron::Net\"}}', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/configure-kubernetes-minion.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\necho \"configuring kubernetes (minion)\"\\n\\nif [ -z \"$KUBE_NODE_IP\" ]; then\\n    # FIXME(yuanying): Set KUBE_NODE_IP correctly\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nCERT_DIR=/srv/kubernetes\\nPROTOCOL=https\\nFLANNEL_OPTIONS=\"-etcd-cafile $CERT_DIR/ca.crt \\\\\\n-etcd-certfile $CERT_DIR/client.crt \\\\\\n-etcd-keyfile $CERT_DIR/client.key\"\\nETCD_CURL_OPTIONS=\"--cacert $CERT_DIR/ca.crt \\\\\\n--cert $CERT_DIR/client.crt --key $CERT_DIR/client.key\"\\nETCD_SERVER_IP=${ETCD_SERVER_IP:-$KUBE_MASTER_IP}\\nKUBE_PROTOCOL=\"https\"\\nKUBE_CONFIG=\"\"\\nFLANNELD_CONFIG=/etc/sysconfig/flanneld\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    PROTOCOL=http\\n    FLANNEL_OPTIONS=\"\"\\n    ETCD_CURL_OPTIONS=\"\"\\nfi\\n\\nsed -i \\'/FLANNEL_OPTIONS/\\'d $FLANNELD_CONFIG\\n\\ncat >> $FLANNELD_CONFIG <<EOF\\nFLANNEL_OPTIONS=\"$FLANNEL_OPTIONS\"\\nEOF\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    KUBE_PROTOCOL=\"http\"\\nelse\\n    KUBE_CONFIG=\"--kubeconfig=/srv/kubernetes/kubeconfig.yaml\"\\nfi\\nKUBE_MASTER_URI=\"$KUBE_PROTOCOL://$KUBE_MASTER_IP:$KUBE_API_PORT\"\\n\\nsed -i \\'\\n    /^KUBE_ALLOW_PRIV=/ s/=.*/=\"--allow-privileged=\\'\"$KUBE_ALLOW_PRIV\"\\'\"/\\n    /^KUBE_ETCD_SERVERS=/ s|=.*|=\"--etcd-servers=http://\\'\"$ETCD_SERVER_IP\"\\':2379\"|\\n    /^KUBE_MASTER=/ s|=.*|=\"--master=\\'\"$KUBE_MASTER_URI\"\\'\"|\\n\\' /etc/kubernetes/config\\n\\n# NOTE:  Kubernetes plugin for Openstack requires that the node name registered\\n# in the kube-apiserver be the same as the Nova name of the instance, so that\\n# the plugin can use the name to query for attributes such as IP, etc.\\n# The hostname of the node is set to be the Nova name of the instance, and\\n# the option --hostname-override for kubelet uses the hostname to register the node.\\n# Using any other name will break the load balancer and cinder volume features.\\nHOSTNAME=$(hostname --short | sed \\'s/\\\\.novalocal//\\')\\nKUBELET_ARGS=\"--config=/etc/kubernetes/manifests --cadvisor-port=4194 ${KUBE_CONFIG} --hostname-override=${HOSTNAME}\"\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    KUBELET_ARGS=\"${KUBELET_ARGS} --pod-infra-container-image=${INSECURE_REGISTRY_URL}/google_containers/pause\\\\:0.8.0\"\\n    echo \"INSECURE_REGISTRY=\\'--insecure-registry ${INSECURE_REGISTRY_URL}\\'\" >> /etc/sysconfig/docker\\nfi\\n\\nsed -i \\'\\n    /^KUBELET_ADDRESS=/ s/=.*/=\"--address=0.0.0.0\"/\\n    /^KUBELET_HOSTNAME=/ s/=.*/=\"\"/\\n    /^KUBELET_API_SERVER=/ s|=.*|=\"--api-servers=\\'\"$KUBE_MASTER_URI\"\\'\"|\\n    /^KUBELET_ARGS=/ s|=.*|=\"\\'\"${KUBELET_ARGS}\"\\'\"|\\n\\' /etc/kubernetes/kubelet\\n\\nsed -i \\'\\n    /^KUBE_PROXY_ARGS=/ s|=.*|=\\'\"$KUBE_CONFIG\"\\'|\\n\\' /etc/kubernetes/proxy\\n\\nif [ \"$NETWORK_DRIVER\" = \"flannel\" ]; then\\n    sed -i \\'\\n        /^FLANNEL_ETCD=/ s|=.*|=\"\\'\"$PROTOCOL\"\\'://\\'\"$ETCD_SERVER_IP\"\\':2379\"|\\n    \\' $FLANNELD_CONFIG\\n\\n    # Make sure etcd has a flannel configuration\\n    . $FLANNELD_CONFIG\\n    until curl -sf $ETCD_CURL_OPTIONS \\\\\\n        \"$FLANNEL_ETCD/v2/keys${FLANNEL_ETCD_KEY}/config?quorum=false&recursive=false&sorted=false\"\\n    do\\n        echo \"Waiting for flannel configuration in etcd...\"\\n        sleep 5\\n    done\\nfi\\n\\nif [ \"$VOLUME_DRIVER\" = \"cinder\" ]; then\\n    CLOUD_CONFIG=/etc/kubernetes/kube_openstack_config\\n    KUBERNETES=/etc/kubernetes\\n    if [ ! -d ${KUBERNETES} -o ! -f ${CLOUD_CONFIG} ]; then\\n        mkdir -p $KUBERNETES\\n    fi\\n    AUTH_URL=${AUTH_URL/v3/v2.0}\\ncat > $CLOUD_CONFIG <<EOF\\n[Global]\\nauth-url=$AUTH_URL\\nusername=$USERNAME\\npassword=$PASSWORD\\nregion=$REGION_NAME\\ntenant-name=$TENANT_NAME\\nEOF\\n\\ncat << _EOC_ >> /etc/kubernetes/kubelet\\n#KUBELET_ARGS=\"$KUBELET_ARGS --cloud-provider=openstack --cloud-config=/etc/kubernetes/kube_openstack_config\"\\n_EOC_\\n\\n    if [ ! -f /usr/bin/udevadm ]; then\\n        ln -s /sbin/udevadm /usr/bin/udevadm\\n    fi\\n\\nfi\\n\\ncat >> /etc/environment <<EOF\\nKUBERNETES_MASTER=$KUBE_MASTER_URI\\nEOF\\n\\nhostname `hostname | sed \\'s/.novalocal//\\'`\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/write-network-config.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$NETWORK_DRIVER\" != \"flannel\" ]; then\\n    exit 0\\nfi\\n\\n. /etc/sysconfig/flanneld\\n\\nFLANNEL_JSON=/etc/sysconfig/flannel-network.json\\nFLANNELD_CONFIG=/etc/sysconfig/flanneld\\n\\nsed -i \\'\\n    /^FLANNEL_ETCD=/ s/=.*/=\"http:\\\\/\\\\/127.0.0.1:2379\"/\\n\\' /etc/sysconfig/flanneld\\n\\n# Generate a flannel configuration that we will\\n# store into etcd using curl.\\ncat > $FLANNEL_JSON <<EOF\\n{\\n  \"Network\": \"$FLANNEL_NETWORK_CIDR\",\\n  \"Subnetlen\": $FLANNEL_NETWORK_SUBNETLEN,\\n  \"Backend\": {\\n    \"Type\": \"$FLANNEL_BACKEND\"\\n  }\\n}\\nEOF\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/disable-selinux.sh': u\"#cloud-boothook\\n#!/bin/sh\\n\\nsetenforce 0\\n\\nsed -i '\\n    /^SELINUX=/ s/=.*/=permissive/\\n' /etc/selinux/config\\n\", u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/write-kubeconfig.yaml': u'#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /srv/kubernetes/kubeconfig.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Config\\n      users:\\n      - name: kubeclient\\n        user:\\n          client-certificate: CLIENT_CERT\\n          client-key: CLIENT_KEY\\n      clusters:\\n      - name: kubernetes\\n        cluster:\\n          certificate-authority: CA_CERT\\n      contexts:\\n      - context:\\n          cluster: kubernetes\\n          user: kubeclient\\n        name: service-account-context\\n      current-context: service-account-context\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/enable-services-master.sh': u'#!/bin/sh\\n\\n# make sure we pick up any modified unit files\\nsystemctl daemon-reload\\n\\necho \"starting services\"\\nfor service in etcd docker kube-apiserver kubelet; do\\n    echo \"activating service $service\"\\n    systemctl enable $service\\n    systemctl --no-block start $service\\ndone\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/network-service.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$NETWORK_DRIVER\" != \"flannel\" ]; then\\n    exit 0\\nfi\\n\\nFLANNEL_DOCKER_BRIDGE_BIN=/usr/local/bin/flannel-docker-bridge\\nFLANNEL_DOCKER_BRIDGE_SERVICE=/etc/systemd/system/flannel-docker-bridge.service\\nDOCKER_FLANNEL_CONF=/etc/systemd/system/docker.service.d/flannel.conf\\nFLANNEL_DOCKER_BRIDGE_CONF=/etc/systemd/system/flanneld.service.d/flannel-docker-bridge.conf\\n\\nmkdir -p /etc/systemd/system/docker.service.d\\nmkdir -p /etc/systemd/system/flanneld.service.d\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_BIN <<EOF1\\n#!/bin/sh\\n\\nif ! [ \"\\\\$FLANNEL_SUBNET\" ] && [ \"\\\\$FLANNEL_MTU\" ] ; then\\n  echo \"ERROR: missing required environment variables.\" >&2\\n  exit 1\\nfi\\n\\nmkdir -p /run/flannel/\\ncat > /run/flannel/docker <<EOF2\\nDOCKER_NETWORK_OPTIONS=\"--bip=\\\\$FLANNEL_SUBNET --mtu=\\\\$FLANNEL_MTU\"\\nEOF2\\nEOF1\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_BIN\\nchmod 0755 $FLANNEL_DOCKER_BRIDGE_BIN\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_SERVICE <<EOF\\n[Unit]\\nAfter=flanneld.service\\nBefore=docker.service\\nRequires=flanneld.service\\n\\n[Service]\\nType=oneshot\\nEnvironmentFile=/run/flannel/subnet.env\\nExecStart=/usr/local/bin/flannel-docker-bridge\\n\\n[Install]\\nWantedBy=docker.service\\nEOF\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_SERVICE\\nchmod 0644 $FLANNEL_DOCKER_BRIDGE_SERVICE\\n\\ncat >> $DOCKER_FLANNEL_CONF <<EOF\\n[Unit]\\nRequires=flannel-docker-bridge.service\\nAfter=flannel-docker-bridge.service\\n\\n[Service]\\nEnvironmentFile=/run/flannel/docker\\nEOF\\n\\nchown root:root $DOCKER_FLANNEL_CONF\\nchmod 0644 $DOCKER_FLANNEL_CONF\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_CONF <<EOF\\n[Unit]\\nRequires=flannel-docker-bridge.service\\nBefore=flannel-docker-bridge.service\\n\\n[Install]\\nAlso=flannel-docker-bridge.service\\nEOF\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_CONF\\nchmod 0644 $FLANNEL_DOCKER_BRIDGE_CONF\\n\\necho \"activating service flanneld\"\\nsystemctl enable flanneld\\nsystemctl --no-block start flanneld\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/enable-kube-proxy-master.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    HYPERKUBE_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/hyperkube:${KUBE_VERSION}\"\\nelse\\n    HYPERKUBE_IMAGE=\"gcr.io/google_containers/hyperkube:${KUBE_VERSION}\"\\nfi\\n\\ninit_templates () {\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-proxy.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-proxy\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-proxy\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - proxy\\n    - --master=http://127.0.0.1:8080\\n    - --logtostderr=true\\n    - --v=0\\n    securityContext:\\n      privileged: true\\nEOF\\n    }\\n}\\n\\ninit_templates\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/write-heat-params-master.yaml': u'#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /etc/sysconfig/heat-params\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      KUBE_API_PUBLIC_ADDRESS=\"$KUBE_API_PUBLIC_ADDRESS\"\\n      KUBE_API_PRIVATE_ADDRESS=\"$KUBE_API_PRIVATE_ADDRESS\"\\n      KUBE_API_PORT=\"$KUBE_API_PORT\"\\n      KUBE_NODE_PUBLIC_IP=\"$KUBE_NODE_PUBLIC_IP\"\\n      KUBE_NODE_IP=\"$KUBE_NODE_IP\"\\n      KUBE_ALLOW_PRIV=\"$KUBE_ALLOW_PRIV\"\\n      ENABLE_CINDER=\"$ENABLE_CINDER\"\\n      DOCKER_VOLUME=\"$DOCKER_VOLUME\"\\n      DOCKER_VOLUME_SIZE=\"$DOCKER_VOLUME_SIZE\"\\n      DOCKER_STORAGE_DRIVER=\"$DOCKER_STORAGE_DRIVER\"\\n      NETWORK_DRIVER=\"$NETWORK_DRIVER\"\\n      FLANNEL_NETWORK_CIDR=\"$FLANNEL_NETWORK_CIDR\"\\n      FLANNEL_NETWORK_SUBNETLEN=\"$FLANNEL_NETWORK_SUBNETLEN\"\\n      FLANNEL_BACKEND=\"$FLANNEL_BACKEND\"\\n      PORTAL_NETWORK_CIDR=\"$PORTAL_NETWORK_CIDR\"\\n      ETCD_DISCOVERY_URL=\"$ETCD_DISCOVERY_URL\"\\n      USERNAME=\"$USERNAME\"\\n      PASSWORD=\"$PASSWORD\"\\n      TENANT_NAME=\"$TENANT_NAME\"\\n      CLUSTER_SUBNET=\"$CLUSTER_SUBNET\"\\n      TLS_DISABLED=\"$TLS_DISABLED\"\\n      CLUSTER_UUID=\"$CLUSTER_UUID\"\\n      MAGNUM_URL=\"$MAGNUM_URL\"\\n      HTTP_PROXY=\"$HTTP_PROXY\"\\n      HTTPS_PROXY=\"$HTTPS_PROXY\"\\n      NO_PROXY=\"$NO_PROXY\"\\n      WAIT_CURL=\"$WAIT_CURL\"\\n      KUBE_VERSION=\"$KUBE_VERSION\"\\n      TRUSTEE_USER_ID=\"$TRUSTEE_USER_ID\"\\n      TRUSTEE_PASSWORD=\"$TRUSTEE_PASSWORD\"\\n      TRUST_ID=\"$TRUST_ID\"\\n      AUTH_URL=\"$AUTH_URL\"\\n      INSECURE_REGISTRY_URL=\"$INSECURE_REGISTRY_URL\"\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/configure-docker-registry.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$REGISTRY_ENABLED\" = \"False\" ]; then\\n    exit 0\\nfi\\n\\ncat > /etc/sysconfig/registry-config.yml << EOF\\nversion: 0.1\\nlog:\\n  fields:\\n    service: registry\\nstorage:\\n  cache:\\n    layerinfo: inmemory\\n  swift:\\n    authurl: \"$AUTH_URL\"\\n    region: \"$SWIFT_REGION\"\\n    username: \"$TRUSTEE_USERNAME\"\\n    password: \"$TRUSTEE_PASSWORD\"\\n    domainid: \"$TRUSTEE_DOMAIN_ID\"\\n    trustid: \"$TRUST_ID\"\\n    container: \"$REGISTRY_CONTAINER\"\\n    insecureskipverify: $REGISTRY_INSECURE\\n    chunksize: $REGISTRY_CHUNKSIZE\\nhttp:\\n    addr: :5000\\nEOF\\n\\ncat > /etc/systemd/system/registry.service << EOF\\n[Unit]\\nDescription=Docker registry v2\\nRequires=docker.service\\nAfter=docker.service\\n\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nExecStart=/usr/bin/docker run -d -p $REGISTRY_PORT:5000 --restart=always --name registry -v /etc/sysconfig/registry-config.yml:/etc/docker/registry/config.yml registry:2\\nExecStop=/usr/bin/docker rm -f registry\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/enable-services-minion.sh': u'#!/bin/sh\\n\\n# docker is already enabled and possibly running on centos atomic host\\n# so we need to stop it first and delete the docker0 bridge (which will\\n# be re-created using the flannel-provided subnet).\\necho \"stopping docker\"\\nsystemctl stop docker\\nip link del docker0\\n\\n# make sure we pick up any modified unit files\\nsystemctl daemon-reload\\n\\nfor service in docker kubelet; do\\n    echo \"activating service $service\"\\n    systemctl enable $service\\n    systemctl --no-block start $service\\ndone\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/kube-examples.yaml': u'#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /etc/kubernetes/examples/replication-controller.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: ReplicationController\\n      metadata:\\n        name: nginx-controller\\n      spec:\\n        replicas: 2\\n        # selector identifies the set of pods that this\\n        # replication controller is responsible for managing\\n        selector:\\n          name: nginx\\n        # template defines the \\'cookie cutter\\' used for creating\\n        # new pods when necessary\\n        template:\\n          metadata:\\n            labels:\\n              # Important: these labels need to match the selector above\\n              # The api server enforces this constraint.\\n              app: nginx\\n          spec:\\n            containers:\\n              - name: nginx\\n                image: nginx\\n                ports:\\n                  - containerPort: 80\\n\\n  - path: /etc/kubernetes/examples/pod-nginx-with-label.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Pod\\n      metadata:\\n        name: nginx\\n        labels:\\n          app: nginx\\n      spec:\\n        containers:\\n        - name: nginx\\n          image: nginx\\n          ports:\\n          - containerPort: 80\\n\\n  - path: /etc/kubernetes/examples/service.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Service\\n      metadata:\\n        name: nginx-service\\n      spec:\\n        ports:\\n        - port: 8000 # the port that this service should serve on\\n          # the container on each pod to connect to, can be a name\\n          # (e.g. \\'www\\') or a number (e.g. 80)\\n          targetPort: 80\\n          protocol: TCP\\n        # just like the selector in the replication controller,\\n        # but this time it identifies the set of pods to load balance\\n        # traffic to.\\n        selector:\\n          app: nginx\\n\\n  - path: /etc/kubernetes/examples/README.md\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      Kubernetes 101 (http://kubernetes.io/v1.0/docs/user-guide/walkthrough/README.html)\\n      ==================================================================================\\n\\n      List all nodes:\\n\\n          kubectl get nodes\\n\\n      Replication Controllers:\\n\\n          kubectl create -f /etc/kubernetes/examples/replication-controller.yaml\\n          kubectl get rc\\n          kubectl delete rc nginx-controller\\n\\n      Pods:\\n\\n          kubectl create -f /etc/kubernetes/examples/pod-nginx-with-label.yaml\\n          kubectl get pods\\n          curl http://$(kubectl get pod nginx -o=template -t={{.status.podIP}})\\n\\n      Services:\\n\\n          kubectl create -f /etc/kubernetes/examples/service.yaml\\n          kubectl get services\\n\\n          export SERVICE_IP=$(kubectl get service nginx-service -o=template -t={{.spec.clusterIP}})\\n          export SERVICE_PORT=$(kubectl get service nginx-service -o=template \\'-t={{(index .spec.ports 0).port}}\\')\\n          curl http://${SERVICE_IP}:${SERVICE_PORT}\\n\\n          kubectl delete service nginx-service\\n\\n      Troubleshooting:\\n\\n          kubectl get events\\n\\n          kubectl describe rc nginx-controller\\n\\n          kubectl describe pod nginx\\n\\n          kubectl describe service nginx-service\\n\\n          kubectl exec nginx env\\n\\n          kubectl exec -ti nginx -- bash\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/environments/no_master_lb.yaml': u'{\"resource_registry\": {\"Magnum::ApiGatewaySwitcher\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/api_gateway_switcher_master.yaml\", \"Magnum::Optional::Neutron::LBaaS::PoolMember\": \"OS::Heat::None\", \"Magnum::Optional::Neutron::LBaaS::Pool\": \"OS::Heat::None\", \"Magnum::Optional::Neutron::LBaaS::Listener\": \"OS::Heat::None\", \"Magnum::Optional::Neutron::LBaaS::HealthMonitor\": \"OS::Heat::None\", \"Magnum::Optional::Neutron::LBaaS::LoadBalancer\": \"OS::Heat::None\", \"Magnum::Optional::Neutron::LBaaS::FloatingIP\": \"OS::Heat::None\"}}', u'file:///opt/stack/magnum/magnum/drivers/common/templates/environments/enable_floating_ip.yaml': u'{\"resource_registry\": {\"Magnum::Optional::KubeMinion::Neutron::FloatingIP\": \"OS::Neutron::FloatingIP\", \"Magnum::FloatingIPAddressSwitcher\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/floating_ip_address_switcher_public.yaml\", \"Magnum::Optional::KubeMaster::Neutron::FloatingIP\": \"OS::Neutron::FloatingIP\"}}', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/enable-kube-controller-manager-scheduler.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    HYPERKUBE_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/hyperkube:${KUBE_VERSION}\"\\nelse\\n    HYPERKUBE_IMAGE=\"gcr.io/google_containers/hyperkube:${KUBE_VERSION}\"\\nfi\\n\\n# vars also used by the Kubernetes config files\\nunset KUBE_API_PORT\\nunset KUBE_ALLOW_PRIV\\n\\n# this function generate a list of args (one per line) from a list of possibly nested args\\n# the first parameter is the prefix to be added before each arg\\n# empty args are ignored\\ngenerate_pod_args() {\\n    prefix=$1\\n\\n    for var in \"${@:2}\" ; do\\n        for arg in \"$var\" ; do\\n            echo \"$prefix$arg\"\\n        done\\n    done\\n}\\n\\n\\ninit_templates () {\\n    . /etc/kubernetes/config\\n\\n    . /etc/kubernetes/controller-manager\\n\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-controller-manager.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-controller-manager\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-controller-manager\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - controller-manager\\n    - --leader-elect=true\\n$(generate_pod_args \"    - \" $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBE_MASTER $KUBE_CONTROLLER_MANAGER_ARGS)\\n    livenessProbe:\\n      httpGet:\\n        host: 127.0.0.1\\n        path: /healthz\\n        port: 10252\\n      initialDelaySeconds: 15\\n      timeoutSeconds: 1\\n    volumeMounts:\\n    - mountPath: /etc/ssl/certs\\n      name: ssl-certs-host\\n      readOnly: true\\n    - mountPath: /srv/kubernetes\\n      name: kubernetes-config\\n      readOnly: true\\n    - mountPath: /etc/sysconfig\\n      name: sysconfig\\n      readOnly: true\\n  volumes:\\n  - hostPath:\\n      path: /etc/ssl/certs\\n    name: ssl-certs-host\\n  - hostPath:\\n      path: /srv/kubernetes\\n    name: kubernetes-config\\n  - hostPath:\\n      path: /etc/sysconfig\\n    name: sysconfig\\nEOF\\n    }\\n\\n    . /etc/kubernetes/scheduler\\n\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-scheduler.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-scheduler\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-scheduler\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - scheduler\\n    - --leader-elect=true\\n$(generate_pod_args \"    - \" $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBE_MASTER $KUBE_SCHEDULER_ARGS)\\n    livenessProbe:\\n      httpGet:\\n        host: 127.0.0.1\\n        path: /healthz\\n        port: 10251\\n      initialDelaySeconds: 15\\n      timeoutSeconds: 1\\n    volumeMounts:\\n    - mountPath: /etc/ssl/certs\\n      name: ssl-certs-host\\n      readOnly: true\\n    - mountPath: /srv/kubernetes\\n      name: kubernetes-config\\n      readOnly: true\\n    - mountPath: /etc/sysconfig\\n      name: sysconfig\\n      readOnly: true\\n  volumes:\\n  - hostPath:\\n      path: /etc/ssl/certs\\n    name: ssl-certs-host\\n  - hostPath:\\n      path: /srv/kubernetes\\n    name: kubernetes-config\\n  - hostPath:\\n      path: /etc/sysconfig\\n    name: sysconfig\\nEOF\\n    }\\n}\\n\\ninit_templates\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/write-kube-os-config.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nKUBE_OS_CLOUD_CONFIG=/etc/sysconfig/kube_openstack_config\\n\\n# kubernetes backend only support keystone v2 at this point\\nAUTH_URL=$(echo \"$AUTH_URL\" | sed \\'s/v3/v2.0/\\')\\n\\n# Generate a the configuration for Kubernetes services\\n# to talk to OpenStack Neutron\\ncat > $KUBE_OS_CLOUD_CONFIG <<EOF\\n[Global]\\nauth-url=$AUTH_URL\\nusername=$USERNAME\\npassword=$PASSWORD\\ntenant-name=$TENANT_NAME\\n[LoadBalancer]\\nsubnet-id=$CLUSTER_SUBNET\\ncreate-monitor=yes\\nmonitor-delay=1m\\nmonitor-timeout=30s\\nmonitor-max-retries=3\\nEOF\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/floating_ip_address_switcher_public.yaml': u'{\"outputs\": {\"ip_address\": {\"value\": {\"get_param\": \"public_ip\"}}}, \"heat_template_version\": \"2014-10-16\", \"description\": \"This is a template resource that accepts public and private IPs. It connects public ip address to its outputs, essentially acting as one state of a multiplexer.\\\\n\", \"parameters\": {\"public_ip\": {\"default\": \"\", \"type\": \"string\"}, \"private_ip\": {\"default\": \"\", \"type\": \"string\"}}}', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/configure-kubernetes-master.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\necho \"configuring kubernetes (master)\"\\n\\nif [ -z \"$KUBE_NODE_IP\" ]; then\\n    # FIXME(yuanying): Set KUBE_NODE_IP correctly\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nsed -i \\'\\n    /^KUBE_ALLOW_PRIV=/ s/=.*/=\"--allow-privileged=\\'\"$KUBE_ALLOW_PRIV\"\\'\"/\\n\\' /etc/kubernetes/config\\n\\nKUBE_API_ARGS=\"--runtime-config=api/all=true\"\\nif [ \"$TLS_DISABLED\" == \"True\" ]; then\\n    KUBE_API_ADDRESS=\"--insecure-bind-address=0.0.0.0 --insecure-port=$KUBE_API_PORT\"\\nelse\\n    KUBE_API_ADDRESS=\"--bind-address=0.0.0.0 --secure-port=$KUBE_API_PORT\"\\n    # insecure port is used internaly\\n    KUBE_API_ADDRESS=\"$KUBE_API_ADDRESS --insecure-port=8080\"\\n    KUBE_API_ARGS=\"$KUBE_API_ARGS --tls-cert-file=/srv/kubernetes/server.crt\"\\n    KUBE_API_ARGS=\"$KUBE_API_ARGS --tls-private-key-file=/srv/kubernetes/server.key\"\\n    KUBE_API_ARGS=\"$KUBE_API_ARGS --client-ca-file=/srv/kubernetes/ca.crt\"\\nfi\\n\\nsed -i \\'\\n    /^KUBE_API_ADDRESS=/ s/=.*/=\"\\'\"${KUBE_API_ADDRESS}\"\\'\"/\\n    /^KUBE_SERVICE_ADDRESSES=/ s|=.*|=\"--service-cluster-ip-range=\\'\"$PORTAL_NETWORK_CIDR\"\\'\"|\\n    /^KUBE_API_ARGS=/ s/KUBE_API_ARGS.//\\n    /^KUBE_ETCD_SERVERS=/ s/=.*/=\"--etcd-servers=http:\\\\/\\\\/127.0.0.1:2379\"/\\n    /^KUBE_ADMISSION_CONTROL=/ s/=.*/=\"\"/\\n\\' /etc/kubernetes/apiserver\\ncat << _EOC_ >> /etc/kubernetes/apiserver\\n#Uncomment the following line to disable Load Balancer feature\\nKUBE_API_ARGS=\"$KUBE_API_ARGS\"\\n#Uncomment the following line to enable Load Balancer feature\\n#KUBE_API_ARGS=\"$KUBE_API_ARGS --cloud-config=/etc/sysconfig/kube_openstack_config --cloud-provider=openstack\"\\n_EOC_\\n\\nsed -i \\'\\n    /^KUBELET_ADDRESSES=/ s/=.*/=\"--machines=\\'\"\"\\'\"/\\n    /^KUBE_CONTROLLER_MANAGER_ARGS=/ s/KUBE_CONTROLLER_MANAGER_ARGS.*/#Uncomment the following line to enable Kubernetes Load Balancer feature \\\\n#KUBE_CONTROLLER_MANAGER_ARGS=\"--cloud-config=\\\\/etc\\\\/sysconfig\\\\/kube_openstack_config --cloud-provider=openstack\"/\\n\\' /etc/kubernetes/controller-manager\\n\\nKUBELET_ARGS=\"--register-node=true --register-schedulable=false --config=/etc/kubernetes/manifests --hostname-override=$KUBE_NODE_IP\"\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    KUBELET_ARGS=\"${KUBELET_ARGS} --pod-infra-container-image=${INSECURE_REGISTRY_URL}/google_containers/pause\\\\:0.8.0\"\\n    echo \"INSECURE_REGISTRY=\\'--insecure-registry ${INSECURE_REGISTRY_URL}\\'\" >> /etc/sysconfig/docker\\nfi\\n\\nsed -i \\'\\n    /^KUBELET_ADDRESS=/ s/=.*/=\"--address=0.0.0.0\"/\\n    /^KUBELET_HOSTNAME=/ s/=.*/=\"\"/\\n    /^KUBELET_ARGS=/ s|=.*|=\\'\"$KUBELET_ARGS\"\\'|\\n\\' /etc/kubernetes/kubelet\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/kube-system-namespace-service.sh': u'#!/bin/sh\\n\\n# this service required because docker will start only after cloud init was finished\\n# due service dependencies at Fedora Atomic (docker <- docker-storage-setup <- cloud-final)\\n\\n. /etc/sysconfig/heat-params\\n\\nKUBE_SYSTEM_JSON=/srv/kubernetes/kube-system-namespace.json\\n[ -f ${KUBE_SYSTEM_JSON} ] || {\\n    echo \"Writing File: $KUBE_SYSTEM_JSON\"\\n    mkdir -p $(dirname ${KUBE_SYSTEM_JSON})\\n    cat << EOF > ${KUBE_SYSTEM_JSON}\\n{\\n  \"apiVersion\": \"v1\",\\n  \"kind\": \"Namespace\",\\n  \"metadata\": {\\n    \"name\": \"kube-system\"\\n  }\\n}\\nEOF\\n}\\n\\nKUBE_SYSTEM_BIN=/usr/local/bin/kube-system-namespace\\n[ -f ${KUBE_SYSTEM_BIN} ] || {\\n    echo \"Writing File: $KUBE_SYSTEM_BIN\"\\n    mkdir -p $(dirname ${KUBE_SYSTEM_BIN})\\n    cat << EOF > ${KUBE_SYSTEM_BIN}\\n#!/bin/sh\\nuntil curl -sf \"http://127.0.0.1:8080/healthz\"\\ndo\\n    echo \"Waiting for Kubernetes API...\"\\n    sleep 5\\ndone\\n\\n#check for existence of namespace\\n/usr/bin/kubectl get namespace kube-system\\n\\nif [ \"\\\\$?\" != \"0\" ]; then\\n    /usr/bin/kubectl create -f /srv/kubernetes/kube-system-namespace.json\\nfi\\nEOF\\n}\\n\\nKUBE_SYSTEM_SERVICE=/etc/systemd/system/kube-system-namespace.service\\n[ -f ${KUBE_SYSTEM_SERVICE} ] || {\\n    echo \"Writing File: $KUBE_SYSTEM_SERVICE\"\\n    mkdir -p $(dirname ${KUBE_SYSTEM_SERVICE})\\n    cat << EOF > ${KUBE_SYSTEM_SERVICE}\\n[Unit]\\nAfter=kubelet.service\\nRequires=kubelet.service\\n\\n[Service]\\nType=oneshot\\nEnvironment=HOME=/root\\nEnvironmentFile=-/etc/kubernetes/config\\nExecStart=${KUBE_SYSTEM_BIN}\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n}\\n\\nchown root:root ${KUBE_SYSTEM_BIN}\\nchmod 0755 ${KUBE_SYSTEM_BIN}\\n\\nchown root:root ${KUBE_SYSTEM_SERVICE}\\nchmod 0644 ${KUBE_SYSTEM_SERVICE}\\n\\nsystemctl enable kube-system-namespace\\nsystemctl start --no-block kube-system-namespace\\n', u'file:///opt/stack/magnum/magnum/drivers/k8s_fedora_atomic_v1/templates/kubeminion.yaml': u'{\"outputs\": {\"kube_minion_external_ip\": {\"description\": \"This is the \\\\\"public\\\\\" IP address of the Kubernetes minion node.\\\\n\", \"value\": {\"get_attr\": [\"kube_minion_floating\", \"floating_ip_address\"]}}, \"kube_minion_ip\": {\"description\": \"This is the \\\\\"public\\\\\" IP address of the Kubernetes minion node.\\\\n\", \"value\": {\"get_attr\": [\"kube_minion_eth0\", \"fixed_ips\", 0, \"ip_address\"]}}, \"OS::stack_id\": {\"description\": \"This is a id of the stack which creates from this template.\", \"value\": {\"get_param\": \"OS::stack_id\"}}}, \"heat_template_version\": \"2014-10-16\", \"description\": \"This is a nested stack that defines a single Kubernetes minion, This stack is included by an AutoScalingGroup resource in the parent template (kubecluster.yaml).\\\\n\", \"parameters\": {\"magnum_url\": {\"type\": \"string\", \"description\": \"endpoint to retrieve TLS certs from\"}, \"tenant_name\": {\"type\": \"string\", \"description\": \"an alternative term for a project\"}, \"registry_container\": {\"type\": \"string\", \"description\": \"name of swift container which docker registry stores images in\\\\n\"}, \"minion_flavor\": {\"type\": \"string\", \"description\": \"flavor to use when booting the server\"}, \"trustee_user_id\": {\"type\": \"string\", \"description\": \"user id of the trustee\"}, \"auth_url\": {\"type\": \"string\", \"description\": \"url for keystone, must be v2 since k8s backend only support v2 at this point\\\\n\"}, \"wait_condition_timeout\": {\"type\": \"number\", \"description\": \"timeout for the Wait Conditions\\\\n\"}, \"cluster_uuid\": {\"type\": \"string\", \"description\": \"identifier for the cluster this template is generating\"}, \"kubernetes_port\": {\"type\": \"number\", \"description\": \"The port which are used by kube-apiserver to provide Kubernetes service.\\\\n\"}, \"external_network\": {\"type\": \"string\", \"description\": \"uuid/name of a network to use for floating ip addresses\"}, \"registry_port\": {\"type\": \"number\", \"description\": \"port of registry service\"}, \"fixed_subnet\": {\"type\": \"string\", \"description\": \"Subnet from which to allocate fixed addresses.\"}, \"docker_volume_size\": {\"type\": \"number\", \"description\": \"size of a cinder volume to allocate to docker for container/image storage\\\\n\"}, \"secgroup_kube_minion_id\": {\"type\": \"string\", \"description\": \"ID of the security group for kubernetes minion.\"}, \"no_proxy\": {\"type\": \"string\", \"description\": \"no proxies for docker\"}, \"trustee_domain_id\": {\"type\": \"string\", \"description\": \"domain id of the trustee\"}, \"tls_disabled\": {\"type\": \"boolean\", \"description\": \"whether or not to enable TLS\"}, \"https_proxy\": {\"type\": \"string\", \"description\": \"https proxy address for docker\"}, \"kube_version\": {\"type\": \"string\", \"description\": \"version of kubernetes used for kubernetes cluster\"}, \"trust_id\": {\"hidden\": true, \"type\": \"string\", \"description\": \"id of the trust which is used by the trustee\"}, \"swift_region\": {\"type\": \"string\", \"description\": \"region of swift service\"}, \"username\": {\"type\": \"string\", \"description\": \"user account\\\\n\"}, \"http_proxy\": {\"type\": \"string\", \"description\": \"http proxy address for docker\"}, \"region_name\": {\"type\": \"string\", \"description\": \"A logically separate section of the cluster\"}, \"insecure_registry_url\": {\"type\": \"string\", \"description\": \"insecure registry url\"}, \"volume_driver\": {\"type\": \"string\", \"description\": \"volume driver to use for container storage\"}, \"registry_enabled\": {\"type\": \"boolean\", \"description\": \"Indicates whether the docker registry is enabled.\\\\n\"}, \"kube_allow_priv\": {\"type\": \"string\", \"description\": \"whether or not kubernetes should permit privileged containers.\\\\n\", \"constraints\": [{\"allowed_values\": [\"true\", \"false\"]}]}, \"etcd_server_ip\": {\"type\": \"string\", \"description\": \"IP address of the Etcd server.\"}, \"password\": {\"hidden\": true, \"type\": \"string\", \"description\": \"user password, not set in current implementation, only used to fill in for Kubernetes config file\\\\n\"}, \"kube_master_ip\": {\"type\": \"string\", \"description\": \"IP address of the Kubernetes master server.\"}, \"docker_storage_driver\": {\"default\": \"devicemapper\", \"type\": \"string\", \"description\": \"docker storage driver name\", \"constraints\": [{\"allowed_values\": [\"devicemapper\", \"overlay\"]}]}, \"registry_chunksize\": {\"type\": \"number\", \"description\": \"size fo the data segments for the swift dynamic large objects\\\\n\"}, \"network_driver\": {\"type\": \"string\", \"description\": \"network driver to use for instantiating container networks\"}, \"fixed_network\": {\"type\": \"string\", \"description\": \"Network from which to allocate fixed addresses.\"}, \"trustee_password\": {\"hidden\": true, \"type\": \"string\", \"description\": \"password of the trustee\"}, \"trustee_username\": {\"type\": \"string\", \"description\": \"username of the trustee\"}, \"ssh_key_name\": {\"type\": \"string\", \"description\": \"name of ssh key to be provisioned on our server\"}, \"registry_insecure\": {\"type\": \"boolean\", \"description\": \"indicates whether to skip TLS verification between registry and backend storage\\\\n\"}, \"flannel_network_cidr\": {\"type\": \"string\", \"description\": \"network range for flannel overlay network\"}, \"server_image\": {\"type\": \"string\", \"description\": \"glance image used to boot the server\"}}, \"resources\": {\"write_heat_params\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"str_replace\": {\"params\": {\"$REGION_NAME\": {\"get_param\": \"region_name\"}, \"$TLS_DISABLED\": {\"get_param\": \"tls_disabled\"}, \"$TRUSTEE_USER_ID\": {\"get_param\": \"trustee_user_id\"}, \"$TRUSTEE_USERNAME\": {\"get_param\": \"trustee_username\"}, \"$WAIT_CURL\": {\"get_attr\": [\"minion_wait_handle\", \"curl_cli\"]}, \"$KUBE_MASTER_IP\": {\"get_param\": \"kube_master_ip\"}, \"$REGISTRY_INSECURE\": {\"get_param\": \"registry_insecure\"}, \"$VOLUME_DRIVER\": {\"get_param\": \"volume_driver\"}, \"$NO_PROXY\": {\"get_param\": \"no_proxy\"}, \"$REGISTRY_ENABLED\": {\"get_param\": \"registry_enabled\"}, \"$REGISTRY_CONTAINER\": {\"get_param\": \"registry_container\"}, \"$KUBE_NODE_IP\": {\"get_attr\": [\"kube_minion_eth0\", \"fixed_ips\", 0, \"ip_address\"]}, \"$DOCKER_STORAGE_DRIVER\": {\"get_param\": \"docker_storage_driver\"}, \"$REGISTRY_CHUNKSIZE\": {\"get_param\": \"registry_chunksize\"}, \"$TENANT_NAME\": {\"get_param\": \"tenant_name\"}, \"$KUBE_ALLOW_PRIV\": {\"get_param\": \"kube_allow_priv\"}, \"$USERNAME\": {\"get_param\": \"username\"}, \"$AUTH_URL\": {\"get_param\": \"auth_url\"}, \"$PASSWORD\": {\"get_param\": \"password\"}, \"$DOCKER_VOLUME_SIZE\": {\"get_param\": \"docker_volume_size\"}, \"$TRUST_ID\": {\"get_param\": \"trust_id\"}, \"$NETWORK_DRIVER\": {\"get_param\": \"network_driver\"}, \"$REGISTRY_PORT\": {\"get_param\": \"registry_port\"}, \"$TRUSTEE_PASSWORD\": {\"get_param\": \"trustee_password\"}, \"$ETCD_SERVER_IP\": {\"get_param\": \"etcd_server_ip\"}, \"$HTTPS_PROXY\": {\"get_param\": \"https_proxy\"}, \"$TRUSTEE_DOMAIN_ID\": {\"get_param\": \"trustee_domain_id\"}, \"$CLUSTER_UUID\": {\"get_param\": \"cluster_uuid\"}, \"$KUBE_API_PORT\": {\"get_param\": \"kubernetes_port\"}, \"$DOCKER_VOLUME\": {\"get_resource\": \"docker_volume\"}, \"$INSECURE_REGISTRY_URL\": {\"get_param\": \"insecure_registry_url\"}, \"$KUBE_VERSION\": {\"get_param\": \"kube_version\"}, \"$SWIFT_REGION\": {\"get_param\": \"swift_region\"}, \"$KUBE_NODE_PUBLIC_IP\": {\"get_attr\": [\"kube_minion_floating\", \"floating_ip_address\"]}, \"$MAGNUM_URL\": {\"get_param\": \"magnum_url\"}, \"$HTTP_PROXY\": {\"get_param\": \"http_proxy\"}}, \"template\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/write-heat-params.yaml\"}}}}}, \"enable_docker_registry\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/enable-docker-registry.sh\"}}}, \"configure_docker_registry\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/configure-docker-registry.sh\"}}}, \"configure_kubernetes_minion\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/configure-kubernetes-minion.sh\"}}}, \"network_service\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/network-service.sh\"}}}, \"write_kubeconfig\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/write-kubeconfig.yaml\"}}}, \"kube_minion_eth0\": {\"type\": \"OS::Neutron::Port\", \"properties\": {\"security_groups\": [{\"get_param\": \"secgroup_kube_minion_id\"}], \"replacement_policy\": \"AUTO\", \"fixed_ips\": [{\"subnet\": {\"get_param\": \"fixed_subnet\"}}], \"network\": {\"get_param\": \"fixed_network\"}, \"allowed_address_pairs\": [{\"ip_address\": {\"get_param\": \"flannel_network_cidr\"}}]}}, \"enable_services\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/enable-services-minion.sh\"}}}, \"kube_minion_init\": {\"type\": \"OS::Heat::MultipartMime\", \"properties\": {\"parts\": [{\"config\": {\"get_resource\": \"disable_selinux\"}}, {\"config\": {\"get_resource\": \"write_heat_params\"}}, {\"config\": {\"get_resource\": \"write_kubeconfig\"}}, {\"config\": {\"get_resource\": \"make_cert\"}}, {\"config\": {\"get_resource\": \"kube_examples\"}}, {\"config\": {\"get_resource\": \"configure_docker_storage\"}}, {\"config\": {\"get_resource\": \"configure_docker_registry\"}}, {\"config\": {\"get_resource\": \"configure_kubernetes_minion\"}}, {\"config\": {\"get_resource\": \"network_service\"}}, {\"config\": {\"get_resource\": \"add_proxy\"}}, {\"config\": {\"get_resource\": \"enable_services\"}}, {\"config\": {\"get_resource\": \"enable_kube_proxy\"}}, {\"config\": {\"get_resource\": \"enable_docker_registry\"}}, {\"config\": {\"get_resource\": \"minion_wc_notify\"}}]}}, \"make_cert\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/make-cert-client.sh\"}}}, \"minion_wc_notify\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"str_replace\": {\"params\": {\"wc_notify\": {\"get_attr\": [\"minion_wait_handle\", \"curl_cli\"]}}, \"template\": \"#!/bin/bash -v\\\\nwc_notify --data-binary \\'{\\\\\"status\\\\\": \\\\\"SUCCESS\\\\\"}\\'\\\\n\"}}}}, \"docker_volume\": {\"type\": \"Magnum::Optional::Cinder::Volume\", \"properties\": {\"size\": {\"get_param\": \"docker_volume_size\"}}}, \"kube_examples\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/kube-examples.yaml\"}}}, \"kube_minion_floating\": {\"type\": \"Magnum::Optional::KubeMinion::Neutron::FloatingIP\", \"properties\": {\"floating_network\": {\"get_param\": \"external_network\"}, \"port_id\": {\"get_resource\": \"kube_minion_eth0\"}}}, \"configure_docker_storage\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"str_replace\": {\"params\": {\"$configure_docker_storage_driver\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/configure_docker_storage_driver_atomic.sh\"}}, \"template\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/configure-docker-storage.sh\"}}}}}, \"docker_volume_attach\": {\"type\": \"Magnum::Optional::Cinder::VolumeAttachment\", \"properties\": {\"instance_uuid\": {\"get_resource\": \"kube-minion\"}, \"mountpoint\": \"/dev/vdb\", \"volume_id\": {\"get_resource\": \"docker_volume\"}}}, \"minion_wait_condition\": {\"depends_on\": \"kube-minion\", \"type\": \"OS::Heat::WaitCondition\", \"properties\": {\"handle\": {\"get_resource\": \"minion_wait_handle\"}, \"timeout\": {\"get_param\": \"wait_condition_timeout\"}}}, \"kube-minion\": {\"type\": \"OS::Nova::Server\", \"properties\": {\"user_data_format\": \"RAW\", \"key_name\": {\"get_param\": \"ssh_key_name\"}, \"image\": {\"get_param\": \"server_image\"}, \"user_data\": {\"get_resource\": \"kube_minion_init\"}, \"flavor\": {\"get_param\": \"minion_flavor\"}, \"networks\": [{\"port\": {\"get_resource\": \"kube_minion_eth0\"}}]}}, \"enable_kube_proxy\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/enable-kube-proxy-minion.sh\"}}}, \"disable_selinux\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/disable-selinux.sh\"}}}, \"minion_wait_handle\": {\"type\": \"OS::Heat::WaitConditionHandle\"}, \"add_proxy\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/add-proxy.sh\"}}}}}', u'file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/write-heat-params.yaml': u'#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /etc/sysconfig/heat-params\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      KUBE_ALLOW_PRIV=\"$KUBE_ALLOW_PRIV\"\\n      KUBE_MASTER_IP=\"$KUBE_MASTER_IP\"\\n      KUBE_API_PORT=\"$KUBE_API_PORT\"\\n      KUBE_NODE_PUBLIC_IP=\"$KUBE_NODE_PUBLIC_IP\"\\n      KUBE_NODE_IP=\"$KUBE_NODE_IP\"\\n      ETCD_SERVER_IP=\"$ETCD_SERVER_IP\"\\n      ENABLE_CINDER=\"$ENABLE_CINDER\"\\n      DOCKER_VOLUME=\"$DOCKER_VOLUME\"\\n      DOCKER_VOLUME_SIZE=\"$DOCKER_VOLUME_SIZE\"\\n      DOCKER_STORAGE_DRIVER=\"$DOCKER_STORAGE_DRIVER\"\\n      NETWORK_DRIVER=\"$NETWORK_DRIVER\"\\n      REGISTRY_ENABLED=\"$REGISTRY_ENABLED\"\\n      REGISTRY_PORT=\"$REGISTRY_PORT\"\\n      SWIFT_REGION=\"$SWIFT_REGION\"\\n      REGISTRY_CONTAINER=\"$REGISTRY_CONTAINER\"\\n      REGISTRY_INSECURE=\"$REGISTRY_INSECURE\"\\n      REGISTRY_CHUNKSIZE=\"$REGISTRY_CHUNKSIZE\"\\n      TLS_DISABLED=\"$TLS_DISABLED\"\\n      CLUSTER_UUID=\"$CLUSTER_UUID\"\\n      MAGNUM_URL=\"$MAGNUM_URL\"\\n      AUTH_URL=\"$AUTH_URL\"\\n      USERNAME=\"$USERNAME\"\\n      PASSWORD=\"$PASSWORD\"\\n      VOLUME_DRIVER=\"$VOLUME_DRIVER\"\\n      REGION_NAME=\"$REGION_NAME\"\\n      TENANT_NAME=\"$TENANT_NAME\"\\n      HTTP_PROXY=\"$HTTP_PROXY\"\\n      HTTPS_PROXY=\"$HTTPS_PROXY\"\\n      NO_PROXY=\"$NO_PROXY\"\\n      WAIT_CURL=\"$WAIT_CURL\"\\n      KUBE_VERSION=\"$KUBE_VERSION\"\\n      TRUSTEE_USER_ID=\"$TRUSTEE_USER_ID\"\\n      TRUSTEE_USERNAME=\"$TRUSTEE_USERNAME\"\\n      TRUSTEE_PASSWORD=\"$TRUSTEE_PASSWORD\"\\n      TRUSTEE_DOMAIN_ID=\"$TRUSTEE_DOMAIN_ID\"\\n      TRUST_ID=\"$TRUST_ID\"\\n      INSECURE_REGISTRY_URL=\"$INSECURE_REGISTRY_URL\"\\n', u'file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/configure-docker-storage.sh': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n    if [ \"$ENABLE_CINDER\" == \"False\" ]; then\\n        # FIXME(yuanying): Use ephemeral disk for docker storage\\n        # Currently Ironic doesn\\'t support cinder volumes,\\n        # so we must use preserved ephemeral disk instead of a cinder volume.\\n        device_path=$(readlink -f /dev/disk/by-label/ephemeral0)\\n    else\\n        attempts=60\\n        while [ ${attempts} -gt 0 ]; do\\n            device_name=$(ls /dev/disk/by-id | grep ${DOCKER_VOLUME:0:20}$)\\n            if [ -n \"${device_name}\" ]; then\\n                break\\n            fi\\n            echo \"waiting for disk device\"\\n            sleep 0.5\\n            udevadm trigger\\n            let attempts--\\n        done\\n\\n        if [ -z \"${device_name}\" ]; then\\n            echo \"ERROR: disk device does not exist\" >&2\\n            exit 1\\n        fi\\n\\n        device_path=/dev/disk/by-id/${device_name}\\n    fi\\nfi\\n\\n$configure_docker_storage_driver\\n\\nif [ \"$DOCKER_STORAGE_DRIVER\" = \"overlay\" ]; then\\n    if [ $(echo -e \"$(uname -r)\\\\n3.18\" | sort -V | head -1) = $(uname -r) ]; then\\n        ERROR_MESSAGE=\"OverlayFS requires at least Linux kernel 3.18. Cluster node kernel version: $(uname -r)\"\\n        echo \"ERROR: ${ERROR_MESSAGE}\" >&2\\n        sh -c \"${WAIT_CURL} --data-binary \\'{\\\\\"status\\\\\": \\\\\"FAILURE\\\\\", \\\\\"reason\\\\\": \\\\\"${ERROR_MESSAGE}\\\\\"}\\'\"\\n    else\\n        configure_overlay\\n    fi\\nelse\\n    configure_devicemapper\\nfi\\n', u'file:///opt/stack/magnum/magnum/drivers/k8s_fedora_atomic_v1/templates/kubemaster.yaml': u'{\"outputs\": {\"kube_master_external_ip\": {\"description\": \"This is the \\\\\"public\\\\\" IP address of the Kubernetes master node.\", \"value\": {\"get_attr\": [\"kube_master_floating\", \"floating_ip_address\"]}}, \"kube_master_ip\": {\"description\": \"This is the \\\\\"private\\\\\" IP address of the Kubernetes master node.\\\\n\", \"value\": {\"get_attr\": [\"kube_master_eth0\", \"fixed_ips\", 0, \"ip_address\"]}}}, \"heat_template_version\": \"2014-10-16\", \"description\": \"This is a nested stack that defines a single Kubernetes master, This stack is included by an ResourceGroup resource in the parent template (kubecluster.yaml).\\\\n\", \"parameters\": {\"magnum_url\": {\"type\": \"string\", \"description\": \"endpoint to retrieve TLS certs from\"}, \"tenant_name\": {\"type\": \"string\", \"description\": \"tenant name\\\\n\"}, \"http_proxy\": {\"type\": \"string\", \"description\": \"http proxy address for docker\"}, \"api_pool_id\": {\"type\": \"string\", \"description\": \"ID of the load balancer pool of k8s API server.\"}, \"portal_network_cidr\": {\"type\": \"string\", \"description\": \"address range used by kubernetes for service portals\\\\n\"}, \"auth_url\": {\"type\": \"string\", \"description\": \"url for kubernetes to authenticate\\\\n\"}, \"wait_condition_timeout\": {\"type\": \"number\", \"description\": \"timeout for the Wait Conditions\\\\n\"}, \"cluster_uuid\": {\"type\": \"string\", \"description\": \"identifier for the cluster this template is generating\"}, \"kubernetes_port\": {\"type\": \"number\", \"description\": \"The port which are used by kube-apiserver to provide Kubernetes service.\\\\n\"}, \"external_network\": {\"type\": \"string\", \"description\": \"uuid/name of a network to use for floating ip addresses\"}, \"flannel_backend\": {\"type\": \"string\", \"description\": \"specify the backend for flannel, default udp backend\\\\n\", \"constraints\": [{\"allowed_values\": [\"udp\", \"vxlan\", \"host-gw\"]}]}, \"fixed_subnet\": {\"type\": \"string\", \"description\": \"Subnet from which to allocate fixed addresses.\"}, \"api_public_address\": {\"default\": \"\", \"type\": \"string\", \"description\": \"Public IP address of the Kubernetes master server.\"}, \"api_private_address\": {\"default\": \"\", \"type\": \"string\", \"description\": \"Private IP address of the Kubernetes master server.\"}, \"master_flavor\": {\"type\": \"string\", \"description\": \"flavor to use when booting the server\"}, \"tls_disabled\": {\"type\": \"boolean\", \"description\": \"whether or not to enable TLS\"}, \"https_proxy\": {\"type\": \"string\", \"description\": \"https proxy address for docker\"}, \"kube_version\": {\"type\": \"string\", \"description\": \"version of kubernetes used for kubernetes cluster\"}, \"trust_id\": {\"hidden\": true, \"type\": \"string\", \"description\": \"id of the trust which is used by the trustee\"}, \"username\": {\"type\": \"string\", \"description\": \"user account\\\\n\"}, \"insecure_registry_url\": {\"type\": \"string\", \"description\": \"insecure registry url\"}, \"docker_volume_size\": {\"type\": \"number\", \"description\": \"size of a cinder volume to allocate to docker for container/image storage\\\\n\"}, \"kube_allow_priv\": {\"type\": \"string\", \"description\": \"whether or not kubernetes should permit privileged containers.\\\\n\", \"constraints\": [{\"allowed_values\": [\"true\", \"false\"]}]}, \"secgroup_kube_master_id\": {\"type\": \"string\", \"description\": \"ID of the security group for kubernetes master.\"}, \"password\": {\"type\": \"string\", \"description\": \"user password\\\\n\"}, \"docker_storage_driver\": {\"default\": \"devicemapper\", \"type\": \"string\", \"description\": \"docker storage driver name\", \"constraints\": [{\"allowed_values\": [\"devicemapper\", \"overlay\"]}]}, \"trustee_user_id\": {\"type\": \"string\", \"description\": \"user id of the trustee\"}, \"etcd_pool_id\": {\"type\": \"string\", \"description\": \"ID of the load balancer pool of etcd server.\"}, \"network_driver\": {\"type\": \"string\", \"description\": \"network driver to use for instantiating container networks\"}, \"fixed_network\": {\"type\": \"string\", \"description\": \"Network from which to allocate fixed addresses.\"}, \"no_proxy\": {\"type\": \"string\", \"description\": \"no proxies for docker\"}, \"trustee_password\": {\"hidden\": true, \"type\": \"string\", \"description\": \"password of the trustee\"}, \"ssh_key_name\": {\"type\": \"string\", \"description\": \"name of ssh key to be provisioned on our server\"}, \"flannel_network_subnetlen\": {\"type\": \"number\", \"description\": \"size of subnet assigned to each master\"}, \"flannel_network_cidr\": {\"type\": \"string\", \"description\": \"network range for flannel overlay network\"}, \"discovery_url\": {\"type\": \"string\", \"description\": \"Discovery URL used for bootstrapping the etcd cluster.\\\\n\"}, \"server_image\": {\"type\": \"string\", \"description\": \"glance image used to boot the server\"}}, \"resources\": {\"kube_master_floating\": {\"type\": \"Magnum::Optional::KubeMaster::Neutron::FloatingIP\", \"properties\": {\"floating_network\": {\"get_param\": \"external_network\"}, \"port_id\": {\"get_resource\": \"kube_master_eth0\"}}}, \"kube_system_namespace_service\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/kube-system-namespace-service.sh\"}}}, \"api_pool_member\": {\"type\": \"Magnum::Optional::Neutron::LBaaS::PoolMember\", \"properties\": {\"subnet\": {\"get_param\": \"fixed_subnet\"}, \"protocol_port\": {\"get_param\": \"kubernetes_port\"}, \"pool\": {\"get_param\": \"api_pool_id\"}, \"address\": {\"get_attr\": [\"kube_master_eth0\", \"fixed_ips\", 0, \"ip_address\"]}}}, \"write_heat_params\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"str_replace\": {\"params\": {\"$TLS_DISABLED\": {\"get_param\": \"tls_disabled\"}, \"$TRUSTEE_USER_ID\": {\"get_param\": \"trustee_user_id\"}, \"$PORTAL_NETWORK_CIDR\": {\"get_param\": \"portal_network_cidr\"}, \"$CLUSTER_SUBNET\": {\"get_param\": \"fixed_subnet\"}, \"$FLANNEL_BACKEND\": {\"get_param\": \"flannel_backend\"}, \"$NO_PROXY\": {\"get_param\": \"no_proxy\"}, \"$KUBE_NODE_IP\": {\"get_attr\": [\"kube_master_eth0\", \"fixed_ips\", 0, \"ip_address\"]}, \"$DOCKER_STORAGE_DRIVER\": {\"get_param\": \"docker_storage_driver\"}, \"$KUBE_ALLOW_PRIV\": {\"get_param\": \"kube_allow_priv\"}, \"$TENANT_NAME\": {\"get_param\": \"tenant_name\"}, \"$DOCKER_VOLUME\": {\"get_resource\": \"docker_volume\"}, \"$USERNAME\": {\"get_param\": \"username\"}, \"$AUTH_URL\": {\"get_param\": \"auth_url\"}, \"$FLANNEL_NETWORK_SUBNETLEN\": {\"get_param\": \"flannel_network_subnetlen\"}, \"$PASSWORD\": {\"get_param\": \"password\"}, \"$DOCKER_VOLUME_SIZE\": {\"get_param\": \"docker_volume_size\"}, \"$KUBE_API_PUBLIC_ADDRESS\": {\"get_attr\": [\"api_address_switch\", \"public_ip\"]}, \"$NETWORK_DRIVER\": {\"get_param\": \"network_driver\"}, \"$TRUSTEE_PASSWORD\": {\"get_param\": \"trustee_password\"}, \"$ETCD_DISCOVERY_URL\": {\"get_param\": \"discovery_url\"}, \"$FLANNEL_NETWORK_CIDR\": {\"get_param\": \"flannel_network_cidr\"}, \"$HTTPS_PROXY\": {\"get_param\": \"https_proxy\"}, \"$CLUSTER_UUID\": {\"get_param\": \"cluster_uuid\"}, \"$KUBE_API_PORT\": {\"get_param\": \"kubernetes_port\"}, \"$TRUST_ID\": {\"get_param\": \"trust_id\"}, \"$INSECURE_REGISTRY_URL\": {\"get_param\": \"insecure_registry_url\"}, \"$KUBE_VERSION\": {\"get_param\": \"kube_version\"}, \"$MAGNUM_URL\": {\"get_param\": \"magnum_url\"}, \"$WAIT_CURL\": {\"get_attr\": [\"master_wait_handle\", \"curl_cli\"]}, \"$KUBE_API_PRIVATE_ADDRESS\": {\"get_attr\": [\"api_address_switch\", \"private_ip\"]}, \"$KUBE_NODE_PUBLIC_IP\": {\"get_attr\": [\"kube_master_floating\", \"floating_ip_address\"]}, \"$HTTP_PROXY\": {\"get_param\": \"http_proxy\"}}, \"template\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/write-heat-params-master.yaml\"}}}}}, \"write_network_config\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/write-network-config.sh\"}}}, \"kube_master_eth0\": {\"type\": \"OS::Neutron::Port\", \"properties\": {\"security_groups\": [{\"get_param\": \"secgroup_kube_master_id\"}], \"replacement_policy\": \"AUTO\", \"fixed_ips\": [{\"subnet\": {\"get_param\": \"fixed_subnet\"}}], \"network\": {\"get_param\": \"fixed_network\"}, \"allowed_address_pairs\": [{\"ip_address\": {\"get_param\": \"flannel_network_cidr\"}}]}}, \"kube-master\": {\"type\": \"OS::Nova::Server\", \"properties\": {\"user_data_format\": \"RAW\", \"key_name\": {\"get_param\": \"ssh_key_name\"}, \"image\": {\"get_param\": \"server_image\"}, \"user_data\": {\"get_resource\": \"kube_master_init\"}, \"flavor\": {\"get_param\": \"master_flavor\"}, \"networks\": [{\"port\": {\"get_resource\": \"kube_master_eth0\"}}]}}, \"kube_ui_service\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/kube-ui-service.sh\"}}}, \"configure_docker_storage\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"str_replace\": {\"params\": {\"$configure_docker_storage_driver\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/configure_docker_storage_driver_atomic.sh\"}}, \"template\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/fragments/configure-docker-storage.sh\"}}}}}, \"master_wait_handle\": {\"type\": \"OS::Heat::WaitConditionHandle\"}, \"enable_kube_controller_manager_scheduler\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/enable-kube-controller-manager-scheduler.sh\"}}}, \"network_service\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/network-service.sh\"}}}, \"configure_kubernetes\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/configure-kubernetes-master.sh\"}}}, \"master_wc_notify\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/wc-notify-master.sh\"}}}, \"master_wait_condition\": {\"depends_on\": \"kube-master\", \"type\": \"OS::Heat::WaitCondition\", \"properties\": {\"handle\": {\"get_resource\": \"master_wait_handle\"}, \"timeout\": {\"get_param\": \"wait_condition_timeout\"}}}, \"configure_etcd\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/configure-etcd.sh\"}}}, \"make_cert\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/make-cert.sh\"}}}, \"enable_services\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/enable-services-master.sh\"}}}, \"docker_volume\": {\"type\": \"Magnum::Optional::Cinder::Volume\", \"properties\": {\"size\": {\"get_param\": \"docker_volume_size\"}}}, \"kube_examples\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/kube-examples.yaml\"}}}, \"write_kube_os_config\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/write-kube-os-config.sh\"}}}, \"kube_master_init\": {\"type\": \"OS::Heat::MultipartMime\", \"properties\": {\"parts\": [{\"config\": {\"get_resource\": \"disable_selinux\"}}, {\"config\": {\"get_resource\": \"write_heat_params\"}}, {\"config\": {\"get_resource\": \"configure_etcd\"}}, {\"config\": {\"get_resource\": \"write_kube_os_config\"}}, {\"config\": {\"get_resource\": \"make_cert\"}}, {\"config\": {\"get_resource\": \"configure_docker_storage\"}}, {\"config\": {\"get_resource\": \"configure_kubernetes\"}}, {\"config\": {\"get_resource\": \"add_proxy\"}}, {\"config\": {\"get_resource\": \"enable_services\"}}, {\"config\": {\"get_resource\": \"write_network_config\"}}, {\"config\": {\"get_resource\": \"network_config_service\"}}, {\"config\": {\"get_resource\": \"network_service\"}}, {\"config\": {\"get_resource\": \"kube_system_namespace_service\"}}, {\"config\": {\"get_resource\": \"enable_kube_controller_manager_scheduler\"}}, {\"config\": {\"get_resource\": \"enable_kube_proxy\"}}, {\"config\": {\"get_resource\": \"kube_ui_service\"}}, {\"config\": {\"get_resource\": \"kube_examples\"}}, {\"config\": {\"get_resource\": \"master_wc_notify\"}}]}}, \"docker_volume_attach\": {\"type\": \"Magnum::Optional::Cinder::VolumeAttachment\", \"properties\": {\"instance_uuid\": {\"get_resource\": \"kube-master\"}, \"mountpoint\": \"/dev/vdb\", \"volume_id\": {\"get_resource\": \"docker_volume\"}}}, \"etcd_pool_member\": {\"type\": \"Magnum::Optional::Neutron::LBaaS::PoolMember\", \"properties\": {\"subnet\": {\"get_param\": \"fixed_subnet\"}, \"protocol_port\": 2379, \"pool\": {\"get_param\": \"etcd_pool_id\"}, \"address\": {\"get_attr\": [\"kube_master_eth0\", \"fixed_ips\", 0, \"ip_address\"]}}}, \"network_config_service\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/network-config-service.sh\"}}}, \"enable_kube_proxy\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/enable-kube-proxy-master.sh\"}}}, \"api_address_switch\": {\"type\": \"Magnum::ApiGatewaySwitcher\", \"properties\": {\"pool_public_ip\": {\"get_param\": \"api_public_address\"}, \"pool_private_ip\": {\"get_param\": \"api_private_address\"}, \"master_public_ip\": {\"get_attr\": [\"kube_master_floating\", \"floating_ip_address\"]}, \"master_private_ip\": {\"get_attr\": [\"kube_master_eth0\", \"fixed_ips\", 0, \"ip_address\"]}}}, \"disable_selinux\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/disable-selinux.sh\"}}}, \"add_proxy\": {\"type\": \"OS::Heat::SoftwareConfig\", \"properties\": {\"group\": \"ungrouped\", \"config\": {\"get_file\": \"file:///opt/stack/magnum/magnum/drivers/common/templates/kubernetes/fragments/add-proxy.sh\"}}}}}', u'file:///opt/stack/magnum/magnum/drivers/common/templates/environments/with_volume.yaml': u'{\"resource_registry\": {\"Magnum::Optional::Cinder::Volume\": \"OS::Cinder::Volume\", \"Magnum::Optional::Cinder::VolumeAttachment\": \"OS::Cinder::VolumeAttachment\"}}'}, u'nested_depth': 0, u'stack_name': u'k8s-cluster-ui4f4ogezhm7', u'stack_user_project_id': None, u'args': {u'timeout_mins': 60}, u'environment_files': [u'file:///opt/stack/magnum/magnum/drivers/common/templates/environments/with_private_network.yaml', u'file:///opt/stack/magnum/magnum/drivers/common/templates/environments/with_volume.yaml', u'file:///opt/stack/magnum/magnum/drivers/common/templates/environments/no_master_lb.yaml', u'file:///opt/stack/magnum/magnum/drivers/common/templates/environments/enable_floating_ip.yaml'], u'parent_resource_name': None, u'params': {u'encrypted_param_names': [], u'parameter_defaults': {}, u'event_sinks': [], u'parameters': {u'magnum_url': u'http://10.164.180.85:9511/v1', u'number_of_masters': 1, u'tenant_name': u'f789928a4f254f96965ff7f3dedd02be', u'http_proxy': u'http://10.164.177.168:8080/', u'minion_flavor': u'm1.small', u'trustee_user_id': u'44f763e5727747eeba6f3095d7a86952', u'auth_url': u'http://10.164.180.85:5000/v3', u'cluster_uuid': u'9a8ea37c-e9d3-4a7a-a2b1-dc164fb21d67', u'kubernetes_port': 8080, u'external_network': u'public', u'trustee_domain_id': u'89c8eaf1c4ea4baa8521ab786865f857', u'flannel_backend': None, u'trust_id': u'a6f5cdd3ef814c32bd36b133781786bc', u'region_name': u'RegionOne', u'no_proxy': u'10.164.180.85,10.0.0.0/8,172.0.0.0/8', u'https_proxy': u'http://10.164.177.168:8080/', u'tls_disabled': True, u'number_of_minions': 1, u'username': u'admin', u'docker_volume_size': 3, u'volume_driver': u'cinder', u'registry_enabled': False, u'loadbalancing_protocol': u'HTTP', u'docker_storage_driver': u'devicemapper', u'network_driver': u'flannel', u'trustee_password': u'7BXp9ABpBgeK5zatdT', u'trustee_username': u'9a8ea37c-e9d3-4a7a-a2b1-dc164fb21d67', u'ssh_key_name': u'testkey', u'flannel_network_subnetlen': None, u'flannel_network_cidr': None, u'discovery_url': u'https://discovery.etcd.io/202d6f895ed3f6dd8041b7b8d2a5a37f', u'dns_nameserver': u'8.8.8.8', u'server_image': u'fedora-atomic-latest'}, u'resource_registry': {}}, u'template': {u'outputs': {u'kube_masters_private': {u'description': u'This is a list of the \"private\" IP addresses of all the Kubernetes masters.\\n', u'value': {u'get_attr': [u'kube_masters', u'kube_master_ip']}}, u'kube_masters': {u'description': u'This is a list of the \"public\" IP addresses of all the Kubernetes masters. Use these IP addresses to log in to the Kubernetes masters via ssh.\\n', u'value': {u'get_attr': [u'kube_masters', u'kube_master_external_ip']}}, u'api_address': {u'description': u'This is the API endpoint of the Kubernetes cluster. Use this to access the Kubernetes API.\\n', u'value': {u'str_replace': {u'params': {u'api_ip_address': {u'get_attr': [u'api_address_floating_switch', u'ip_address']}}, u'template': u'api_ip_address'}}}, u'kube_minions_private': {u'description': u'This is a list of the \"private\" IP addresses of all the Kubernetes minions.\\n', u'value': {u'get_attr': [u'kube_minions', u'kube_minion_ip']}}, u'kube_minions': {u'description': u'This is a list of the \"public\" IP addresses of all the Kubernetes minions. Use these IP addresses to log in to the Kubernetes minions via ssh.', u'value': {u'get_attr': [u'kube_minions', u'kube_minion_external_ip']}}, u'registry_address': {u'description': u'This is the url of docker registry server where you can store docker images.', u'value': {u'str_replace': {u'params': {u'port': {u'get_param': u'registry_port'}}, u'template': u'localhost:port'}}}}, u'heat_template_version': u'2014-10-16', u'description': u'This template will boot a Kubernetes cluster with one or more minions (as specified by the number_of_minions parameter, which defaults to 1).\\n', u'parameters': {u'fixed_network_cidr': {u'default': u'10.0.0.0/24', u'type': u'string', u'description': u'network range for fixed ip network'}, u'magnum_url': {u'type': u'string', u'description': u'endpoint to retrieve TLS certs from'}, u'number_of_masters': {u'default': 1, u'type': u'number', u'description': u'how many kubernetes masters to spawn'}, u'tenant_name': {u'type': u'string', u'description': u'tenant name\\n'}, u'wait_condition_timeout': {u'default': 6000, u'type': u'number', u'description': u'timeout for the Wait Conditions\\n'}, u'minion_flavor': {u'default': u'm1.small', u'type': u'string', u'description': u'flavor to use when booting the server for minions'}, u'portal_network_cidr': {u'default': u'10.254.0.0/16', u'type': u'string', u'description': u'address range used by kubernetes for service portals\\n'}, u'auth_url': {u'type': u'string', u'description': u'url for keystone'}, u'registry_container': {u'default': u'container', u'type': u'string', u'description': u'name of swift container which docker registry stores images in\\n'}, u'cluster_uuid': {u'type': u'string', u'description': u'identifier for the cluster this template is generating'}, u'kubernetes_port': {u'default': 6443, u'type': u'number', u'description': u'The port which are used by kube-apiserver to provide Kubernetes service.\\n'}, u'external_network': {u'default': u'public', u'type': u'string', u'description': u'uuid/name of a network to use for floating ip addresses'}, u'trustee_domain_id': {u'type': u'string', u'description': u'domain id of the trustee'}, u'flannel_backend': {u'default': u'udp', u'type': u'string', u'description': u'specify the backend for flannel, default udp backend\\n', u'constraints': [{u'allowed_values': [u'udp', u'vxlan', u'host-gw']}]}, u'fixed_subnet': {u'default': u'', u'type': u'string', u'description': u'uuid/name of an existing subnet to use to provision machines'}, u'region_name': {u'type': u'string', u'description': u'A logically separate section of the cluster'}, u'master_flavor': {u'default': u'm1.small', u'type': u'string', u'description': u'flavor to use when booting the server for master nodes'}, u'no_proxy': {u'default': u'', u'type': u'string', u'description': u'no proxies for docker'}, u'registry_port': {u'default': 5000, u'type': u'number', u'description': u'port of registry service'}, u'kube_version': {u'default': u'v1.2.0', u'type': u'string', u'description': u'version of kubernetes used for kubernetes cluster'}, u'minions_to_remove': {u'default': [], u'type': u'comma_delimited_list', u'description': u\"List of minions to be removed when doing an update. Individual minion may be referenced several ways: (1) The resource name (e.g. ['1', '3']), (2) The private IP address ['10.0.0.4', '10.0.0.6']. Note: the list should be empty when doing an create.\\n\"}, u'https_proxy': {u'default': u'', u'type': u'string', u'description': u'https proxy address for docker'}, u'tls_disabled': {u'default': False, u'type': u'boolean', u'description': u'whether or not to disable TLS'}, u'trust_id': {u'hidden': True, u'type': u'string', u'description': u'id of the trust which is used by the trustee'}, u'number_of_minions': {u'default': 1, u'type': u'number', u'description': u'how many kubernetes minions to spawn'}, u'swift_region': {u'default': u'', u'type': u'string', u'description': u'region of swift service'}, u'username': {u'type': u'string', u'description': u'user account\\n'}, u'http_proxy': {u'default': u'', u'type': u'string', u'description': u'http proxy address for docker'}, u'docker_volume_size': {u'default': 0, u'type': u'number', u'description': u'size of a cinder volume to allocate to docker for container/image storage\\n'}, u'insecure_registry_url': {u'default': u'', u'type': u'string', u'description': u'insecure registry url'}, u'volume_driver': {u'default': u'', u'type': u'string', u'description': u'volume driver to use for container storage'}, u'registry_enabled': {u'default': False, u'type': u'boolean', u'description': u'Indicates whether the docker registry is enabled.\\n'}, u'kube_allow_priv': {u'default': u'true', u'type': u'string', u'description': u'whether or not kubernetes should permit privileged containers.\\n', u'constraints': [{u'allowed_values': [u'true', u'false']}]}, u'password': {u'default': u'ChangeMe', u'hidden': True, u'type': u'string', u'description': u'user password, not set in current implementation, only used to fill in for Kubernetes config file\\n'}, u'loadbalancing_protocol': {u'default': u'TCP', u'type': u'string', u'description': u'The protocol which is used for load balancing. If you want to change tls_disabled option to \\'True\\', please change this to \"HTTP\".\\n', u'constraints': [{u'allowed_values': [u'TCP', u'HTTP']}]}, u'docker_storage_driver': {u'default': u'devicemapper', u'type': u'string', u'description': u'docker storage driver name', u'constraints': [{u'allowed_values': [u'devicemapper', u'overlay']}]}, u'registry_insecure': {u'default': True, u'type': u'boolean', u'description': u'indicates whether to skip TLS verification between registry and backend storage\\n'}, u'registry_chunksize': {u'default': 5242880, u'type': u'number', u'description': u'size fo the data segments for the swift dynamic large objects\\n'}, u'trustee_user_id': {u'type': u'string', u'description': u'user id of the trustee'}, u'network_driver': {u'default': u'flannel', u'type': u'string', u'description': u'network driver to use for instantiating container networks'}, u'fixed_network': {u'default': u'', u'type': u'string', u'description': u'uuid/name of an existing network to use to provision machines'}, u'trustee_password': {u'hidden': True, u'type': u'string', u'description': u'password of the trustee'}, u'trustee_username': {u'type': u'string', u'description': u'username of the trustee'}, u'ssh_key_name': {u'type': u'string', u'description': u'name of ssh key to be provisioned on our server'}, u'flannel_network_subnetlen': {u'default': 24, u'type': u'number', u'description': u'size of subnet assigned to each minion'}, u'flannel_network_cidr': {u'default': u'10.100.0.0/16', u'type': u'string', u'description': u'network range for flannel overlay network'}, u'discovery_url': {u'type': u'string', u'description': u'Discovery URL used for bootstrapping the etcd cluster.\\n'}, u'dns_nameserver': {u'default': u'8.8.8.8', u'type': u'string', u'description': u'address of a DNS nameserver reachable in your environment'}, u'server_image': {u'type': u'string', u'description': u'glance image used to boot the server'}}, u'resources': {u'etcd_lb': {u'type': u'file:///opt/stack/magnum/magnum/drivers/common/templates/lb.yaml', u'properties': {u'external_network': {u'get_param': u'external_network'}, u'protocol': u'HTTP', u'port': 2379, u'fixed_subnet': {u'get_attr': [u'network', u'fixed_subnet']}}}, u'kube_masters': {u'depends_on': [u'network'], u'type': u'OS::Heat::ResourceGroup', u'properties': {u'count': {u'get_param': u'number_of_masters'}, u'resource_def': {u'type': u'file:///opt/stack/magnum/magnum/drivers/k8s_fedora_atomic_v1/templates/kubemaster.yaml', u'properties': {u'magnum_url': {u'get_param': u'magnum_url'}, u'tenant_name': {u'get_param': u'tenant_name'}, u'http_proxy': {u'get_param': u'http_proxy'}, u'api_pool_id': {u'get_attr': [u'api_lb', u'pool_id']}, u'portal_network_cidr': {u'get_param': u'portal_network_cidr'}, u'auth_url': {u'get_param': u'auth_url'}, u'wait_condition_timeout': {u'get_param': u'wait_condition_timeout'}, u'cluster_uuid': {u'get_param': u'cluster_uuid'}, u'kubernetes_port': {u'get_param': u'kubernetes_port'}, u'external_network': {u'get_param': u'external_network'}, u'flannel_backend': {u'get_param': u'flannel_backend'}, u'trust_id': {u'get_param': u'trust_id'}, u'api_public_address': {u'get_attr': [u'api_lb', u'floating_address']}, u'api_private_address': {u'get_attr': [u'api_lb', u'address']}, u'master_flavor': {u'get_param': u'master_flavor'}, u'tls_disabled': {u'get_param': u'tls_disabled'}, u'secgroup_kube_master_id': {u'get_resource': u'secgroup_kube_master'}, u'https_proxy': {u'get_param': u'https_proxy'}, u'kube_version': {u'get_param': u'kube_version'}, u'fixed_subnet': {u'get_attr': [u'network', u'fixed_subnet']}, u'username': {u'get_param': u'username'}, u'insecure_registry_url': {u'get_param': u'insecure_registry_url'}, u'docker_volume_size': {u'get_param': u'docker_volume_size'}, u'kube_allow_priv': {u'get_param': u'kube_allow_priv'}, u'password': {u'get_param': u'password'}, u'docker_storage_driver': {u'get_param': u'docker_storage_driver'}, u'trustee_user_id': {u'get_param': u'trustee_user_id'}, u'etcd_pool_id': {u'get_attr': [u'etcd_lb', u'pool_id']}, u'network_driver': {u'get_param': u'network_driver'}, u'fixed_network': {u'get_attr': [u'network', u'fixed_network']}, u'no_proxy': {u'get_param': u'no_proxy'}, u'trustee_password': {u'get_param': u'trustee_password'}, u'ssh_key_name': {u'get_param': u'ssh_key_name'}, u'flannel_network_subnetlen': {u'get_param': u'flannel_network_subnetlen'}, u'flannel_network_cidr': {u'get_param': u'flannel_network_cidr'}, u'discovery_url': {u'get_param': u'discovery_url'}, u'server_image': {u'get_param': u'server_image'}}}}}, u'network': {u'type': u'file:///opt/stack/magnum/magnum/drivers/common/templates/network.yaml', u'properties': {u'existing_subnet': {u'get_param': u'fixed_subnet'}, u'existing_network': {u'get_param': u'fixed_network'}, u'private_network_name': u'private', u'private_network_cidr': {u'get_param': u'fixed_network_cidr'}, u'external_network': {u'get_param': u'external_network'}, u'dns_nameserver': {u'get_param': u'dns_nameserver'}}}, u'api_lb': {u'type': u'file:///opt/stack/magnum/magnum/drivers/common/templates/lb.yaml', u'properties': {u'external_network': {u'get_param': u'external_network'}, u'protocol': {u'get_param': u'loadbalancing_protocol'}, u'port': {u'get_param': u'kubernetes_port'}, u'fixed_subnet': {u'get_attr': [u'network', u'fixed_subnet']}}}, u'secgroup_kube_minion': {u'type': u'OS::Neutron::SecurityGroup', u'properties': {u'rules': [{u'protocol': u'icmp'}, {u'protocol': u'tcp'}, {u'protocol': u'udp'}]}}, u'secgroup_kube_master': {u'type': u'OS::Neutron::SecurityGroup', u'properties': {u'rules': [{u'protocol': u'icmp'}, {u'port_range_min': 22, u'port_range_max': 22, u'protocol': u'tcp'}, {u'port_range_min': 7080, u'port_range_max': 7080, u'protocol': u'tcp'}, {u'port_range_min': 8080, u'port_range_max': 8080, u'protocol': u'tcp'}, {u'port_range_min': 2379, u'port_range_max': 2379, u'protocol': u'tcp'}, {u'port_range_min': 2380, u'port_range_max': 2380, u'protocol': u'tcp'}, {u'port_range_min': 6443, u'port_range_max': 6443, u'protocol': u'tcp'}, {u'port_range_min': 30000, u'port_range_max': 32767, u'protocol': u'tcp'}]}}, u'kube_minions': {u'depends_on': [u'network'], u'type': u'OS::Heat::ResourceGroup', u'properties': {u'count': {u'get_param': u'number_of_minions'}, u'resource_def': {u'type': u'file:///opt/stack/magnum/magnum/drivers/k8s_fedora_atomic_v1/templates/kubeminion.yaml', u'properties': {u'magnum_url': {u'get_param': u'magnum_url'}, u'tenant_name': {u'get_param': u'tenant_name'}, u'registry_container': {u'get_param': u'registry_container'}, u'minion_flavor': {u'get_param': u'minion_flavor'}, u'trustee_user_id': {u'get_param': u'trustee_user_id'}, u'auth_url': {u'get_param': u'auth_url'}, u'wait_condition_timeout': {u'get_param': u'wait_condition_timeout'}, u'cluster_uuid': {u'get_param': u'cluster_uuid'}, u'kubernetes_port': {u'get_param': u'kubernetes_port'}, u'external_network': {u'get_param': u'external_network'}, u'trustee_domain_id': {u'get_param': u'trustee_domain_id'}, u'trust_id': {u'get_param': u'trust_id'}, u'region_name': {u'get_param': u'region_name'}, u'secgroup_kube_minion_id': {u'get_resource': u'secgroup_kube_minion'}, u'no_proxy': {u'get_param': u'no_proxy'}, u'registry_port': {u'get_param': u'registry_port'}, u'tls_disabled': {u'get_param': u'tls_disabled'}, u'https_proxy': {u'get_param': u'https_proxy'}, u'kube_version': {u'get_param': u'kube_version'}, u'fixed_subnet': {u'get_attr': [u'network', u'fixed_subnet']}, u'swift_region': {u'get_param': u'swift_region'}, u'username': {u'get_param': u'username'}, u'http_proxy': {u'get_param': u'http_proxy'}, u'docker_volume_size': {u'get_param': u'docker_volume_size'}, u'insecure_registry_url': {u'get_param': u'insecure_registry_url'}, u'volume_driver': {u'get_param': u'volume_driver'}, u'registry_enabled': {u'get_param': u'registry_enabled'}, u'kube_allow_priv': {u'get_param': u'kube_allow_priv'}, u'etcd_server_ip': {u'get_attr': [u'etcd_address_lb_switch', u'private_ip']}, u'password': {u'get_param': u'password'}, u'kube_master_ip': {u'get_attr': [u'api_address_lb_switch', u'private_ip']}, u'docker_storage_driver': {u'get_param': u'docker_storage_driver'}, u'registry_chunksize': {u'get_param': u'registry_chunksize'}, u'network_driver': {u'get_param': u'network_driver'}, u'fixed_network': {u'get_attr': [u'network', u'fixed_network']}, u'trustee_password': {u'get_param': u'trustee_password'}, u'trustee_username': {u'get_param': u'trustee_username'}, u'ssh_key_name': {u'get_param': u'ssh_key_name'}, u'registry_insecure': {u'get_param': u'registry_insecure'}, u'flannel_network_cidr': {u'get_param': u'flannel_network_cidr'}, u'server_image': {u'get_param': u'server_image'}}}, u'removal_policies': [{u'resource_list': {u'get_param': u'minions_to_remove'}}]}}, u'api_address_floating_switch': {u'type': u'Magnum::FloatingIPAddressSwitcher', u'properties': {u'public_ip': {u'get_attr': [u'api_address_lb_switch', u'public_ip']}, u'private_ip': {u'get_attr': [u'api_address_lb_switch', u'private_ip']}}}, u'api_address_lb_switch': {u'type': u'Magnum::ApiGatewaySwitcher', u'properties': {u'pool_public_ip': {u'get_attr': [u'api_lb', u'floating_address']}, u'pool_private_ip': {u'get_attr': [u'api_lb', u'address']}, u'master_public_ip': {u'get_attr': [u'kube_masters', u'resource.0.kube_master_external_ip']}, u'master_private_ip': {u'get_attr': [u'kube_masters', u'resource.0.kube_master_ip']}}}, u'etcd_address_lb_switch': {u'type': u'Magnum::ApiGatewaySwitcher', u'properties': {u'pool_private_ip': {u'get_attr': [u'etcd_lb', u'address']}, u'master_private_ip': {u'get_attr': [u'kube_masters', u'resource.0.kube_master_ip']}}}}}, u'user_creds_id': None, u'template_id': None, u'owner_id': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "204a18e9-0f15-4b16-9ecf-870b0a82fc07": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b/action", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "66270c90-3ecc-428b-913f-5cf6c6db51b6": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37edd70d0>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bc7fe6b8-ea37-4312-a8d5-3752321197e6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1be586cf-283d-44f8-9e0d-ba8f6c815e61": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b3cf1a21-8627-4d0e-a602-6bca259d6978": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/servers/5299fdb3-2219-46f9-8c52-86fce045e372", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b27896c7-56c2-4f05-b758-a05aca317e36": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "e6cd0eb7-d7e9-4fc8-b1e4-66ad1f53a9be": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ded6dd0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': '01024feb-6d17-4867-a22a-9a7ae4a9350a'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "609787c9-5112-4a64-b4a0-bf405a8879eb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'PUT', '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': {'port': {'device_owner': 'compute:None', 'binding:host_id': u'vinhnt-LAB', 'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}}, 'headers': None, 'params': None}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a796e669-c6a4-4423-85de-5be996e6a7f5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c8a0f56a-47e5-4c9c-94ab-0da50c87d604": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952d8bd850>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 69, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8aa17174-47af-489c-94bd-fcbf38c9442f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, 'networks', '/networks', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'f55f8258-835a-4732-ba02-0b3c78b6c1c1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f778faa6-6d01-4c20-aa79-bb293c93e4ee": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c8ba9b83-df19-42ad-913a-4e26ef220284": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e0981552-8251-4297-a62a-b355c1d9a2a8": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e29ab90>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': BlockDeviceMapping(boot_index=0,connection_info=None,created_at=2017-01-19T06:45:21Z,delete_on_termination=True,deleted=False,deleted_at=None,destination_type='local',device_name='/dev/vda',device_type='disk',disk_bus=None,guest_format=None,id=4,image_id='63388f50-4450-4c85-8f3c-197af8f6f6cf',instance=<?>,instance_uuid=5299fdb3-2219-46f9-8c52-86fce045e372,no_device=False,snapshot_id=None,source_type='image',tag=None,updated_at=None,volume_id=None,volume_size=None), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9c040710-d384-485a-bf84-43f71500b4bd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0169dcb8-9f00-4cc7-8f05-43a18de8fc7f": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/82c28688-a34b-4bc3-89c6-fdc04285570b", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "e5e3c95f-4bc7-4271-a61b-2a766c1e637b": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ded6dd0>, 'CREATE', 'COMPLETE', 'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ed7f4cb5-b8fd-428f-b66d-495a614fd637": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1f5f5600-6d58-49d6-9cb1-de4ee4fba2fc": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37ecdd310>, u'5299fdb3-2219-46f9-8c52-86fce045e372')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d955e8f5-7f9c-4b2a-9f2e-d9e7e74ff32c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "87790acc-d231-4a01-b54d-0a62f4704956": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d7d19b71-a4f3-44b9-9850-33d26911c759": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8dddee83-a792-4077-be9c-704f3a937238": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dcfd8d0>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-enable_services-n4r6gyfzfwuk', u'outputs': [], u'config': u'#!/bin/sh\\n\\n# make sure we pick up any modified unit files\\nsystemctl daemon-reload\\n\\necho \"starting services\"\\nfor service in etcd docker kube-apiserver kubelet; do\\n    echo \"activating service $service\"\\n    systemctl enable $service\\n    systemctl --no-block start $service\\ndone\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0f42d9bf-b6a1-4c7e-9858-d539f0cd3a17": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dcfa750>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20141016 object at 0x7f952dc06a50>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7df40c1d-4675-4b71-b8bb-19927ad8592b": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e5ebdd0>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDevicePoolList': u'1.1', u'ServiceList': u'1.19', u'PciDevicePool': u'1.1', u'Service': u'1.20', u'TagList': u'1.1', u'InstancePCIRequests': u'1.1', u'VirtCPUModel': u'1.0', u'MigrationContext': u'1.1', u'SecurityGroup': u'1.2', u'Instance': u'2.3', u'KeyPair': u'1.4', u'KeyPairList': u'1.3', u'DeviceMetadata': u'1.0', u'InstancePCIRequest': u'1.1', u'EC2Ids': u'1.0', u'InstanceInfoCache': u'1.5', u'VirtCPUFeature': u'1.0', u'Flavor': u'1.1', u'SecurityGroupList': u'1.0', u'PciDevice': u'1.5', u'VirtCPUTopology': u'1.0', u'InstanceNUMACell': u'1.3', u'DeviceBus': u'1.0', u'ComputeNode': u'1.16', u'InstanceFault': u'1.2', u'Tag': u'1.1', u'HVSpec': u'1.2', u'InstanceDeviceMetadata': u'1.0', u'InstanceNUMATopology': u'1.3', u'PciDeviceList': u'1.3'}, u'objmethod': u'get_by_uuid', u'args': [], u'objname': u'Instance', u'kwargs': {u'uuid': u'5299fdb3-2219-46f9-8c52-86fce045e372', u'expected_attrs': [u'flavor', u'system_metadata']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0f589e91-0f05-449f-bf19-148b12710d08": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "77676564-f607-4ffd-b4ff-16aa22575ff7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "37a0634e-2349-41fd-a67e-0abe22e9122f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "65ddbf01-5d68-45ad-93d3-19a1628281cc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d544dc55-a5fb-45bc-b710-2994c53b0372": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e3a198a8-336f-478b-ab75-13676de99993": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "208e89d8-0ff7-4b61-8a00-9726f12a3753": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e4a3e9fd-dcd6-4ff9-9843-5dddc4eabf0a": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c249b2dc-5789-4899-9627-c4f7273a456b": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/projects/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/users/16a78306dad744958b042daf74fe8afe/roles/7916b67c113044df97b0ad89fb772148", 
                "scheme": "http", 
                "method": "PUT", 
                "query": ""
            }
        }, 
        "ae051673-9ce6-47cc-a2aa-26dcc5866197": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "db2d705e-e55e-4d10-9068-8ebce19e2b93": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, u'{\"ports\": []}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a5241fd3-3e67-474b-a2de-fb2c269f1561": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e46f8223-d55b-41c7-8f86-bdd0f4651c55": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9c8718f5-449e-498e-b8ab-cfbcf9f3e21e": {
            "function": {
                "args": "(<nova.scheduler.rpcapi.SchedulerAPI object at 0x7faa4e8d9f50>, <nova.context.RequestContext object at 0x7faa4e79bf90>, RequestSpec(availability_zone=None,flavor=Flavor(7),force_hosts=None,force_nodes=None,id=<?>,ignore_hosts=None,image=ImageMeta(63388f50-4450-4c85-8f3c-197af8f6f6cf),instance_group=None,instance_uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,limits=SchedulerLimits,num_instances=1,numa_topology=None,pci_requests=InstancePCIRequests,project_id='f789928a4f254f96965ff7f3dedd02be',requested_destination=None,retry=SchedulerRetries,scheduler_hints={},security_groups=<?>))", 
                "name": "nova.scheduler.rpcapi.SchedulerAPI.select_destinations", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "122d3cbe-2790-40d6-9791-c9bc8afff8a5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_security_groups", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f2cc00b4-4c79-4edc-bffd-1cd5be9f74c3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1c8f11fe-e02b-4f09-b09c-043ad7f4035a": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e/action", 
                "scheme": "http", 
                "method": "POST", 
                "query": ""
            }
        }, 
        "3bc0f300-0d42-4dc9-8005-e5c77c27180c": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952df71090>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 1, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-etcd_lb-kbhpmtcuvob2', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 60}, u'environment_files': None, u'parent_resource_name': u'etcd_lb', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 5, u'owner_id': u'bf103727-c468-4586-a97c-2c940f7e4d29'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e1bd15c9-b273-470d-aa09-fdfb8b55442c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0a6583b9-6944-4861-abe7-b7f18102ce56": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d11b9641-9cb1-42b9-9243-71525e8860ed": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ac6b06e6-2fc3-46c0-b749-1ccb1bafcb0d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e4f3b152-3484-4181-8b09-a03011981fd8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0d222ab3-5eef-4c3f-a2f2-a979a42647c6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:55Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5cecfa75-0cb9-4b12-93f6-7cdeb1f816cd\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"9f30a188-364e-4d5f-b1a1-d4385bf9f402\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a2021987-017e-4cde-92c0-4fdde9a6cc3f\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"udp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a3cb2896-fc2a-4d4c-829f-0ec2895e8f3c\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"e0dfc1a7-2dad-42a1-8c64-88c542eb0f03\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 4, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_minion-tj5ln4ifneos\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d555c210-b656-4c1d-9784-0266c0b7fe80": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ad81b621-66cf-4c2f-8599-940d57451c24": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f953174f810>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ea489a1f-a3a9-4ad9-9128-a2661704aa79": {
            "function": {
                "args": "(<cinder.volume.manager.VolumeManager object at 0x7f95e2c81d50>, <cinder.context.RequestContext object at 0x7f95d46be050>)", 
                "name": "cinder.volume.manager.VolumeManager.create_volume", 
                "kwargs": "{u'volume': Volume(_name_id=None,admin_metadata={},attach_status='detached',availability_zone='nova',bootable=False,cluster=<?>,cluster_name=None,consistencygroup=<?>,consistencygroup_id=None,created_at=2017-01-19T06:42:12Z,deleted=False,deleted_at=None,display_description=None,display_name='k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-docker_volume-4xhyfkrl657w',ec2_id=None,encryption_key_id=None,glance_metadata=<?>,group=<?>,group_id=None,host='vinhnt-LAB@lvmdriver-1#lvmdriver-1',id=82c28688-a34b-4bc3-89c6-fdc04285570b,launched_at=None,metadata={},migration_status=None,multiattach=False,previous_status=None,project_id='f789928a4f254f96965ff7f3dedd02be',provider_auth=None,provider_geometry=None,provider_id=None,provider_location=None,replication_driver_data=None,replication_extended_status=None,replication_status=None,scheduled_at=2017-01-19T06:42:12Z,size=3,snapshot_id=None,snapshots=<?>,source_volid=None,status='creating',terminated_at=None,updated_at=None,user_id='34b35d595bf84b739aefa6458d6facb7',volume_attachment=<?>,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32),volume_type_id=4b1f0113-11a3-49fb-a626-61734cf88f32), u'allow_reschedule': True, u'request_spec': RequestSpec(CG_backend=<?>,cgsnapshot_id=None,consistencygroup_id=None,group_backend=<?>,group_id=None,image_id=None,snapshot_id=None,source_replicaid=None,source_volid=None,volume=Volume(82c28688-a34b-4bc3-89c6-fdc04285570b),volume_id=82c28688-a34b-4bc3-89c6-fdc04285570b,volume_properties=VolumeProperties,volume_type=VolumeType(4b1f0113-11a3-49fb-a626-61734cf88f32)), u'filter_properties': {u'config_options': {}, u'request_spec': {u'resource_properties': {u'status': u'creating', u'volume_type_id': u'4b1f0113-11a3-49fb-a626-61734cf88f32', u'group_id': None, u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'availability_zone': u'nova', u'reservations': [u'2001a79a-51c6-4efa-b551-a9f43f63df0c', u'5707c64c-23b5-4c70-9963-8c65fc4c6c91', u'2140ccbd-a022-4c7e-b819-b6ee202bc825', u'b3c45b81-8770-4d99-a55c-7504e5112b25'], u'multiattach': False, u'attach_status': u'detached', u'source_volid': None, u'cgsnapshot_id': None, u'metadata': {}, u'qos_specs': None, u'encryption_key_id': None, u'display_description': None, u'snapshot_id': None, u'source_replicaid': None, u'project_id': u'f789928a4f254f96965ff7f3dedd02be', u'consistencygroup_id': None, u'size': 3, u'display_name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-docker_volume-4xhyfkrl657w'}, u'source_replicaid': None, u'volume_properties': {u'status': u'creating', u'volume_type_id': u'4b1f0113-11a3-49fb-a626-61734cf88f32', u'group_id': None, u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'availability_zone': u'nova', u'reservations': [u'2001a79a-51c6-4efa-b551-a9f43f63df0c', u'5707c64c-23b5-4c70-9963-8c65fc4c6c91', u'2140ccbd-a022-4c7e-b819-b6ee202bc825', u'b3c45b81-8770-4d99-a55c-7504e5112b25'], u'multiattach': False, u'attach_status': u'detached', u'source_volid': None, u'cgsnapshot_id': None, u'metadata': {}, u'qos_specs': None, u'encryption_key_id': None, u'display_description': None, u'snapshot_id': None, u'source_replicaid': None, u'project_id': u'f789928a4f254f96965ff7f3dedd02be', u'consistencygroup_id': None, u'size': 3, u'display_name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-docker_volume-4xhyfkrl657w'}, u'source_volid': None, u'cgsnapshot_id': None, u'volume': {u'migration_status': None, u'provider_id': None, u'availability_zone': u'nova', u'terminated_at': None, u'updated_at': None, u'provider_geometry': None, u'replication_extended_status': None, u'replication_status': None, u'snapshot_id': None, u'ec2_id': None, u'deleted_at': None, u'id': u'82c28688-a34b-4bc3-89c6-fdc04285570b', u'size': 3, u'display_name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-docker_volume-4xhyfkrl657w', u'display_description': None, u'cluster_name': None, u'name_id': u'82c28688-a34b-4bc3-89c6-fdc04285570b', u'volume_admin_metadata': [], u'project_id': u'f789928a4f254f96965ff7f3dedd02be', u'launched_at': None, u'scheduled_at': None, u'status': u'creating', u'volume_type_id': u'4b1f0113-11a3-49fb-a626-61734cf88f32', u'multiattach': False, u'deleted': False, u'provider_location': None, u'volume_glance_metadata': [], u'host': None, u'consistencygroup_id': None, u'source_volid': None, u'provider_auth': None, u'previous_status': None, u'group_id': None, u'name': u'volume-82c28688-a34b-4bc3-89c6-fdc04285570b', u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'bootable': False, u'created_at': u'2017-01-19T06:42:12.000000', u'attach_status': u'detached', u'volume_metadata': [], u'_name_id': None, u'encryption_key_id': None, u'replication_driver_data': None, u'metadata': {}}, u'image_id': None, u'snapshot_id': None, u'consistencygroup_id': None, u'volume_type': {u'name': u'lvmdriver-1', u'qos_specs_id': None, u'deleted': False, u'created_at': u'2017-01-19T04:24:54.000000', u'updated_at': None, u'extra_specs': {u'volume_backend_name': u'lvmdriver-1'}, u'is_public': True, u'deleted_at': None, u'id': u'4b1f0113-11a3-49fb-a626-61734cf88f32', u'projects': [], u'description': None}, u'volume_id': u'82c28688-a34b-4bc3-89c6-fdc04285570b', u'group_id': None}, u'user_id': u'34b35d595bf84b739aefa6458d6facb7', u'availability_zone': u'nova', u'volume_type': VolumeType(created_at=2017-01-19T04:24:54Z,deleted=False,deleted_at=None,description=None,extra_specs={volume_backend_name='lvmdriver-1'},id=4b1f0113-11a3-49fb-a626-61734cf88f32,is_public=True,name='lvmdriver-1',projects=[],qos_specs=<?>,qos_specs_id=None,updated_at=None), u'qos_specs': None, u'retry': {u'num_attempts': 1, u'backends': [u'vinhnt-LAB@lvmdriver-1#lvmdriver-1'], u'hosts': [u'vinhnt-LAB@lvmdriver-1#lvmdriver-1']}, u'metadata': {}, u'resource_type': VolumeType(created_at=2017-01-19T04:24:54Z,deleted=False,deleted_at=None,description=None,extra_specs={volume_backend_name='lvmdriver-1'},id=4b1f0113-11a3-49fb-a626-61734cf88f32,is_public=True,name='lvmdriver-1',projects=[],qos_specs=<?>,qos_specs_id=None,updated_at=None), u'size': 3}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2f608c7b-6c69-417c-989b-a2cb1595fd4c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:55Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5cecfa75-0cb9-4b12-93f6-7cdeb1f816cd\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"9f30a188-364e-4d5f-b1a1-d4385bf9f402\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a2021987-017e-4cde-92c0-4fdde9a6cc3f\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"udp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a3cb2896-fc2a-4d4c-829f-0ec2895e8f3c\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"e0dfc1a7-2dad-42a1-8c64-88c542eb0f03\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 4, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_minion-tj5ln4ifneos\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5525d31a-2c78-416f-baf6-c1312b335b8d": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "9ec95407-3bf7-4b42-a146-8742ef61e27f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cdb90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "63deba29-faa1-4a44-b12f-0901b47b93e1": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37ec7c5d0>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8f152b57-ec42-466d-a52e-69a75916b1aa": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "1975bc94-5652-4bdf-a9e6-17da82b5fda6": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e3bef90>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'InstanceActionEvent': u'1.1'}, u'objmethod': u'event_start', u'args': [u'5299fdb3-2219-46f9-8c52-86fce045e372', u'compute__do_build_and_run_instance'], u'objname': u'InstanceActionEvent', u'kwargs': {u'want_result': False}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b1fc5cea-edc4-4c07-a493-3cfbdce2fe32": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f376cd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "17f2a5fd-a9cf-4893-8903-b18e04079803": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1dea3b7c-c75e-40b8-934f-3266aabc563f": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "475d09a2-c799-40b4-8ea3-238bb43b825e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "abae881f-1f80-44d0-bff3-6ab99a18cff3": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "7a5d08b0-ad73-44a2-8b87-d18de52745ee": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "97624199-63b2-4217-8992-3f93c9f1b4f0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, 'GET', '/ports/2c0275e1-3f3e-4ca5-aa69-a0660197e312')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b82db6f2-da6a-432e-a293-c22a47c511d0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "15ea1e79-5a67-4a2f-ab8b-7331f3837fc8": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, '/floatingips')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'fixed_ip_address': u'10.0.0.9', 'port_id': u'2c0275e1-3f3e-4ca5-aa69-a0660197e312'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7b850bd2-4472-4efd-bd6b-5bd434c217c9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "115c6d8f-4cb2-467d-8c40-17a4bad5f379": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc68bd0>)", 
                "name": "heat.engine.service.EngineService.show_software_config", 
                "kwargs": "{u'config_id': u'db76f97f-88b4-4c88-b1ac-34270e2502bd'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e7609883-558c-487d-929d-7c9c5397e2e5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "12de6644-cfd5-4a31-b121-cc3d4b0162a6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ac708ad8-02ea-4b4f-a669-1ea06b326c12": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e0818d0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': 'a5c68480-776d-4276-bb7b-f994f51e046d'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a0ca1c46-627a-430f-98ad-451e19089f80": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "632b2189-ad50-4b83-adbd-304788c8ace9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "47989656-8c3a-47a6-9449-a0c7b80c038c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, 'GET', '/subnets')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4049c3f1-8b28-4a07-9b61-d3855724661f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "330fc400-09de-4e2e-b4e0-e127659721f5": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0766d0>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "74cbebf0-4bf6-4f07-a9b0-734e2256d3e6": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952df5f490>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-write_kubeconfig-6xvqmt72ylll', u'outputs': [], u'config': u'#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /srv/kubernetes/kubeconfig.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Config\\n      users:\\n      - name: kubeclient\\n        user:\\n          client-certificate: CLIENT_CERT\\n          client-key: CLIENT_KEY\\n      clusters:\\n      - name: kubernetes\\n        cluster:\\n          certificate-authority: CA_CERT\\n      contexts:\\n      - context:\\n          cluster: kubernetes\\n          user: kubeclient\\n        name: service-account-context\\n      current-context: service-account-context\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "48e0874e-3bd8-4a07-98ec-e4517831625d": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dbe0c90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b65527d8-db10-4bc8-aa9f-8e584bd4e1af": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "330ce427-9555-4358-b73d-9d24e5d51094": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952df08390>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 75, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "901ebf2d-8025-4a4b-91e1-178e6fbc9daf": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37eb55710>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4f588e47-b46f-4a8d-92db-6f2eed9bb34e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ea3dd594-bf56-4cec-8957-935a5167f990": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e7b8210>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'refresh', u'args': [], u'objinst': InstanceInfoCache(created_at=2017-01-19T06:45:21Z,deleted=False,deleted_at=None,instance_uuid=5299fdb3-2219-46f9-8c52-86fce045e372,network_info=NetworkModel(),updated_at=None), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8875391d-c39a-4e4b-a436-9eb875906970": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "aca20298-e03f-41c1-baa1-a8fa64099391": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.list_ports of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "68dd0e89-9274-4f7f-9d3b-50ad7e9daf48": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e9a1f6ba-ef2e-4eda-b6ff-4f18352f6833": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952d8acd90>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 64, u'data': {u'input_data': {u'tuple:(75, True)': {u'status': u'COMPLETE', u'name': u'kube_minion_eth0', u'reference_id': u'fcff5957-172c-4937-8341-670d27155ef6', u'attrs': {u\"tuple:(u'fixed_ips', 0, u'ip_address')\": u'10.0.0.3'}, u'action': u'CREATE', u'id': 75, u'uuid': u'1bb9a653-fb55-4593-9931-50a2c16c63a9'}, u'tuple:(65, True)': {u'status': u'COMPLETE', u'name': u'docker_volume', u'uuid': u'6df565df-f669-4611-a108-c2f1cb4e48ba', u'attrs': {}, u'action': u'CREATE', u'id': 65, u'reference_id': u'1ad44791-704f-415a-a915-fb4ba2c7c87e'}, u'tuple:(71, True)': {u'status': u'COMPLETE', u'name': u'minion_wait_handle', u'uuid': u'7d82f5be-a2e8-461e-9af0-1808ab75d423', u'attrs': {u'curl_cli': u\"curl -i -X POST -H 'X-Auth-Token: gAAAAABYgGB5noXDDSbj8Ng3eHpHgCbOYM7zEglsOggifCzCBOclCcm3-ONpMVYEZ-36cWKMBP_NY7NGfaXv8WPOLxuHLZERbSYxYtKzY0Vk9-pNRp7TR9HEWzdyWQ_yY01L0AVdtH2cSQtSmSnWgspUsypqsLWLqGxTzianfN40CrqISq2ZZiQ' -H 'Content-Type: application/json' -H 'Accept: application/json' http://10.164.180.85:8004/v1/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/stacks/k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr/01356360-a283-455d-b873-caffa7bc43c7/resources/minion_wait_handle/signal\"}, u'action': u'CREATE', u'id': 71, u'reference_id': u'16a78306dad744958b042daf74fe8afe'}, u'tuple:(74, True)': {u'status': u'COMPLETE', u'name': u'kube_minion_floating', u'reference_id': u'ea33df0d-2582-4d39-89fc-653c1df559a1', u'attrs': {u'floating_ip_address': u'172.24.4.4'}, u'action': u'CREATE', u'id': 74, u'uuid': u'a176d966-7838-41b9-baac-bb1325418ca5'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "058c38a6-1655-40f4-ac51-6b62d0515a1f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ca034321-fcc5-493d-ac56-9efd1015d851": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952ddfe210>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 40, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0963f2ef-b1cb-42a4-add3-4aaa7b95c41f": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e6e5910>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDevicePool': u'1.1', u'Service': u'1.20', u'InstancePCIRequests': u'1.1', u'SecurityGroup': u'1.2', u'BlockDeviceMappingList': u'1.17', u'Instance': u'2.3', u'DeviceMetadata': u'1.0', u'SecurityGroupList': u'1.0', u'VirtCPUTopology': u'1.0', u'InstanceFault': u'1.2', u'InstanceDeviceMetadata': u'1.0', u'PciDeviceList': u'1.3', u'PciDevicePoolList': u'1.1', u'ServiceList': u'1.19', u'BlockDeviceMapping': u'1.17', u'VirtCPUModel': u'1.0', u'MigrationContext': u'1.1', u'KeyPair': u'1.4', u'KeyPairList': u'1.3', u'InstancePCIRequest': u'1.1', u'Flavor': u'1.1', u'InstanceInfoCache': u'1.5', u'VirtCPUFeature': u'1.0', u'PciDevice': u'1.5', u'InstanceNUMACell': u'1.3', u'DeviceBus': u'1.0', u'ComputeNode': u'1.16', u'Tag': u'1.1', u'HVSpec': u'1.2', u'EC2Ids': u'1.0', u'InstanceNUMATopology': u'1.3', u'TagList': u'1.1'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'], u'objname': u'BlockDeviceMappingList', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a967b0d8-9512-45c3-8710-b3878855d18e": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e59ab90>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'VirtualInterfaceList': u'1.0', u'VirtualInterface': u'1.3'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'], u'objname': u'VirtualInterfaceList', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b7ac6a45-cdc5-4283-9b31-b8ccb4298132": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dcbbf90>)", 
                "name": "heat.engine.service.EngineService.show_stack", 
                "kwargs": "{u'resolve_outputs': True, u'stack_identity': {u'stack_name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv', u'stack_id': u'c3f7a50b-5fc9-4209-8728-2af4300e42de', u'tenant': u'f789928a4f254f96965ff7f3dedd02be', u'path': u''}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0b2eb673-a0b6-4c30-bfa9-43dc1d039186": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e0818d0>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20141016 object at 0x7f952df8ba10>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "85c7c921-d650-441a-a493-acae8f1634e6": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e66ac9a5-7296-4db9-a0c7-5e17bb03a054": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9ae310a2-fe11-4524-a8e2-42822f6c2710": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper.list_security_groups of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "de34402b-4217-4f63-97a8-a816cc7fd1d9": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "3bcc2814-22ae-442d-9d99-57dd09f03ee5": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e191d90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "087ade3a-cb68-4054-9617-bc111131c6e3": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eea0490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "71d2c3de-22aa-4fab-95f6-b90eeb24274f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e36a30e6-9f74-4e5c-871f-c103e422b3b0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:55Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5cecfa75-0cb9-4b12-93f6-7cdeb1f816cd\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"9f30a188-364e-4d5f-b1a1-d4385bf9f402\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a2021987-017e-4cde-92c0-4fdde9a6cc3f\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"udp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"a3cb2896-fc2a-4d4c-829f-0ec2895e8f3c\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"e0dfc1a7-2dad-42a1-8c64-88c542eb0f03\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 4, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"a194cf94-7b7a-42dd-86a1-306e04d6c859\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_minion-tj5ln4ifneos\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "62cfd1da-dcaf-4232-a838-e8495422ae05": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "2f6a01ab-02b7-4f6b-a3bf-2ca4905fc262": {
            "function": {
                "args": "(<nova.virt.libvirt.vif.LibvirtGenericVIFDriver object at 0x7f67efb80e90>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic',network_allocated='True'},tags=<?>,task_state='spawning',terminated_at=None,updated_at=2017-01-19T06:45:23Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=VirtCPUModel,vcpus=1,vm_mode=None,vm_state='building'), {\"profile\": {}, \"ovs_interfaceid\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"preserve_on_delete\": true, \"network\": {\"bridge\": \"br-int\", \"subnets\": [{\"ips\": [{\"meta\": {}, \"version\": 4, \"type\": \"fixed\", \"floating_ips\": [{\"meta\": {}, \"version\": 4, \"type\": \"floating\", \"address\": \"172.24.4.4\"}], \"address\": \"10.0.0.3\"}], \"version\": 4, \"meta\": {\"dhcp_server\": \"10.0.0.2\"}, \"dns\": [{\"meta\": {}, \"version\": 4, \"type\": \"dns\", \"address\": \"8.8.8.8\"}], \"routes\": [], \"cidr\": \"10.0.0.0/24\", \"gateway\": {\"meta\": {}, \"version\": 4, \"type\": \"gateway\", \"address\": \"10.0.0.1\"}}], \"meta\": {\"injected\": false, \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"mtu\": 1450}, \"id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"label\": \"private\"}, \"devname\": \"tapfcff5957-17\", \"vnic_type\": \"normal\", \"qbh_params\": null, \"meta\": {}, \"details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"address\": \"fa:16:3e:cf:f0:f1\", \"active\": false, \"type\": \"ovs\", \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"qbg_params\": null}, ImageMeta(checksum='1db43e5c5f8fda49dc4324cbb391bc55',container_format='bare',created_at=2017-01-19T04:22:26Z,direct_url=<?>,disk_format='qcow2',id=63388f50-4450-4c85-8f3c-197af8f6f6cf,min_disk=0,min_ram=0,name='fedora-atomic-latest',owner='952ab5c3e12a4e4093bed04b75f3afc5',properties=ImageMetaProps,protected=<?>,size=697925632,status='active',tags=<?>,updated_at=2017-01-19T04:28:13Z,virtual_size=<?>,visibility=<?>), Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), 'kvm', <nova.virt.libvirt.host.Host object at 0x7f67efb80d50>)", 
                "name": "nova.virt.libvirt.vif.LibvirtGenericVIFDriver.get_config", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fcec0cda-9fad-47f3-96ec-14aa5ca0d064": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "07b1c5d6-e5aa-4615-962d-bb03b4422cce": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/os-keypairs/testkey", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "18ebb770-11ff-4c70-a83a-022d7f27c98c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d50ba45f-18b7-4689-ad3b-8d76d918a41e": {
            "function": {
                "args": "(<nova.virt.libvirt.vif.LibvirtGenericVIFDriver object at 0x7f67efb80e90>, Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:42:20Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',display_name='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-2zj2u4ukvh-0-7hvswaiqakxv-kube-master-km7o2j7r3xxm',id=2,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=None,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=<?>,pci_requests=InstancePCIRequests,power_state=0,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-kz80mc8r',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic',network_allocated='True'},tags=<?>,task_state='spawning',terminated_at=None,updated_at=2017-01-19T06:42:23Z,user_data='Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojY2xvdWQtYm9vdGhvb2sKIyEvYmluL3NoCgpzZXRlbmZvcmNlIDAKCnNlZCAtaSAnCiAgICAvXlNFTElOVVg9LyBzLz0uKi89cGVybWlzc2l2ZS8KJyAvZXRjL3NlbGludXgvY29uZmlnCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojY2xvdWQtY29uZmlnCm1lcmdlX2hvdzogZGljdChyZWN1cnNlX2FycmF5KStsaXN0KGFwcGVuZCkKd3JpdGVfZmlsZXM6CiAgLSBwYXRoOiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIEtVQkVfQVBJX1BVQkxJQ19BRERSRVNTPSIxNzIuMjQuNC4xMSIKICAgICAgS1VCRV9BUElfUFJJVkFURV9BRERSRVNTPSIxMC4wLjAuOSIKICAgICAgS1VCRV9BUElfUE9SVD0iODA4MCIKICAgICAgS1VCRV9OT0RFX1BVQkxJQ19JUD0iMTcyLjI0LjQuMTEiCiAgICAgIEtVQkVfTk9ERV9JUD0iMTAuMC4wLjkiCiAgICAgIEtVQkVfQUxMT1dfUFJJVj0idHJ1ZSIKICAgICAgRU5BQkxFX0NJTkRFUj0iJEVOQUJMRV9DSU5ERVIiCiAgICAgIERPQ0tFUl9WT0xVTUU9IjgyYzI4Njg4LWEzNGItNGJjMy04OWM2LWZkYzA0Mjg1NTcwYiIKICAgICAgRE9DS0VSX1ZPTFVNRV9TSVpFPSIzIgogICAgICBET0NLRVJfU1RPUkFHRV9EUklWRVI9ImRldmljZW1hcHBlciIKICAgICAgTkVUV09SS19EUklWRVI9ImZsYW5uZWwiCiAgICAgIEZMQU5ORUxfTkVUV09SS19DSURSPSIxMC4xMDAuMC4wLzE2IgogICAgICBGTEFOTkVMX05FVFdPUktfU1VCTkVUTEVOPSIyNCIKICAgICAgRkxBTk5FTF9CQUNLRU5EPSJ1ZHAiCiAgICAgIFBPUlRBTF9ORVRXT1JLX0NJRFI9IjEwLjI1NC4wLjAvMTYiCiAgICAgIEVUQ0RfRElTQ09WRVJZX1VSTD0iaHR0cHM6Ly9kaXNjb3ZlcnkuZXRjZC5pby8yMDJkNmY4OTVlZDNmNmRkODA0MWI3YjhkMmE1YTM3ZiIKICAgICAgVVNFUk5BTUU9ImFkbWluIgogICAgICBQQVNTV09SRD0iQ2hhbmdlTWUiCiAgICAgIFRFTkFOVF9OQU1FPSJmNzg5OTI4YTRmMjU0Zjk2OTY1ZmY3ZjNkZWRkMDJiZSIKICAgICAgQ0xVU1RFUl9TVUJORVQ9ImNlOTBmOGZjLTRlZDItNGE1NS05Y2Y2LTI2MmZlNDY2ZTI1NyIKICAgICAgVExTX0RJU0FCTEVEPSJUcnVlIgogICAgICBDTFVTVEVSX1VVSUQ9IjlhOGVhMzdjLWU5ZDMtNGE3YS1hMmIxLWRjMTY0ZmIyMWQ2NyIKICAgICAgTUFHTlVNX1VSTD0iaHR0cDovLzEwLjE2NC4xODAuODU6OTUxMS92MSIKICAgICAgSFRUUF9QUk9YWT0iaHR0cDovLzEwLjE2NC4xNzcuMTY4OjgwODAvIgogICAgICBIVFRQU19QUk9YWT0iaHR0cDovLzEwLjE2NC4xNzcuMTY4OjgwODAvIgogICAgICBOT19QUk9YWT0iMTAuMTY0LjE4MC44NSwxMC4wLjAuMC84LDE3Mi4wLjAuMC84IgogICAgICBXQUlUX0NVUkw9ImN1cmwgLWkgLVggUE9TVCAtSCAnWC1BdXRoLVRva2VuOiBnQUFBQUFCWWdGX0RtX1c1d0p1cFRCWEFEOHJGS1lYaUJjMU5hZ01pYnI3ai1pRWxYMnRXVEQ0ZnZuUmN5VzB2X3FBMEFHOU1qODNvME41a0Y3MGJ6Zkd5YWVQNFo5NDE0QmJ6UkpHZTVXRm5hRS1wUElnQTQwdk1XTjR5VHdzM0I3VEVWM01udjBXUWZ2R2NnTG80V2NWR0puTWI4Sy1tNmJNSzdNYkh4Y3BBR2NIazVtZVRlQVEnIC1IICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nIC1IICdBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24nIGh0dHA6Ly8xMC4xNjQuMTgwLjg1OjgwMDQvdjEvM2ZiZDZhMWZkNWYwNGUzMmJmNTg0ZGZkNGI0ZjljNWUvc3RhY2tzL2s4cy1jbHVzdGVyLXVpNGY0b2dlemhtNy1rdWJlX21hc3RlcnMtNGIyemoydTR1a3ZoLTAtN2h2c3dhaXFha3h2L2MzZjdhNTBiLTVmYzktNDIwOS04NzI4LTJhZjQzMDBlNDJkZS9yZXNvdXJjZXMvbWFzdGVyX3dhaXRfaGFuZGxlL3NpZ25hbCIKICAgICAgS1VCRV9WRVJTSU9OPSJ2MS4yLjAiCiAgICAgIFRSVVNURUVfVVNFUl9JRD0iNDRmNzYzZTU3Mjc3NDdlZWJhNmYzMDk1ZDdhODY5NTIiCiAgICAgIFRSVVNURUVfUEFTU1dPUkQ9IjdCWHA5QUJwQmdlSzV6YXRkVCIKICAgICAgVFJVU1RfSUQ9ImE2ZjVjZGQzZWY4MTRjMzJiZDM2YjEzMzc4MTc4NmJjIgogICAgICBBVVRIX1VSTD0iaHR0cDovLzEwLjE2NC4xODAuODU6NTAwMC92MyIKICAgICAgSU5TRUNVUkVfUkVHSVNUUllfVVJMPSIiCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLXogIiRLVUJFX05PREVfSVAiIF07IHRoZW4KICAgICMgRklYTUUoeXVhbnlpbmcpOiBTZXQgS1VCRV9OT0RFX0lQIGNvcnJlY3RseQogICAgS1VCRV9OT0RFX0lQPSQoY3VybCAtcyBodHRwOi8vMTY5LjI1NC4xNjkuMjU0L2xhdGVzdC9tZXRhLWRhdGEvbG9jYWwtaXB2NCkKZmkKCm15aXA9IiR7S1VCRV9OT0RFX0lQfSIKY2VydF9kaXI9Ii9zcnYva3ViZXJuZXRlcyIKcHJvdG9jb2w9Imh0dHBzIgoKaWYgWyAiJFRMU19ESVNBQkxFRCIgPSAiVHJ1ZSIgXTsgdGhlbgogICAgcHJvdG9jb2w9Imh0dHAiCmZpCgpjYXQgPiAvZXRjL2V0Y2QvZXRjZC5jb25mIDw8RU9GCkVUQ0RfTkFNRT0iJG15aXAiCkVUQ0RfREFUQV9ESVI9Ii92YXIvbGliL2V0Y2QvZGVmYXVsdC5ldGNkIgpFVENEX0xJU1RFTl9DTElFTlRfVVJMUz0iJHByb3RvY29sOi8vJG15aXA6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkiCkVUQ0RfTElTVEVOX1BFRVJfVVJMUz0iJHByb3RvY29sOi8vJG15aXA6MjM4MCIKCkVUQ0RfQURWRVJUSVNFX0NMSUVOVF9VUkxTPSIkcHJvdG9jb2w6Ly8kbXlpcDoyMzc5LGh0dHA6Ly8xMjcuMC4wLjE6MjM3OSIKRVRDRF9JTklUSUFMX0FEVkVSVElTRV9QRUVSX1VSTFM9IiRwcm90b2NvbDovLyRteWlwOjIzODAiCkVUQ0RfRElTQ09WRVJZPSIkRVRDRF9ESVNDT1ZFUllfVVJMIgpFT0YKCmlmIFsgIiRUTFNfRElTQUJMRUQiID0gIkZhbHNlIiBdOyB0aGVuCgpjYXQgPj4gL2V0Yy9ldGNkL2V0Y2QuY29uZiA8PEVPRgpFVENEX0NBX0ZJTEU9JGNlcnRfZGlyL2NhLmNydApFVENEX0NFUlRfRklMRT0kY2VydF9kaXIvc2VydmVyLmNydApFVENEX0tFWV9GSUxFPSRjZXJ0X2Rpci9zZXJ2ZXIua2V5CkVUQ0RfUEVFUl9DQV9GSUxFPSRjZXJ0X2Rpci9jYS5jcnQKRVRDRF9QRUVSX0NFUlRfRklMRT0kY2VydF9kaXIvc2VydmVyLmNydApFVENEX1BFRVJfS0VZX0ZJTEU9JGNlcnRfZGlyL3NlcnZlci5rZXkKRU9GCgpmaQoKaWYgWyAtbiAiJEhUVFBfUFJPWFkiIF07IHRoZW4KICAgIGVjaG8gIkVUQ0RfRElTQ09WRVJZX1BST1hZPSRIVFRQX1BST1hZIiA+PiAvZXRjL2V0Y2QvZXRjZC5jb25mCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCktVQkVfT1NfQ0xPVURfQ09ORklHPS9ldGMvc3lzY29uZmlnL2t1YmVfb3BlbnN0YWNrX2NvbmZpZwoKIyBrdWJlcm5ldGVzIGJhY2tlbmQgb25seSBzdXBwb3J0IGtleXN0b25lIHYyIGF0IHRoaXMgcG9pbnQKQVVUSF9VUkw9JChlY2hvICIkQVVUSF9VUkwiIHwgc2VkICdzL3YzL3YyLjAvJykKCiMgR2VuZXJhdGUgYSB0aGUgY29uZmlndXJhdGlvbiBmb3IgS3ViZXJuZXRlcyBzZXJ2aWNlcwojIHRvIHRhbGsgdG8gT3BlblN0YWNrIE5ldXRyb24KY2F0ID4gJEtVQkVfT1NfQ0xPVURfQ09ORklHIDw8RU9GCltHbG9iYWxdCmF1dGgtdXJsPSRBVVRIX1VSTAp1c2VybmFtZT0kVVNFUk5BTUUKcGFzc3dvcmQ9JFBBU1NXT1JECnRlbmFudC1uYW1lPSRURU5BTlRfTkFNRQpbTG9hZEJhbGFuY2VyXQpzdWJuZXQtaWQ9JENMVVNURVJfU1VCTkVUCmNyZWF0ZS1tb25pdG9yPXllcwptb25pdG9yLWRlbGF5PTFtCm1vbml0b3ItdGltZW91dD0zMHMKbW9uaXRvci1tYXgtcmV0cmllcz0zCkVPRgoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgojIENvcHlyaWdodCAyMDE0IFRoZSBLdWJlcm5ldGVzIEF1dGhvcnMgQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwojIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KIyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKIwojICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKIwojIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKIyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAojIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgojIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKIyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCnNldCAtbyBlcnJleGl0CnNldCAtbyBub3Vuc2V0CnNldCAtbyBwaXBlZmFpbAoKaWYgWyAiJFRMU19ESVNBQkxFRCIgPT0gIlRydWUiIF07IHRoZW4KICAgIGV4aXQgMApmaQoKaWYgW1sgLXogIiR7S1VCRV9OT0RFX1BVQkxJQ19JUH0iIF1dOyB0aGVuCiAgICBLVUJFX05PREVfUFVCTElDX0lQPSQoY3VybCAtcyBodHRwOi8vMTY5LjI1NC4xNjkuMjU0L2xhdGVzdC9tZXRhLWRhdGEvcHVibGljLWlwdjQpCmZpCmlmIFtbIC16ICIke0tVQkVfTk9ERV9JUH0iIF1dOyB0aGVuCiAgICBLVUJFX05PREVfSVA9JChjdXJsIC1zIGh0dHA6Ly8xNjkuMjU0LjE2OS4yNTQvbGF0ZXN0L21ldGEtZGF0YS9sb2NhbC1pcHY0KQpmaQoKc2Fucz0iSVA6JHtLVUJFX05PREVfUFVCTElDX0lQfSxJUDoke0tVQkVfTk9ERV9JUH0iCmlmIFsgIiR7S1VCRV9OT0RFX1BVQkxJQ19JUH0iICE9ICIke0tVQkVfQVBJX1BVQkxJQ19BRERSRVNTfSIgXSBcCiAgICAgICAgJiYgWyAtbiAiJHtLVUJFX0FQSV9QVUJMSUNfQUREUkVTU30iIF07IHRoZW4KICAgIHNhbnM9IiR7c2Fuc30sSVA6JHtLVUJFX0FQSV9QVUJMSUNfQUREUkVTU30iCmZpCmlmIFsgIiR7S1VCRV9OT0RFX0lQfSIgIT0gIiR7S1VCRV9BUElfUFJJVkFURV9BRERSRVNTfSIgXSBcCiAgICAgICAgJiYgWyAtbiAiJHtLVUJFX0FQSV9QUklWQVRFX0FERFJFU1N9IiBdOyB0aGVuCiAgICBzYW5zPSIke3NhbnN9LElQOiR7S1VCRV9BUElfUFJJVkFURV9BRERSRVNTfSIKZmkKTUFTVEVSX0hPU1ROQU1FPSR7TUFTVEVSX0hPU1ROQU1FOi19CmlmIFtbIC1uICIke01BU1RFUl9IT1NUTkFNRX0iIF1dOyB0aGVuCiAgICBzYW5zPSIke3NhbnN9LEROUzoke01BU1RFUl9IT1NUTkFNRX0iCmZpCnNhbnM9IiR7c2Fuc30sSVA6MTI3LjAuMC4xIgoKY2VydF9kaXI9L3Nydi9rdWJlcm5ldGVzCmNlcnRfY29uZl9kaXI9JHtjZXJ0X2Rpcn0vY29uZgoKbWtkaXIgLXAgIiRjZXJ0X2RpciIKbWtkaXIgLXAgIiRjZXJ0X2NvbmZfZGlyIgoKQ0FfQ0VSVD0kY2VydF9kaXIvY2EuY3J0ClNFUlZFUl9DRVJUPSRjZXJ0X2Rpci9zZXJ2ZXIuY3J0ClNFUlZFUl9DU1I9JGNlcnRfZGlyL3NlcnZlci5jc3IKU0VSVkVSX0tFWT0kY2VydF9kaXIvc2VydmVyLmtleQoKI0dldCBhIHRva2VuIGJ5IHVzZXIgY3JlZGVudGlhbHMgYW5kIHRydXN0CmF1dGhfanNvbj0kKGNhdCA8PCBFT0YKewogICAgImF1dGgiOiB7CiAgICAgICAgImlkZW50aXR5IjogewogICAgICAgICAgICAibWV0aG9kcyI6IFsKICAgICAgICAgICAgICAgICJwYXNzd29yZCIKICAgICAgICAgICAgXSwKICAgICAgICAgICAgInBhc3N3b3JkIjogewogICAgICAgICAgICAgICAgInVzZXIiOiB7CiAgICAgICAgICAgICAgICAgICAgImlkIjogIiRUUlVTVEVFX1VTRVJfSUQiLAogICAgICAgICAgICAgICAgICAgICJwYXNzd29yZCI6ICIkVFJVU1RFRV9QQVNTV09SRCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInNjb3BlIjogewogICAgICAgICAgICAiT1MtVFJVU1Q6dHJ1c3QiOiB7CiAgICAgICAgICAgICAgICAiaWQiOiAiJFRSVVNUX0lEIgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9CkVPRgopCgojdHJ1c3QgaXMgaW50cm9kdWNlZCBpbiBLZXlzdG9uZSB2MyB2ZXJzaW9uCkFVVEhfVVJMPSR7QVVUSF9VUkwvdjIuMC92M30KY29udGVudF90eXBlPSdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nCnVybD0iJEFVVEhfVVJML2F1dGgvdG9rZW5zIgpVU0VSX1RPS0VOPWBjdXJsIC1rIC1zIC1pIC1YIFBPU1QgLUggIiRjb250ZW50X3R5cGUiIC1kICIkYXV0aF9qc29uIiAkdXJsIFwKICAgIHwgZ3JlcCBYLVN1YmplY3QtVG9rZW4gfCBhd2sgJ3twcmludCAkMn0nIHwgdHIgLWQgJ1tbOnNwYWNlOl1dJ2AKCiMgR2V0IENBIGNlcnRpZmljYXRlIGZvciB0aGlzIGNsdXN0ZXIKY3VybCAtayAtWCBHRVQgXAogICAgLUggIlgtQXV0aC1Ub2tlbjogJFVTRVJfVE9LRU4iIFwKICAgICRNQUdOVU1fVVJML2NlcnRpZmljYXRlcy8kQ0xVU1RFUl9VVUlEIHwgcHl0aG9uIC1jICdpbXBvcnQgc3lzLCBqc29uOyBwcmludCBqc29uLmxvYWQoc3lzLnN0ZGluKVsicGVtIl0nID4gJHtDQV9DRVJUfQoKIyBDcmVhdGUgY29uZmlnIGZvciBzZXJ2ZXIncyBjc3IKY2F0ID4gJHtjZXJ0X2NvbmZfZGlyfS9zZXJ2ZXIuY29uZiA8PEVPRgpbcmVxXQpkaXN0aW5ndWlzaGVkX25hbWUgPSByZXFfZGlzdGluZ3Vpc2hlZF9uYW1lCnJlcV9leHRlbnNpb25zICAgICA9IHJlcV9leHQKcHJvbXB0ID0gbm8KW3JlcV9kaXN0aW5ndWlzaGVkX25hbWVdCkNOID0ga3ViZXJuZXRlcy5pbnZhbGlkCltyZXFfZXh0XQpzdWJqZWN0QWx0TmFtZSA9ICR7c2Fuc30KZXh0ZW5kZWRLZXlVc2FnZSA9IGNsaWVudEF1dGgsc2VydmVyQXV0aApFT0YKCiMgR2VuZXJhdGUgc2VydmVyJ3MgcHJpdmF0ZSBrZXkgYW5kIGNzcgpvcGVuc3NsIGdlbnJzYSAtb3V0ICIke1NFUlZFUl9LRVl9IiA0MDk2CmNobW9kIDQwMCAiJHtTRVJWRVJfS0VZfSIKb3BlbnNzbCByZXEgLW5ldyAtZGF5cyAxMDAwIFwKICAgICAgICAta2V5ICIke1NFUlZFUl9LRVl9IiBcCiAgICAgICAgLW91dCAiJHtTRVJWRVJfQ1NSfSIgXAogICAgICAgIC1yZXFleHRzIHJlcV9leHQgXAogICAgICAgIC1jb25maWcgIiR7Y2VydF9jb25mX2Rpcn0vc2VydmVyLmNvbmYiCgojIFNlbmQgY3NyIHRvIE1hZ251bSB0byBoYXZlIGl0IHNpZ25lZApjc3JfcmVxPSQocHl0aG9uIC1jICJpbXBvcnQganNvbjsgZnAgPSBvcGVuKCcke1NFUlZFUl9DU1J9Jyk7IHByaW50IGpzb24uZHVtcHMoeydjbHVzdGVyX3V1aWQnOiAnJENMVVNURVJfVVVJRCcsICdjc3InOiBmcC5yZWFkKCl9KTsgZnAuY2xvc2UoKSIpCmN1cmwgLWsgLVggUE9TVCBcCiAgICAtSCAiWC1BdXRoLVRva2VuOiAkVVNFUl9UT0tFTiIgXAogICAgLUggIkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbiIgXAogICAgLWQgIiRjc3JfcmVxIiBcCiAgICAkTUFHTlVNX1VSTC9jZXJ0aWZpY2F0ZXMgfCBweXRob24gLWMgJ2ltcG9ydCBzeXMsIGpzb247IHByaW50IGpzb24ubG9hZChzeXMuc3RkaW4pWyJwZW0iXScgPiAke1NFUlZFUl9DRVJUfQoKIyBDb21tb24gY2VydHMgYW5kIGtleSBhcmUgY3JlYXRlZCBmb3IgYm90aCBldGNkIGFuZCBrdWJlcm5ldGVzIHNlcnZpY2VzLgojIEJvdGggZXRjZCBhbmQga3ViZSB1c2VyIHNob3VsZCBoYXZlIHBlcm1pc3Npb24gdG8gYWNjZXNzIHRoZSBjZXJ0cyBhbmQga2V5Lgpncm91cGFkZCBrdWJlX2V0Y2QKdXNlcm1vZCAtYSAtRyBrdWJlX2V0Y2QgZXRjZAp1c2VybW9kIC1hIC1HIGt1YmVfZXRjZCBrdWJlCmNobW9kIDU1MCAiJHtjZXJ0X2Rpcn0iCmNob3duIC1SIGt1YmU6a3ViZV9ldGNkICIke2NlcnRfZGlyfSIKY2htb2QgNDQwICRTRVJWRVJfS0VZCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLW4gIiRET0NLRVJfVk9MVU1FX1NJWkUiIF0gJiYgWyAiJERPQ0tFUl9WT0xVTUVfU0laRSIgLWd0IDAgXTsgdGhlbgogICAgaWYgWyAiJEVOQUJMRV9DSU5ERVIiID09ICJGYWxzZSIgXTsgdGhlbgogICAgICAgICMgRklYTUUoeXVhbnlpbmcpOiBVc2UgZXBoZW1lcmFsIGRpc2sgZm9yIGRvY2tlciBzdG9yYWdlCiAgICAgICAgIyBDdXJyZW50bHkgSXJvbmljIGRvZXNuJ3Qgc3VwcG9ydCBjaW5kZXIgdm9sdW1lcywKICAgICAgICAjIHNvIHdlIG11c3QgdXNlIHByZXNlcnZlZCBlcGhlbWVyYWwgZGlzayBpbnN0ZWFkIG9mIGEgY2luZGVyIHZvbHVtZS4KICAgICAgICBkZXZpY2VfcGF0aD0kKHJlYWRsaW5rIC1mIC9kZXYvZGlzay9ieS1sYWJlbC9lcGhlbWVyYWwwKQogICAgZWxzZQogICAgICAgIGF0dGVtcHRzPTYwCiAgICAgICAgd2hpbGUgWyAke2F0dGVtcHRzfSAtZ3QgMCBdOyBkbwogICAgICAgICAgICBkZXZpY2VfbmFtZT0kKGxzIC9kZXYvZGlzay9ieS1pZCB8IGdyZXAgJHtET0NLRVJfVk9MVU1FOjA6MjB9JCkKICAgICAgICAgICAgaWYgWyAtbiAiJHtkZXZpY2VfbmFtZX0iIF07IHRoZW4KICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGZpCiAgICAgICAgICAgIGVjaG8gIndhaXRpbmcgZm9yIGRpc2sgZGV2aWNlIgogICAgICAgICAgICBzbGVlcCAwLjUKICAgICAgICAgICAgdWRldmFkbSB0cmlnZ2VyCiAgICAgICAgICAgIGxldCBhdHRlbXB0cy0tCiAgICAgICAgZG9uZQoKICAgICAgICBpZiBbIC16ICIke2RldmljZV9uYW1lfSIgXTsgdGhlbgogICAgICAgICAgICBlY2hvICJFUlJPUjogZGlzayBkZXZpY2UgZG9lcyBub3QgZXhpc3QiID4mMgogICAgICAgICAgICBleGl0IDEKICAgICAgICBmaQoKICAgICAgICBkZXZpY2VfcGF0aD0vZGV2L2Rpc2svYnktaWQvJHtkZXZpY2VfbmFtZX0KICAgIGZpCmZpCgojIFRoaXMgZmlsZSBjb250YWlucyBkb2NrZXIgc3RvcmFnZSBkcml2ZXJzIGNvbmZpZ3VyYXRpb24gZm9yIGZlZG9yYQojIGF0b21pYyBob3N0cy4gQ3VycmVudGx5LCBkZXZpY2VtYXBwZXIgYW5kIG92ZXJsYXkgYXJlIHN1cHBvcnRlZC4KCiMgUmVtb3ZlIGFueSBleGlzdGluZyBkb2NrZXItc3RvcmFnZSBjb25maWd1cmF0aW9uLiBJbiBjYXNlIG9mIGFuCiMgZXhpc3RpbmcgY29uZmlndXJhdGlvbiwgZG9ja2VyLXN0b3JhZ2Utc2V0dXAgd2lsbCBmYWlsLgpjbGVhcl9kb2NrZXJfc3RvcmFnZV9jb25maWd1cmF0aW9uICgpIHsKICAgIGlmIFsgLWYgL2V0Yy9zeXNjb25maWcvZG9ja2VyLXN0b3JhZ2UgXTsgdGhlbgogICAgICAgIHNlZCAtaSAiL15ET0NLRVJfU1RPUkFHRV9PUFRJT05TPS8gcy89LiovPS8iIC9ldGMvc3lzY29uZmlnL2RvY2tlci1zdG9yYWdlCiAgICBmaQp9CgojIENvbmZpZ3VyZSBkb2NrZXIgc3RvcmFnZSB3aXRoIHhmcyBhcyBiYWNraW5nIGZpbGVzeXN0ZW0uCmNvbmZpZ3VyZV9vdmVybGF5ICgpIHsKICAgIGNsZWFyX2RvY2tlcl9zdG9yYWdlX2NvbmZpZ3VyYXRpb24KCiAgICBybSAtcmYgL3Zhci9saWIvZG9ja2VyLyoKCiAgICBpZiBbIC1uICIkRE9DS0VSX1ZPTFVNRV9TSVpFIiBdICYmIFsgIiRET0NLRVJfVk9MVU1FX1NJWkUiIC1ndCAwIF07IHRoZW4KICAgICAgICBta2ZzLnhmcyAtZiAke2RldmljZV9wYXRofQogICAgICAgIGVjaG8gIiR7ZGV2aWNlX3BhdGh9IC92YXIvbGliL2RvY2tlciB4ZnMgZGVmYXVsdHMgMCAwIiA+PiAvZXRjL2ZzdGFiCiAgICAgICAgbW91bnQgLWEKICAgIGZpCgogICAgZWNobyAiU1RPUkFHRV9EUklWRVI9b3ZlcmxheSIgPiAvZXRjL3N5c2NvbmZpZy9kb2NrZXItc3RvcmFnZS1zZXR1cAoKICAgICMgU0VMaW51eCBtdXN0IGJlIGVuYWJsZWQgYW5kIGluIGVuZm9yY2luZyBtb2RlIG9uIHRoZSBwaHlzaWNhbAogICAgIyBtYWNoaW5lLCBidXQgbXVzdCBiZSBkaXNhYmxlZCBpbiB0aGUgY29udGFpbmVyIHdoZW4gcGVyZm9ybWluZwogICAgIyBjb250YWluZXIgc2VwYXJhdGlvbgogICAgc2VkIC1pICIvXk9QVElPTlM9LyBzLy0tc2VsaW51eC1lbmFibGVkLy0tc2VsaW51eC1lbmFibGVkPWZhbHNlLyIgL2V0Yy9zeXNjb25maWcvZG9ja2VyCn0KCiMgQ29uZmlndXJlIGRvY2tlciBzdG9yYWdlIHdpdGggZGV2aWNlbWFwcGVyIHVzaW5nIGRpcmVjdCBMVk0KY29uZmlndXJlX2RldmljZW1hcHBlciAoKSB7CiAgICBjbGVhcl9kb2NrZXJfc3RvcmFnZV9jb25maWd1cmF0aW9uCgogICAgaWYgWyAtbiAiJERPQ0tFUl9WT0xVTUVfU0laRSIgXSAmJiBbICIkRE9DS0VSX1ZPTFVNRV9TSVpFIiAtZ3QgMCBdOyB0aGVuCiAgICAgICAgcHZjcmVhdGUgLWYgJHtkZXZpY2VfcGF0aH0KICAgICAgICB2Z2NyZWF0ZSBkb2NrZXIgJHtkZXZpY2VfcGF0aH0KCiAgICAgICAgZWNobyAiVkc9ZG9ja2VyIiA+IC9ldGMvc3lzY29uZmlnL2RvY2tlci1zdG9yYWdlLXNldHVwCiAgICBmaQp9CgoKaWYgWyAiJERPQ0tFUl9TVE9SQUdFX0RSSVZFUiIgPSAib3ZlcmxheSIgXTsgdGhlbgogICAgaWYgWyAkKGVjaG8gLWUgIiQodW5hbWUgLXIpXG4zLjE4IiB8IHNvcnQgLVYgfCBoZWFkIC0xKSA9ICQodW5hbWUgLXIpIF07IHRoZW4KICAgICAgICBFUlJPUl9NRVNTQUdFPSJPdmVybGF5RlMgcmVxdWlyZXMgYXQgbGVhc3QgTGludXgga2VybmVsIDMuMTguIENsdXN0ZXIgbm9kZSBrZXJuZWwgdmVyc2lvbjogJCh1bmFtZSAtcikiCiAgICAgICAgZWNobyAiRVJST1I6ICR7RVJST1JfTUVTU0FHRX0iID4mMgogICAgICAgIHNoIC1jICIke1dBSVRfQ1VSTH0gLS1kYXRhLWJpbmFyeSAne1wic3RhdHVzXCI6IFwiRkFJTFVSRVwiLCBcInJlYXNvblwiOiBcIiR7RVJST1JfTUVTU0FHRX1cIn0nIgogICAgZWxzZQogICAgICAgIGNvbmZpZ3VyZV9vdmVybGF5CiAgICBmaQplbHNlCiAgICBjb25maWd1cmVfZGV2aWNlbWFwcGVyCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmVjaG8gImNvbmZpZ3VyaW5nIGt1YmVybmV0ZXMgKG1hc3RlcikiCgppZiBbIC16ICIkS1VCRV9OT0RFX0lQIiBdOyB0aGVuCiAgICAjIEZJWE1FKHl1YW55aW5nKTogU2V0IEtVQkVfTk9ERV9JUCBjb3JyZWN0bHkKICAgIEtVQkVfTk9ERV9JUD0kKGN1cmwgLXMgaHR0cDovLzE2OS4yNTQuMTY5LjI1NC9sYXRlc3QvbWV0YS1kYXRhL2xvY2FsLWlwdjQpCmZpCgpzZWQgLWkgJwogICAgL15LVUJFX0FMTE9XX1BSSVY9LyBzLz0uKi89Ii0tYWxsb3ctcHJpdmlsZWdlZD0nIiRLVUJFX0FMTE9XX1BSSVYiJyIvCicgL2V0Yy9rdWJlcm5ldGVzL2NvbmZpZwoKS1VCRV9BUElfQVJHUz0iLS1ydW50aW1lLWNvbmZpZz1hcGkvYWxsPXRydWUiCmlmIFsgIiRUTFNfRElTQUJMRUQiID09ICJUcnVlIiBdOyB0aGVuCiAgICBLVUJFX0FQSV9BRERSRVNTPSItLWluc2VjdXJlLWJpbmQtYWRkcmVzcz0wLjAuMC4wIC0taW5zZWN1cmUtcG9ydD0kS1VCRV9BUElfUE9SVCIKZWxzZQogICAgS1VCRV9BUElfQUREUkVTUz0iLS1iaW5kLWFkZHJlc3M9MC4wLjAuMCAtLXNlY3VyZS1wb3J0PSRLVUJFX0FQSV9QT1JUIgogICAgIyBpbnNlY3VyZSBwb3J0IGlzIHVzZWQgaW50ZXJuYWx5CiAgICBLVUJFX0FQSV9BRERSRVNTPSIkS1VCRV9BUElfQUREUkVTUyAtLWluc2VjdXJlLXBvcnQ9ODA4MCIKICAgIEtVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIC0tdGxzLWNlcnQtZmlsZT0vc3J2L2t1YmVybmV0ZXMvc2VydmVyLmNydCIKICAgIEtVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIC0tdGxzLXByaXZhdGUta2V5LWZpbGU9L3Nydi9rdWJlcm5ldGVzL3NlcnZlci5rZXkiCiAgICBLVUJFX0FQSV9BUkdTPSIkS1VCRV9BUElfQVJHUyAtLWNsaWVudC1jYS1maWxlPS9zcnYva3ViZXJuZXRlcy9jYS5jcnQiCmZpCgpzZWQgLWkgJwogICAgL15LVUJFX0FQSV9BRERSRVNTPS8gcy89LiovPSInIiR7S1VCRV9BUElfQUREUkVTU30iJyIvCiAgICAvXktVQkVfU0VSVklDRV9BRERSRVNTRVM9LyBzfD0uKnw9Ii0tc2VydmljZS1jbHVzdGVyLWlwLXJhbmdlPSciJFBPUlRBTF9ORVRXT1JLX0NJRFIiJyJ8CiAgICAvXktVQkVfQVBJX0FSR1M9LyBzL0tVQkVfQVBJX0FSR1MuLy8KICAgIC9eS1VCRV9FVENEX1NFUlZFUlM9LyBzLz0uKi89Ii0tZXRjZC1zZXJ2ZXJzPWh0dHA6XC9cLzEyNy4wLjAuMToyMzc5Ii8KICAgIC9eS1VCRV9BRE1JU1NJT05fQ09OVFJPTD0vIHMvPS4qLz0iIi8KJyAvZXRjL2t1YmVybmV0ZXMvYXBpc2VydmVyCmNhdCA8PCBfRU9DXyA+PiAvZXRjL2t1YmVybmV0ZXMvYXBpc2VydmVyCiNVbmNvbW1lbnQgdGhlIGZvbGxvd2luZyBsaW5lIHRvIGRpc2FibGUgTG9hZCBCYWxhbmNlciBmZWF0dXJlCktVQkVfQVBJX0FSR1M9IiRLVUJFX0FQSV9BUkdTIgojVW5jb21tZW50IHRoZSBmb2xsb3dpbmcgbGluZSB0byBlbmFibGUgTG9hZCBCYWxhbmNlciBmZWF0dXJlCiNLVUJFX0FQSV9BUkdTPSIkS1VCRV9BUElfQVJHUyAtLWNsb3VkLWNvbmZpZz0vZXRjL3N5c2NvbmZpZy9rdWJlX29wZW5zdGFja19jb25maWcgLS1jbG91ZC1wcm92aWRlcj1vcGVuc3RhY2siCl9FT0NfCgpzZWQgLWkgJwogICAgL15LVUJFTEVUX0FERFJFU1NFUz0vIHMvPS4qLz0iLS1tYWNoaW5lcz0nIiInIi8KICAgIC9eS1VCRV9DT05UUk9MTEVSX01BTkFHRVJfQVJHUz0vIHMvS1VCRV9DT05UUk9MTEVSX01BTkFHRVJfQVJHUy4qLyNVbmNvbW1lbnQgdGhlIGZvbGxvd2luZyBsaW5lIHRvIGVuYWJsZSBLdWJlcm5ldGVzIExvYWQgQmFsYW5jZXIgZmVhdHVyZSBcbiNLVUJFX0NPTlRST0xMRVJfTUFOQUdFUl9BUkdTPSItLWNsb3VkLWNvbmZpZz1cL2V0Y1wvc3lzY29uZmlnXC9rdWJlX29wZW5zdGFja19jb25maWcgLS1jbG91ZC1wcm92aWRlcj1vcGVuc3RhY2siLwonIC9ldGMva3ViZXJuZXRlcy9jb250cm9sbGVyLW1hbmFnZXIKCktVQkVMRVRfQVJHUz0iLS1yZWdpc3Rlci1ub2RlPXRydWUgLS1yZWdpc3Rlci1zY2hlZHVsYWJsZT1mYWxzZSAtLWNvbmZpZz0vZXRjL2t1YmVybmV0ZXMvbWFuaWZlc3RzIC0taG9zdG5hbWUtb3ZlcnJpZGU9JEtVQkVfTk9ERV9JUCIKCmlmIFsgLW4gIiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfSIgXTsgdGhlbgogICAgS1VCRUxFVF9BUkdTPSIke0tVQkVMRVRfQVJHU30gLS1wb2QtaW5mcmEtY29udGFpbmVyLWltYWdlPSR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfS9nb29nbGVfY29udGFpbmVycy9wYXVzZVw6MC44LjAiCiAgICBlY2hvICJJTlNFQ1VSRV9SRUdJU1RSWT0nLS1pbnNlY3VyZS1yZWdpc3RyeSAke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0nIiA+PiAvZXRjL3N5c2NvbmZpZy9kb2NrZXIKZmkKCnNlZCAtaSAnCiAgICAvXktVQkVMRVRfQUREUkVTUz0vIHMvPS4qLz0iLS1hZGRyZXNzPTAuMC4wLjAiLwogICAgL15LVUJFTEVUX0hPU1ROQU1FPS8gcy89LiovPSIiLwogICAgL15LVUJFTEVUX0FSR1M9LyBzfD0uKnw9JyIkS1VCRUxFVF9BUkdTIid8CicgL2V0Yy9rdWJlcm5ldGVzL2t1YmVsZXQKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKRE9DS0VSX0hUVFBfUFJPWFlfQ09ORj0vZXRjL3N5c3RlbWQvc3lzdGVtL2RvY2tlci5zZXJ2aWNlLmQvaHR0cF9wcm94eS5jb25mCgpET0NLRVJfSFRUUFNfUFJPWFlfQ09ORj0vZXRjL3N5c3RlbWQvc3lzdGVtL2RvY2tlci5zZXJ2aWNlLmQvaHR0cHNfcHJveHkuY29uZgoKRE9DS0VSX05PX1BST1hZX0NPTkY9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9kb2NrZXIuc2VydmljZS5kL25vX3Byb3h5LmNvbmYKCkRPQ0tFUl9SRVNUQVJUPTAKCkJBU0hfUkM9L2V0Yy9iYXNocmMKCm1rZGlyIC1wIC9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZAoKaWYgWyAtbiAiJEhUVFBfUFJPWFkiIF07IHRoZW4KICAgIGNhdCA8PEVPRiB8IHNlZCAicy9eICovLyIgPiAkRE9DS0VSX0hUVFBfUFJPWFlfQ09ORgogICAgW1NlcnZpY2VdCiAgICBFbnZpcm9ubWVudD1IVFRQX1BST1hZPSRIVFRQX1BST1hZCkVPRgoKICAgIERPQ0tFUl9SRVNUQVJUPTEKCiAgICBpZiBbIC1mICIkQkFTSF9SQyIgXTsgdGhlbgogICAgICAgIGVjaG8gImRlY2xhcmUgLXggaHR0cF9wcm94eT0kSFRUUF9QUk9YWSIgPj4gJEJBU0hfUkMKICAgIGVsc2UKICAgICAgICBlY2hvICJGaWxlICRCQVNIX1JDIGRvZXMgbm90IGV4aXN0LCBub3Qgc2V0dGluZyBodHRwX3Byb3h5IgogICAgZmkKZmkKCmlmIFsgLW4gIiRIVFRQU19QUk9YWSIgXTsgdGhlbgogICAgY2F0IDw8RU9GIHwgc2VkICJzL14gKi8vIiA+ICRET0NLRVJfSFRUUFNfUFJPWFlfQ09ORgogICAgW1NlcnZpY2VdCiAgICBFbnZpcm9ubWVudD1IVFRQU19QUk9YWT0kSFRUUFNfUFJPWFkKRU9GCgogICAgRE9DS0VSX1JFU1RBUlQ9MQoKICAgIGlmIFsgLWYgIiRCQVNIX1JDIiBdOyB0aGVuCiAgICAgICAgZWNobyAiZGVjbGFyZSAteCBodHRwc19wcm94eT0kSFRUUFNfUFJPWFkiID4+ICRCQVNIX1JDCiAgICBlbHNlCiAgICAgICAgZWNobyAiRmlsZSAkQkFTSF9SQyBkb2VzIG5vdCBleGlzdCwgbm90IHNldHRpbmcgaHR0cHNfcHJveHkiCiAgICBmaQpmaQoKaWYgWyAtbiAiJE5PX1BST1hZIiBdOyB0aGVuCiAgICBjYXQgPDxFT0YgfCBzZWQgInMvXiAqLy8iID4gJERPQ0tFUl9OT19QUk9YWV9DT05GCiAgICBbU2VydmljZV0KICAgIEVudmlyb25tZW50PU5PX1BST1hZPSROT19QUk9YWQpFT0YKCiAgICBET0NLRVJfUkVTVEFSVD0xCgogICAgaWYgWyAtZiAiJEJBU0hfUkMiIF07IHRoZW4KICAgICAgICBlY2hvICJkZWNsYXJlIC14IG5vX3Byb3h5PSROT19QUk9YWSIgPj4gJEJBU0hfUkMKICAgIGVsc2UKICAgICAgICBlY2hvICJGaWxlICRCQVNIX1JDIGRvZXMgbm90IGV4aXN0LCBub3Qgc2V0dGluZyBub19wcm94eSIKICAgIGZpCmZpCgppZiBbICIkRE9DS0VSX1JFU1RBUlQiIC1lcSAxIF07IHRoZW4KICAgIHN5c3RlbWN0bCBkYWVtb24tcmVsb2FkCiAgICBzeXN0ZW1jdGwgLS1uby1ibG9jayByZXN0YXJ0IGRvY2tlci5zZXJ2aWNlCmZpCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCiMgbWFrZSBzdXJlIHdlIHBpY2sgdXAgYW55IG1vZGlmaWVkIHVuaXQgZmlsZXMKc3lzdGVtY3RsIGRhZW1vbi1yZWxvYWQKCmVjaG8gInN0YXJ0aW5nIHNlcnZpY2VzIgpmb3Igc2VydmljZSBpbiBldGNkIGRvY2tlciBrdWJlLWFwaXNlcnZlciBrdWJlbGV0OyBkbwogICAgZWNobyAiYWN0aXZhdGluZyBzZXJ2aWNlICRzZXJ2aWNlIgogICAgc3lzdGVtY3RsIGVuYWJsZSAkc2VydmljZQogICAgc3lzdGVtY3RsIC0tbm8tYmxvY2sgc3RhcnQgJHNlcnZpY2UKZG9uZQoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbICIkTkVUV09SS19EUklWRVIiICE9ICJmbGFubmVsIiBdOyB0aGVuCiAgICBleGl0IDAKZmkKCi4gL2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCkZMQU5ORUxfSlNPTj0vZXRjL3N5c2NvbmZpZy9mbGFubmVsLW5ldHdvcmsuanNvbgpGTEFOTkVMRF9DT05GSUc9L2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCnNlZCAtaSAnCiAgICAvXkZMQU5ORUxfRVRDRD0vIHMvPS4qLz0iaHR0cDpcL1wvMTI3LjAuMC4xOjIzNzkiLwonIC9ldGMvc3lzY29uZmlnL2ZsYW5uZWxkCgojIEdlbmVyYXRlIGEgZmxhbm5lbCBjb25maWd1cmF0aW9uIHRoYXQgd2Ugd2lsbAojIHN0b3JlIGludG8gZXRjZCB1c2luZyBjdXJsLgpjYXQgPiAkRkxBTk5FTF9KU09OIDw8RU9GCnsKICAiTmV0d29yayI6ICIkRkxBTk5FTF9ORVRXT1JLX0NJRFIiLAogICJTdWJuZXRsZW4iOiAkRkxBTk5FTF9ORVRXT1JLX1NVQk5FVExFTiwKICAiQmFja2VuZCI6IHsKICAgICJUeXBlIjogIiRGTEFOTkVMX0JBQ0tFTkQiCiAgfQp9CkVPRgoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbICIkTkVUV09SS19EUklWRVIiICE9ICJmbGFubmVsIiBdOyB0aGVuCiAgICBleGl0IDAKZmkKQ0VSVF9ESVI9L3Nydi9rdWJlcm5ldGVzClBST1RPQ09MPWh0dHBzCkZMQU5ORUxfT1BUSU9OUz0iLWV0Y2QtY2FmaWxlICRDRVJUX0RJUi9jYS5jcnQgXAotZXRjZC1jZXJ0ZmlsZSAkQ0VSVF9ESVIvc2VydmVyLmNydCBcCi1ldGNkLWtleWZpbGUgJENFUlRfRElSL3NlcnZlci5rZXkiCkVUQ0RfQ1VSTF9PUFRJT05TPSItLWNhY2VydCAkQ0VSVF9ESVIvY2EuY3J0IFwKLS1jZXJ0ICRDRVJUX0RJUi9zZXJ2ZXIuY3J0IC0ta2V5ICRDRVJUX0RJUi9zZXJ2ZXIua2V5IgpGTEFOTkVMRF9DT05GSUc9L2V0Yy9zeXNjb25maWcvZmxhbm5lbGQKCmlmIFsgIiRUTFNfRElTQUJMRUQiID0gIlRydWUiIF07IHRoZW4KICAgIFBST1RPQ09MPWh0dHAKICAgIEZMQU5ORUxfT1BUSU9OUz0iIgogICAgRVRDRF9DVVJMX09QVElPTlM9IiIKZmkKCnNlZCAtaSAnL0ZMQU5ORUxfT1BUSU9OUy8nZCAkRkxBTk5FTERfQ09ORklHCgpjYXQgPj4gJEZMQU5ORUxEX0NPTkZJRyA8PEVPRgpGTEFOTkVMX09QVElPTlM9IiRGTEFOTkVMX09QVElPTlMiCkVPRgoKLiAkRkxBTk5FTERfQ09ORklHCgpGTEFOTkVMX0NPTkZJR19CSU49L3Vzci9sb2NhbC9iaW4vZmxhbm5lbC1jb25maWcKRkxBTk5FTF9DT05GSUdfU0VSVklDRT0vZXRjL3N5c3RlbWQvc3lzdGVtL2ZsYW5uZWwtY29uZmlnLnNlcnZpY2UKRkxBTk5FTF9KU09OPS9ldGMvc3lzY29uZmlnL2ZsYW5uZWwtbmV0d29yay5qc29uCgplY2hvICJjcmVhdGluZyAkRkxBTk5FTF9DT05GSUdfQklOIgpjYXQgPiAkRkxBTk5FTF9DT05GSUdfQklOIDw8RU9GCiMhL2Jpbi9zaAoKaWYgISBbIC1mICIkRkxBTk5FTF9KU09OIiBdOyB0aGVuCiAgZWNobyAiRVJST1I6IG1pc3NpbmcgbmV0d29yayBjb25maWd1cmF0aW9uIGZpbGUiID4mMgogIGV4aXQgMQpmaQoKaWYgISBbICIkRkxBTk5FTF9FVENEIiBdICYmIFsgIiRGTEFOTkVMX0VUQ0RfS0VZIiBdOyB0aGVuCiAgZWNobyAiRVJST1I6IG1pc3NpbmcgcmVxdWlyZWQgY29uZmlndXJhdGlvbiIgPiYyCiAgZXhpdCAxCmZpCgplY2hvICJjcmVhdGluZyBmbGFubmVsZCBjb25maWcgaW4gZXRjZCIKd2hpbGUgISBjdXJsIC1zZiAtTCAkRVRDRF9DVVJMX09QVElPTlMgXAogICAgICAgICRGTEFOTkVMX0VUQ0QvdjIva2V5cyR7RkxBTk5FTF9FVENEX0tFWX0vY29uZmlnIFwKICAgICAgICAtWCBQVVQgLS1kYXRhLXVybGVuY29kZSB2YWx1ZUAke0ZMQU5ORUxfSlNPTn07IGRvCiAgICBlY2hvICJ3YWl0aW5nIGZvciBldGNkIgogICAgc2xlZXAgMQpkb25lCkVPRgoKY2F0ID4gJEZMQU5ORUxfQ09ORklHX1NFUlZJQ0UgPDxFT0YKW1VuaXRdCkFmdGVyPWV0Y2Quc2VydmljZQpSZXF1aXJlcz1ldGNkLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnRGaWxlPS9ldGMvc3lzY29uZmlnL2ZsYW5uZWxkCkV4ZWNTdGFydD0kRkxBTk5FTF9DT05GSUdfQklOCgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCgpjaG93biByb290OnJvb3QgJEZMQU5ORUxfQ09ORklHX0JJTgpjaG1vZCAwNzU1ICRGTEFOTkVMX0NPTkZJR19CSU4KCmNob3duIHJvb3Q6cm9vdCAkRkxBTk5FTF9DT05GSUdfU0VSVklDRQpjaG1vZCAwNjQ0ICRGTEFOTkVMX0NPTkZJR19TRVJWSUNFCgpzeXN0ZW1jdGwgZW5hYmxlIGZsYW5uZWwtY29uZmlnCnN5c3RlbWN0bCBzdGFydCAtLW5vLWJsb2NrIGZsYW5uZWwtY29uZmlnCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgIiRORVRXT1JLX0RSSVZFUiIgIT0gImZsYW5uZWwiIF07IHRoZW4KICAgIGV4aXQgMApmaQoKRkxBTk5FTF9ET0NLRVJfQlJJREdFX0JJTj0vdXNyL2xvY2FsL2Jpbi9mbGFubmVsLWRvY2tlci1icmlkZ2UKRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9mbGFubmVsLWRvY2tlci1icmlkZ2Uuc2VydmljZQpET0NLRVJfRkxBTk5FTF9DT05GPS9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZC9mbGFubmVsLmNvbmYKRkxBTk5FTF9ET0NLRVJfQlJJREdFX0NPTkY9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9mbGFubmVsZC5zZXJ2aWNlLmQvZmxhbm5lbC1kb2NrZXItYnJpZGdlLmNvbmYKCm1rZGlyIC1wIC9ldGMvc3lzdGVtZC9zeXN0ZW0vZG9ja2VyLnNlcnZpY2UuZApta2RpciAtcCAvZXRjL3N5c3RlbWQvc3lzdGVtL2ZsYW5uZWxkLnNlcnZpY2UuZAoKY2F0ID4+ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQklOIDw8RU9GMQojIS9iaW4vc2gKCmlmICEgWyAiXCRGTEFOTkVMX1NVQk5FVCIgXSAmJiBbICJcJEZMQU5ORUxfTVRVIiBdIDsgdGhlbgogIGVjaG8gIkVSUk9SOiBtaXNzaW5nIHJlcXVpcmVkIGVudmlyb25tZW50IHZhcmlhYmxlcy4iID4mMgogIGV4aXQgMQpmaQoKbWtkaXIgLXAgL3J1bi9mbGFubmVsLwpjYXQgPiAvcnVuL2ZsYW5uZWwvZG9ja2VyIDw8RU9GMgpET0NLRVJfTkVUV09SS19PUFRJT05TPSItLWJpcD1cJEZMQU5ORUxfU1VCTkVUIC0tbXR1PVwkRkxBTk5FTF9NVFUiCkVPRjIKRU9GMQoKY2hvd24gcm9vdDpyb290ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQklOCmNobW9kIDA3NTUgJEZMQU5ORUxfRE9DS0VSX0JSSURHRV9CSU4KCmNhdCA+PiAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UgPDxFT0YKW1VuaXRdCkFmdGVyPWZsYW5uZWxkLnNlcnZpY2UKQmVmb3JlPWRvY2tlci5zZXJ2aWNlClJlcXVpcmVzPWZsYW5uZWxkLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnRGaWxlPS9ydW4vZmxhbm5lbC9zdWJuZXQuZW52CkV4ZWNTdGFydD0vdXNyL2xvY2FsL2Jpbi9mbGFubmVsLWRvY2tlci1icmlkZ2UKCltJbnN0YWxsXQpXYW50ZWRCeT1kb2NrZXIuc2VydmljZQpFT0YKCmNob3duIHJvb3Q6cm9vdCAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UKY2htb2QgMDY0NCAkRkxBTk5FTF9ET0NLRVJfQlJJREdFX1NFUlZJQ0UKCmNhdCA+PiAkRE9DS0VSX0ZMQU5ORUxfQ09ORiA8PEVPRgpbVW5pdF0KUmVxdWlyZXM9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKQWZ0ZXI9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKCltTZXJ2aWNlXQpFbnZpcm9ubWVudEZpbGU9L3J1bi9mbGFubmVsL2RvY2tlcgpFT0YKCmNob3duIHJvb3Q6cm9vdCAkRE9DS0VSX0ZMQU5ORUxfQ09ORgpjaG1vZCAwNjQ0ICRET0NLRVJfRkxBTk5FTF9DT05GCgpjYXQgPj4gJEZMQU5ORUxfRE9DS0VSX0JSSURHRV9DT05GIDw8RU9GCltVbml0XQpSZXF1aXJlcz1mbGFubmVsLWRvY2tlci1icmlkZ2Uuc2VydmljZQpCZWZvcmU9Zmxhbm5lbC1kb2NrZXItYnJpZGdlLnNlcnZpY2UKCltJbnN0YWxsXQpBbHNvPWZsYW5uZWwtZG9ja2VyLWJyaWRnZS5zZXJ2aWNlCkVPRgoKY2hvd24gcm9vdDpyb290ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQ09ORgpjaG1vZCAwNjQ0ICRGTEFOTkVMX0RPQ0tFUl9CUklER0VfQ09ORgoKZWNobyAiYWN0aXZhdGluZyBzZXJ2aWNlIGZsYW5uZWxkIgpzeXN0ZW1jdGwgZW5hYmxlIGZsYW5uZWxkCnN5c3RlbWN0bCAtLW5vLWJsb2NrIHN0YXJ0IGZsYW5uZWxkCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCiMgdGhpcyBzZXJ2aWNlIHJlcXVpcmVkIGJlY2F1c2UgZG9ja2VyIHdpbGwgc3RhcnQgb25seSBhZnRlciBjbG91ZCBpbml0IHdhcyBmaW5pc2hlZAojIGR1ZSBzZXJ2aWNlIGRlcGVuZGVuY2llcyBhdCBGZWRvcmEgQXRvbWljIChkb2NrZXIgPC0gZG9ja2VyLXN0b3JhZ2Utc2V0dXAgPC0gY2xvdWQtZmluYWwpCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgpLVUJFX1NZU1RFTV9KU09OPS9zcnYva3ViZXJuZXRlcy9rdWJlLXN5c3RlbS1uYW1lc3BhY2UuanNvbgpbIC1mICR7S1VCRV9TWVNURU1fSlNPTn0gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1NZU1RFTV9KU09OIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fSlNPTn0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1NZU1RFTV9KU09OfQp7CiAgImFwaVZlcnNpb24iOiAidjEiLAogICJraW5kIjogIk5hbWVzcGFjZSIsCiAgIm1ldGFkYXRhIjogewogICAgIm5hbWUiOiAia3ViZS1zeXN0ZW0iCiAgfQp9CkVPRgp9CgpLVUJFX1NZU1RFTV9CSU49L3Vzci9sb2NhbC9iaW4va3ViZS1zeXN0ZW0tbmFtZXNwYWNlClsgLWYgJHtLVUJFX1NZU1RFTV9CSU59IF0gfHwgewogICAgZWNobyAiV3JpdGluZyBGaWxlOiAkS1VCRV9TWVNURU1fQklOIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fQklOfSkKICAgIGNhdCA8PCBFT0YgPiAke0tVQkVfU1lTVEVNX0JJTn0KIyEvYmluL3NoCnVudGlsIGN1cmwgLXNmICJodHRwOi8vMTI3LjAuMC4xOjgwODAvaGVhbHRoeiIKZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCgojY2hlY2sgZm9yIGV4aXN0ZW5jZSBvZiBuYW1lc3BhY2UKL3Vzci9iaW4va3ViZWN0bCBnZXQgbmFtZXNwYWNlIGt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMva3ViZS1zeXN0ZW0tbmFtZXNwYWNlLmpzb24KZmkKRU9GCn0KCktVQkVfU1lTVEVNX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS9rdWJlLXN5c3RlbS1uYW1lc3BhY2Uuc2VydmljZQpbIC1mICR7S1VCRV9TWVNURU1fU0VSVklDRX0gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1NZU1RFTV9TRVJWSUNFIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9TWVNURU1fU0VSVklDRX0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1NZU1RFTV9TRVJWSUNFfQpbVW5pdF0KQWZ0ZXI9a3ViZWxldC5zZXJ2aWNlClJlcXVpcmVzPWt1YmVsZXQuc2VydmljZQoKW1NlcnZpY2VdClR5cGU9b25lc2hvdApFbnZpcm9ubWVudD1IT01FPS9yb290CkVudmlyb25tZW50RmlsZT0tL2V0Yy9rdWJlcm5ldGVzL2NvbmZpZwpFeGVjU3RhcnQ9JHtLVUJFX1NZU1RFTV9CSU59CgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfU1lTVEVNX0JJTn0KY2htb2QgMDc1NSAke0tVQkVfU1lTVEVNX0JJTn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfU1lTVEVNX1NFUlZJQ0V9CmNobW9kIDA2NDQgJHtLVUJFX1NZU1RFTV9TRVJWSUNFfQoKc3lzdGVtY3RsIGVuYWJsZSBrdWJlLXN5c3RlbS1uYW1lc3BhY2UKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sga3ViZS1zeXN0ZW0tbmFtZXNwYWNlCgotLT09PT09PT09PT09PT09PTA5ODIyNzEwMTE0ODMzOTkzNzE9PQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9InVzLWFzY2lpIgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CgojIS9iaW4vc2gKCi4gL2V0Yy9zeXNjb25maWcvaGVhdC1wYXJhbXMKCmlmIFsgLW4gIiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfSIgXTsgdGhlbgogICAgSFlQRVJLVUJFX0lNQUdFPSIke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0vZ29vZ2xlX2NvbnRhaW5lcnMvaHlwZXJrdWJlOiR7S1VCRV9WRVJTSU9OfSIKZWxzZQogICAgSFlQRVJLVUJFX0lNQUdFPSJnY3IuaW8vZ29vZ2xlX2NvbnRhaW5lcnMvaHlwZXJrdWJlOiR7S1VCRV9WRVJTSU9OfSIKZmkKCiMgdmFycyBhbHNvIHVzZWQgYnkgdGhlIEt1YmVybmV0ZXMgY29uZmlnIGZpbGVzCnVuc2V0IEtVQkVfQVBJX1BPUlQKdW5zZXQgS1VCRV9BTExPV19QUklWCgojIHRoaXMgZnVuY3Rpb24gZ2VuZXJhdGUgYSBsaXN0IG9mIGFyZ3MgKG9uZSBwZXIgbGluZSkgZnJvbSBhIGxpc3Qgb2YgcG9zc2libHkgbmVzdGVkIGFyZ3MKIyB0aGUgZmlyc3QgcGFyYW1ldGVyIGlzIHRoZSBwcmVmaXggdG8gYmUgYWRkZWQgYmVmb3JlIGVhY2ggYXJnCiMgZW1wdHkgYXJncyBhcmUgaWdub3JlZApnZW5lcmF0ZV9wb2RfYXJncygpIHsKICAgIHByZWZpeD0kMQoKICAgIGZvciB2YXIgaW4gIiR7QDoyfSIgOyBkbwogICAgICAgIGZvciBhcmcgaW4gIiR2YXIiIDsgZG8KICAgICAgICAgICAgZWNobyAiJHByZWZpeCRhcmciCiAgICAgICAgZG9uZQogICAgZG9uZQp9CgoKaW5pdF90ZW1wbGF0ZXMgKCkgewogICAgLiAvZXRjL2t1YmVybmV0ZXMvY29uZmlnCgogICAgLiAvZXRjL2t1YmVybmV0ZXMvY29udHJvbGxlci1tYW5hZ2VyCgogICAgbG9jYWwgVEVNUExBVEU9L2V0Yy9rdWJlcm5ldGVzL21hbmlmZXN0cy9rdWJlLWNvbnRyb2xsZXItbWFuYWdlci55YW1sCiAgICBbIC1mICR7VEVNUExBVEV9IF0gfHwgewogICAgICAgIGVjaG8gIlRFTVBMQVRFOiAkVEVNUExBVEUiCiAgICAgICAgbWtkaXIgLXAgJChkaXJuYW1lICR7VEVNUExBVEV9KQogICAgICAgIGNhdCA8PCBFT0YgPiAke1RFTVBMQVRFfQphcGlWZXJzaW9uOiB2MQpraW5kOiBQb2QKbWV0YWRhdGE6CiAgbmFtZToga3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICAgIGltYWdlOiAke0hZUEVSS1VCRV9JTUFHRX0KICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gY29udHJvbGxlci1tYW5hZ2VyCiAgICAtIC0tbGVhZGVyLWVsZWN0PXRydWUKJChnZW5lcmF0ZV9wb2RfYXJncyAiICAgIC0gIiAkS1VCRV9MT0dUT1NUREVSUiAkS1VCRV9MT0dfTEVWRUwgJEtVQkVfTUFTVEVSICRLVUJFX0NPTlRST0xMRVJfTUFOQUdFUl9BUkdTKQogICAgbGl2ZW5lc3NQcm9iZToKICAgICAgaHR0cEdldDoKICAgICAgICBob3N0OiAxMjcuMC4wLjEKICAgICAgICBwYXRoOiAvaGVhbHRoegogICAgICAgIHBvcnQ6IDEwMjUyCiAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDE1CiAgICAgIHRpbWVvdXRTZWNvbmRzOiAxCiAgICB2b2x1bWVNb3VudHM6CiAgICAtIG1vdW50UGF0aDogL2V0Yy9zc2wvY2VydHMKICAgICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAgICAgcmVhZE9ubHk6IHRydWUKICAgIC0gbW91bnRQYXRoOiAvc3J2L2t1YmVybmV0ZXMKICAgICAgbmFtZToga3ViZXJuZXRlcy1jb25maWcKICAgICAgcmVhZE9ubHk6IHRydWUKICAgIC0gbW91bnRQYXRoOiAvZXRjL3N5c2NvbmZpZwogICAgICBuYW1lOiBzeXNjb25maWcKICAgICAgcmVhZE9ubHk6IHRydWUKICB2b2x1bWVzOgogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC9ldGMvc3NsL2NlcnRzCiAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC9zcnYva3ViZXJuZXRlcwogICAgbmFtZToga3ViZXJuZXRlcy1jb25maWcKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvZXRjL3N5c2NvbmZpZwogICAgbmFtZTogc3lzY29uZmlnCkVPRgogICAgfQoKICAgIC4gL2V0Yy9rdWJlcm5ldGVzL3NjaGVkdWxlcgoKICAgIGxvY2FsIFRFTVBMQVRFPS9ldGMva3ViZXJuZXRlcy9tYW5pZmVzdHMva3ViZS1zY2hlZHVsZXIueWFtbAogICAgWyAtZiAke1RFTVBMQVRFfSBdIHx8IHsKICAgICAgICBlY2hvICJURU1QTEFURTogJFRFTVBMQVRFIgogICAgICAgIG1rZGlyIC1wICQoZGlybmFtZSAke1RFTVBMQVRFfSkKICAgICAgICBjYXQgPDwgRU9GID4gJHtURU1QTEFURX0KYXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgICBpbWFnZTogJHtIWVBFUktVQkVfSU1BR0V9CiAgICBjb21tYW5kOgogICAgLSAvaHlwZXJrdWJlCiAgICAtIHNjaGVkdWxlcgogICAgLSAtLWxlYWRlci1lbGVjdD10cnVlCiQoZ2VuZXJhdGVfcG9kX2FyZ3MgIiAgICAtICIgJEtVQkVfTE9HVE9TVERFUlIgJEtVQkVfTE9HX0xFVkVMICRLVUJFX01BU1RFUiAkS1VCRV9TQ0hFRFVMRVJfQVJHUykKICAgIGxpdmVuZXNzUHJvYmU6CiAgICAgIGh0dHBHZXQ6CiAgICAgICAgaG9zdDogMTI3LjAuMC4xCiAgICAgICAgcGF0aDogL2hlYWx0aHoKICAgICAgICBwb3J0OiAxMDI1MQogICAgICBpbml0aWFsRGVsYXlTZWNvbmRzOiAxNQogICAgICB0aW1lb3V0U2Vjb25kczogMQogICAgdm9sdW1lTW91bnRzOgogICAgLSBtb3VudFBhdGg6IC9ldGMvc3NsL2NlcnRzCiAgICAgIG5hbWU6IHNzbC1jZXJ0cy1ob3N0CiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAtIG1vdW50UGF0aDogL3Nydi9rdWJlcm5ldGVzCiAgICAgIG5hbWU6IGt1YmVybmV0ZXMtY29uZmlnCiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAtIG1vdW50UGF0aDogL2V0Yy9zeXNjb25maWcKICAgICAgbmFtZTogc3lzY29uZmlnCiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgdm9sdW1lczoKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvc3J2L2t1YmVybmV0ZXMKICAgIG5hbWU6IGt1YmVybmV0ZXMtY29uZmlnCiAgLSBob3N0UGF0aDoKICAgICAgcGF0aDogL2V0Yy9zeXNjb25maWcKICAgIG5hbWU6IHN5c2NvbmZpZwpFT0YKICAgIH0KfQoKaW5pdF90ZW1wbGF0ZXMKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKaWYgWyAtbiAiJHtJTlNFQ1VSRV9SRUdJU1RSWV9VUkx9IiBdOyB0aGVuCiAgICBIWVBFUktVQkVfSU1BR0U9IiR7SU5TRUNVUkVfUkVHSVNUUllfVVJMfS9nb29nbGVfY29udGFpbmVycy9oeXBlcmt1YmU6JHtLVUJFX1ZFUlNJT059IgplbHNlCiAgICBIWVBFUktVQkVfSU1BR0U9Imdjci5pby9nb29nbGVfY29udGFpbmVycy9oeXBlcmt1YmU6JHtLVUJFX1ZFUlNJT059IgpmaQoKaW5pdF90ZW1wbGF0ZXMgKCkgewogICAgbG9jYWwgVEVNUExBVEU9L2V0Yy9rdWJlcm5ldGVzL21hbmlmZXN0cy9rdWJlLXByb3h5LnlhbWwKICAgIFsgLWYgJHtURU1QTEFURX0gXSB8fCB7CiAgICAgICAgZWNobyAiVEVNUExBVEU6ICRURU1QTEFURSIKICAgICAgICBta2RpciAtcCAkKGRpcm5hbWUgJHtURU1QTEFURX0pCiAgICAgICAgY2F0IDw8IEVPRiA+ICR7VEVNUExBVEV9CmFwaVZlcnNpb246IHYxCmtpbmQ6IFBvZAptZXRhZGF0YToKICBuYW1lOiBrdWJlLXByb3h5CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtcHJveHkKICAgIGltYWdlOiAke0hZUEVSS1VCRV9JTUFHRX0KICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1tYXN0ZXI9aHR0cDovLzEyNy4wLjAuMTo4MDgwCiAgICAtIC0tbG9ndG9zdGRlcnI9dHJ1ZQogICAgLSAtLXY9MAogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCkVPRgogICAgfQp9Cgppbml0X3RlbXBsYXRlcwoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKIyEvYmluL3NoCgojIHRoaXMgc2VydmljZSBpcyByZXF1aXJlZCBiZWNhdXNlIGRvY2tlciB3aWxsIHN0YXJ0IG9ubHkgYWZ0ZXIgY2xvdWQgaW5pdCB3YXMgZmluaXNoZWQKIyBkdWUgdG8gdGhlIHNlcnZpY2UgZGVwZW5kZW5jaWVzIGluIEZlZG9yYSBBdG9taWMgKGRvY2tlciA8LSBkb2NrZXItc3RvcmFnZS1zZXR1cCA8LSBjbG91ZC1maW5hbCkKCgouIC9ldGMvc3lzY29uZmlnL2hlYXQtcGFyYW1zCgppZiBbIC1uICIke0lOU0VDVVJFX1JFR0lTVFJZX1VSTH0iIF07IHRoZW4KICAgIEtVQkVVSV9JTUFHRT0iJHtJTlNFQ1VSRV9SRUdJU1RSWV9VUkx9L2dvb2dsZV9jb250YWluZXJzL2t1YmUtdWk6djQiCmVsc2UKICAgIEtVQkVVSV9JTUFHRT0iZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2t1YmUtdWk6djQiCmZpCgpLVUJFX1VJX1JDPS9zcnYva3ViZXJuZXRlcy9tYW5pZmVzdHMva3ViZS11aS1yYy55YW1sCgpbIC1mICR7S1VCRV9VSV9SQ30gXSB8fCB7CiAgICBlY2hvICJXcml0aW5nIEZpbGU6ICRLVUJFX1VJX1JDIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9VSV9SQ30pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX1JDfQphcGlWZXJzaW9uOiB2MQpraW5kOiBSZXBsaWNhdGlvbkNvbnRyb2xsZXIKbWV0YWRhdGE6CiAgbmFtZToga3ViZS11aS12NAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBsYWJlbHM6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICB2ZXJzaW9uOiB2NAogICAga3ViZXJuZXRlcy5pby9jbHVzdGVyLXNlcnZpY2U6ICJ0cnVlIgpzcGVjOgogIHJlcGxpY2FzOiAxCiAgc2VsZWN0b3I6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICB2ZXJzaW9uOiB2NAogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICAgICAgdmVyc2lvbjogdjQKICAgICAgICBrdWJlcm5ldGVzLmlvL2NsdXN0ZXItc2VydmljZTogInRydWUiCiAgICBzcGVjOgogICAgICBjb250YWluZXJzOgogICAgICAtIG5hbWU6IGt1YmUtdWkKICAgICAgICBpbWFnZTogJHtLVUJFVUlfSU1BR0V9CiAgICAgICAgcmVzb3VyY2VzOgogICAgICAgICAgbGltaXRzOgogICAgICAgICAgICBjcHU6IDEwMG0KICAgICAgICAgICAgbWVtb3J5OiA1ME1pCiAgICAgICAgcG9ydHM6CiAgICAgICAgLSBjb250YWluZXJQb3J0OiA4MDgwCkVPRgp9CgpLVUJFX1VJX1NWQz0vc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktc3ZjLnlhbWwKWyAtZiAke0tVQkVfVUlfU1ZDfSBdIHx8IHsKICAgIGVjaG8gIldyaXRpbmcgRmlsZTogJEtVQkVfVUlfU1ZDIgogICAgbWtkaXIgLXAgJChkaXJuYW1lICR7S1VCRV9VSV9TVkN9KQogICAgY2F0IDw8IEVPRiA+ICR7S1VCRV9VSV9TVkN9CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2UKbWV0YWRhdGE6CiAgbmFtZToga3ViZS11aQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBsYWJlbHM6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgICBrdWJlcm5ldGVzLmlvL2NsdXN0ZXItc2VydmljZTogInRydWUiCiAgICBrdWJlcm5ldGVzLmlvL25hbWU6ICJLdWJlVUkiCnNwZWM6CiAgc2VsZWN0b3I6CiAgICBrOHMtYXBwOiBrdWJlLXVpCiAgcG9ydHM6CiAgLSBwb3J0OiA4MAogICAgdGFyZ2V0UG9ydDogODA4MApFT0YKfQoKS1VCRV9VSV9CSU49L3Vzci9sb2NhbC9iaW4va3ViZS11aQpbIC1mICR7S1VCRV9VSV9CSU59IF0gfHwgewogICAgZWNobyAiV3JpdGluZyBGaWxlOiAkS1VCRV9VSV9CSU4iCiAgICBta2RpciAtcCAkKGRpcm5hbWUgJHtLVUJFX1VJX0JJTn0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX0JJTn0KIyEvYmluL3NoCnVudGlsIGN1cmwgLXNmICJodHRwOi8vMTI3LjAuMC4xOjgwODAvaGVhbHRoeiIKZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCgojZWNobyBjaGVjayBmb3IgZXhpc3RlbmNlIG9mIGt1YmUtdWktdjQgcmVwbGljYXRpb24gY29udHJvbGxlcgovdXNyL2Jpbi9rdWJlY3RsIGdldCByYyBrdWJlLXVpLXY0IC0tbmFtZXNwYWNlPWt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktcmMueWFtbCAtLW5hbWVzcGFjZT1rdWJlLXN5c3RlbQpmaQoKI2VjaG8gY2hlY2sgZm9yIGV4aXN0ZW5jZSBvZiBrdWJlLXVpIHNlcnZpY2UKL3Vzci9iaW4va3ViZWN0bCBnZXQgc2VydmljZSBrdWJlLXVpIC0tbmFtZXNwYWNlPWt1YmUtc3lzdGVtCgppZiBbICJcJD8iICE9ICIwIiBdOyB0aGVuCiAgICAvdXNyL2Jpbi9rdWJlY3RsIGNyZWF0ZSAtZiAvc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtdWktc3ZjLnlhbWwgLS1uYW1lc3BhY2U9a3ViZS1zeXN0ZW0KZmkKRU9GCn0KCktVQkVfVUlfU0VSVklDRT0vZXRjL3N5c3RlbWQvc3lzdGVtL2t1YmUtdWkuc2VydmljZQpbIC1mICR7S1VCRV9VSV9TRVJWSUNFfSBdIHx8IHsKICAgIGVjaG8gIldyaXRpbmcgRmlsZTogJEtVQkVfVUlfU0VSVklDRSIKICAgIG1rZGlyIC1wICQoZGlybmFtZSAke0tVQkVfVUlfU0VSVklDRX0pCiAgICBjYXQgPDwgRU9GID4gJHtLVUJFX1VJX1NFUlZJQ0V9CltVbml0XQpBZnRlcj1rdWJlLXN5c3RlbS1uYW1lc3BhY2Uuc2VydmljZQpSZXF1aXJlcz1rdWJlbGV0LnNlcnZpY2UKV2FudHM9a3ViZS1zeXN0ZW0tbmFtZXNwYWNlLnNlcnZpY2UKCltTZXJ2aWNlXQpUeXBlPW9uZXNob3QKRW52aXJvbm1lbnQ9SE9NRT0vcm9vdApFbnZpcm9ubWVudEZpbGU9LS9ldGMva3ViZXJuZXRlcy9jb25maWcKRXhlY1N0YXJ0PSR7S1VCRV9VSV9CSU59CgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCn0KCmNob3duIHJvb3Q6cm9vdCAke0tVQkVfVUlfQklOfQpjaG1vZCAwNzU1ICR7S1VCRV9VSV9CSU59CgpjaG93biByb290OnJvb3QgJHtLVUJFX1VJX1NFUlZJQ0V9CmNobW9kIDA2NDQgJHtLVUJFX1VJX1NFUlZJQ0V9CgpzeXN0ZW1jdGwgZW5hYmxlIGt1YmUtdWkKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sga3ViZS11aQoKLS09PT09PT09PT09PT09PT0wOTgyMjcxMDExNDgzMzk5MzcxPT0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdAoKI2Nsb3VkLWNvbmZpZwptZXJnZV9ob3c6IGRpY3QocmVjdXJzZV9hcnJheSkrbGlzdChhcHBlbmQpCndyaXRlX2ZpbGVzOgogIC0gcGF0aDogL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3JlcGxpY2F0aW9uLWNvbnRyb2xsZXIueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFJlcGxpY2F0aW9uQ29udHJvbGxlcgogICAgICBtZXRhZGF0YToKICAgICAgICBuYW1lOiBuZ2lueC1jb250cm9sbGVyCiAgICAgIHNwZWM6CiAgICAgICAgcmVwbGljYXM6IDIKICAgICAgICAjIHNlbGVjdG9yIGlkZW50aWZpZXMgdGhlIHNldCBvZiBwb2RzIHRoYXQgdGhpcwogICAgICAgICMgcmVwbGljYXRpb24gY29udHJvbGxlciBpcyByZXNwb25zaWJsZSBmb3IgbWFuYWdpbmcKICAgICAgICBzZWxlY3RvcjoKICAgICAgICAgIG5hbWU6IG5naW54CiAgICAgICAgIyB0ZW1wbGF0ZSBkZWZpbmVzIHRoZSAnY29va2llIGN1dHRlcicgdXNlZCBmb3IgY3JlYXRpbmcKICAgICAgICAjIG5ldyBwb2RzIHdoZW4gbmVjZXNzYXJ5CiAgICAgICAgdGVtcGxhdGU6CiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgbGFiZWxzOgogICAgICAgICAgICAgICMgSW1wb3J0YW50OiB0aGVzZSBsYWJlbHMgbmVlZCB0byBtYXRjaCB0aGUgc2VsZWN0b3IgYWJvdmUKICAgICAgICAgICAgICAjIFRoZSBhcGkgc2VydmVyIGVuZm9yY2VzIHRoaXMgY29uc3RyYWludC4KICAgICAgICAgICAgICBhcHA6IG5naW54CiAgICAgICAgICBzcGVjOgogICAgICAgICAgICBjb250YWluZXJzOgogICAgICAgICAgICAgIC0gbmFtZTogbmdpbngKICAgICAgICAgICAgICAgIGltYWdlOiBuZ2lueAogICAgICAgICAgICAgICAgcG9ydHM6CiAgICAgICAgICAgICAgICAgIC0gY29udGFpbmVyUG9ydDogODAKCiAgLSBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvcG9kLW5naW54LXdpdGgtbGFiZWwueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFBvZAogICAgICBtZXRhZGF0YToKICAgICAgICBuYW1lOiBuZ2lueAogICAgICAgIGxhYmVsczoKICAgICAgICAgIGFwcDogbmdpbngKICAgICAgc3BlYzoKICAgICAgICBjb250YWluZXJzOgogICAgICAgIC0gbmFtZTogbmdpbngKICAgICAgICAgIGltYWdlOiBuZ2lueAogICAgICAgICAgcG9ydHM6CiAgICAgICAgICAtIGNvbnRhaW5lclBvcnQ6IDgwCgogIC0gcGF0aDogL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3NlcnZpY2UueWFtbAogICAgb3duZXI6ICJyb290OnJvb3QiCiAgICBwZXJtaXNzaW9uczogIjA2NDQiCiAgICBjb250ZW50OiB8CiAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgIGtpbmQ6IFNlcnZpY2UKICAgICAgbWV0YWRhdGE6CiAgICAgICAgbmFtZTogbmdpbngtc2VydmljZQogICAgICBzcGVjOgogICAgICAgIHBvcnRzOgogICAgICAgIC0gcG9ydDogODAwMCAjIHRoZSBwb3J0IHRoYXQgdGhpcyBzZXJ2aWNlIHNob3VsZCBzZXJ2ZSBvbgogICAgICAgICAgIyB0aGUgY29udGFpbmVyIG9uIGVhY2ggcG9kIHRvIGNvbm5lY3QgdG8sIGNhbiBiZSBhIG5hbWUKICAgICAgICAgICMgKGUuZy4gJ3d3dycpIG9yIGEgbnVtYmVyIChlLmcuIDgwKQogICAgICAgICAgdGFyZ2V0UG9ydDogODAKICAgICAgICAgIHByb3RvY29sOiBUQ1AKICAgICAgICAjIGp1c3QgbGlrZSB0aGUgc2VsZWN0b3IgaW4gdGhlIHJlcGxpY2F0aW9uIGNvbnRyb2xsZXIsCiAgICAgICAgIyBidXQgdGhpcyB0aW1lIGl0IGlkZW50aWZpZXMgdGhlIHNldCBvZiBwb2RzIHRvIGxvYWQgYmFsYW5jZQogICAgICAgICMgdHJhZmZpYyB0by4KICAgICAgICBzZWxlY3RvcjoKICAgICAgICAgIGFwcDogbmdpbngKCiAgLSBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvZXhhbXBsZXMvUkVBRE1FLm1kCiAgICBvd25lcjogInJvb3Q6cm9vdCIKICAgIHBlcm1pc3Npb25zOiAiMDY0NCIKICAgIGNvbnRlbnQ6IHwKICAgICAgS3ViZXJuZXRlcyAxMDEgKGh0dHA6Ly9rdWJlcm5ldGVzLmlvL3YxLjAvZG9jcy91c2VyLWd1aWRlL3dhbGt0aHJvdWdoL1JFQURNRS5odG1sKQogICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgogICAgICBMaXN0IGFsbCBub2RlczoKCiAgICAgICAgICBrdWJlY3RsIGdldCBub2RlcwoKICAgICAgUmVwbGljYXRpb24gQ29udHJvbGxlcnM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3JlcGxpY2F0aW9uLWNvbnRyb2xsZXIueWFtbAogICAgICAgICAga3ViZWN0bCBnZXQgcmMKICAgICAgICAgIGt1YmVjdGwgZGVsZXRlIHJjIG5naW54LWNvbnRyb2xsZXIKCiAgICAgIFBvZHM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3BvZC1uZ2lueC13aXRoLWxhYmVsLnlhbWwKICAgICAgICAgIGt1YmVjdGwgZ2V0IHBvZHMKICAgICAgICAgIGN1cmwgaHR0cDovLyQoa3ViZWN0bCBnZXQgcG9kIG5naW54IC1vPXRlbXBsYXRlIC10PXt7LnN0YXR1cy5wb2RJUH19KQoKICAgICAgU2VydmljZXM6CgogICAgICAgICAga3ViZWN0bCBjcmVhdGUgLWYgL2V0Yy9rdWJlcm5ldGVzL2V4YW1wbGVzL3NlcnZpY2UueWFtbAogICAgICAgICAga3ViZWN0bCBnZXQgc2VydmljZXMKCiAgICAgICAgICBleHBvcnQgU0VSVklDRV9JUD0kKGt1YmVjdGwgZ2V0IHNlcnZpY2Ugbmdpbngtc2VydmljZSAtbz10ZW1wbGF0ZSAtdD17ey5zcGVjLmNsdXN0ZXJJUH19KQogICAgICAgICAgZXhwb3J0IFNFUlZJQ0VfUE9SVD0kKGt1YmVjdGwgZ2V0IHNlcnZpY2Ugbmdpbngtc2VydmljZSAtbz10ZW1wbGF0ZSAnLXQ9e3soaW5kZXggLnNwZWMucG9ydHMgMCkucG9ydH19JykKICAgICAgICAgIGN1cmwgaHR0cDovLyR7U0VSVklDRV9JUH06JHtTRVJWSUNFX1BPUlR9CgogICAgICAgICAga3ViZWN0bCBkZWxldGUgc2VydmljZSBuZ2lueC1zZXJ2aWNlCgogICAgICBUcm91Ymxlc2hvb3Rpbmc6CgogICAgICAgICAga3ViZWN0bCBnZXQgZXZlbnRzCgogICAgICAgICAga3ViZWN0bCBkZXNjcmliZSByYyBuZ2lueC1jb250cm9sbGVyCgogICAgICAgICAga3ViZWN0bCBkZXNjcmliZSBwb2QgbmdpbngKCiAgICAgICAgICBrdWJlY3RsIGRlc2NyaWJlIHNlcnZpY2Ugbmdpbngtc2VydmljZQoKICAgICAgICAgIGt1YmVjdGwgZXhlYyBuZ2lueCBlbnYKCiAgICAgICAgICBrdWJlY3RsIGV4ZWMgLXRpIG5naW54IC0tIGJhc2gKCi0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09CkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKCiMhL2Jpbi9zaAoKLiAvZXRjL3N5c2NvbmZpZy9oZWF0LXBhcmFtcwoKV0NfTk9USUZZX0JJTj0vdXNyL2xvY2FsL2Jpbi93Yy1ub3RpZnkKV0NfTk9USUZZX1NFUlZJQ0U9L2V0Yy9zeXN0ZW1kL3N5c3RlbS93Yy1ub3RpZnkuc2VydmljZQoKY2F0ID4gJFdDX05PVElGWV9CSU4gPDxFT0YKIyEvYmluL2Jhc2ggLXYKdW50aWwgY3VybCAtc2YgImh0dHA6Ly8xMjcuMC4wLjE6ODA4MC9oZWFsdGh6IjsgZG8KICAgIGVjaG8gIldhaXRpbmcgZm9yIEt1YmVybmV0ZXMgQVBJLi4uIgogICAgc2xlZXAgNQpkb25lCiRXQUlUX0NVUkwgLS1kYXRhLWJpbmFyeSAneyJzdGF0dXMiOiAiU1VDQ0VTUyJ9JwpFT0YKCmNhdCA+ICRXQ19OT1RJRllfU0VSVklDRSA8PEVPRgpbVW5pdF0KRGVzY3JpcHRpb249Tm90aWZ5IEhlYXQKQWZ0ZXI9ZG9ja2VyLnNlcnZpY2UgZXRjZC5zZXJ2aWNlClJlcXVpcmVzPWRvY2tlci5zZXJ2aWNlIGV0Y2Quc2VydmljZQpbU2VydmljZV0KVHlwZT1vbmVzaG90CkV4ZWNTdGFydD0kV0NfTk9USUZZX0JJTgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9GCgpjaG93biByb290OnJvb3QgJFdDX05PVElGWV9CSU4KY2htb2QgMDc1NSAkV0NfTk9USUZZX0JJTgoKY2hvd24gcm9vdDpyb290ICRXQ19OT1RJRllfU0VSVklDRQpjaG1vZCAwNjQ0ICRXQ19OT1RJRllfU0VSVklDRQoKc3lzdGVtY3RsIGVuYWJsZSB3Yy1ub3RpZnkKc3lzdGVtY3RsIHN0YXJ0IC0tbm8tYmxvY2sgd2Mtbm90aWZ5Ci0tPT09PT09PT09PT09PT09MDk4MjI3MTAxMTQ4MzM5OTM3MT09LS0K',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab,vcpu_model=VirtCPUModel,vcpus=1,vm_mode=None,vm_state='building'), u'fa:16:3e:a9:11:04', ImageMeta(checksum='1db43e5c5f8fda49dc4324cbb391bc55',container_format='bare',created_at=2017-01-19T04:22:26Z,direct_url=<?>,disk_format='qcow2',id=63388f50-4450-4c85-8f3c-197af8f6f6cf,min_disk=0,min_ram=0,name='fedora-atomic-latest',owner='952ab5c3e12a4e4093bed04b75f3afc5',properties=ImageMetaProps,protected=<?>,size=697925632,status='active',tags=<?>,updated_at=2017-01-19T04:28:13Z,virtual_size=<?>,visibility=<?>), Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), 'kvm', u'normal')", 
                "name": "nova.virt.libvirt.vif.LibvirtGenericVIFDriver.get_base_config", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5f17e7db-77ee-4a7d-97ef-bd28eb1437d1": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e0818d0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e05517d0-9d59-48d9-9063-296d2bc6cb96": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>, <bound method ClientWrapper.show_port of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "339f68e3-bf4c-4192-a13b-d9dda743d0e1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, 'GET', '/extensions')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "69b3dcaa-79de-439c-9f0c-7a8257a72df0": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:cf:f0:f1\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:45:23Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.3\"}], \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"security_groups\": [\"a194cf94-7b7a-42dd-86a1-306e04d6c859\"], \"device_id\": \"5299fdb3-2219-46f9-8c52-86fce045e372\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_eth0-le73kun3tjst\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:cf:f0:f1\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:13Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "46f076e5-e666-4c69-aed5-c9f0b58fe690": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4ff50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "42f73d3c-f5f7-48f7-b567-1038afc8991a": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952d821410>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20150430 object at 0x7f952de5ac50>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "7a4776b2-24ba-4a73-9c0f-08338ec589a9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8a97e402-9574-4d04-a9e2-5be0b088e5b0": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dce4050>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 66, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4d98bb80-c84a-4e6c-a4f3-fd8c2a9e76da": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b1105d7e-4016-4300-aa39-1c5eab7aa0e9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "eed9ed57-36a0-44f8-8a36-b7297fe1f825": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2332cc90-8977-4a67-be2b-a2b695d10899": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4ed3ef63-dbce-4000-acf3-da1817e8b2e9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ebd1a90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "27de051b-4b83-4408-8dbf-2c7b8d9dcbe8": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e3beb50>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'InstancePCIRequests': u'1.1', u'InstancePCIRequest': u'1.1'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'5299fdb3-2219-46f9-8c52-86fce045e372'], u'objname': u'InstancePCIRequests', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b189203c-a173-45d2-8635-e61dcfcb03fc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c75adf1f-b4c7-4d60-bfa5-8f5e8ff503e7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37edd76d0>, u'{\"ports\": [{\"status\": \"DOWN\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:a9:11:04\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:42:22Z\", \"device_owner\": \"compute:None\", \"revision_number\": 8, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.9\"}], \"id\": \"2c0275e1-3f3e-4ca5-aa69-a0660197e312\", \"security_groups\": [\"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\"], \"device_id\": \"6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_eth0-oqylmj6lz25z\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:a9:11:04\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:42:12Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "78891e79-7c81-4555-a206-b900d0bb9469": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ee56450>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "096acd00-d37d-4b4d-9d95-df8d0c415127": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "a1024672-726e-4172-8a59-5a220502a6ee": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "940944c1-1cb4-4de3-81d2-b0a79e23fb75": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952df8c810>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': '3615ec66-3524-4bdc-8d83-f7a36216793c'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e40d8824-eb8b-448a-9d87-4a25208e9cd6": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dc27ad0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 50, u'data': {u'input_data': {}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fcde9e5c-108e-42aa-9af2-ca6ecd39a635": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef01a50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b937b7f5-7293-4513-a925-b94e9ab6f2bd": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, 'GET', '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "70367cc3-2541-4b95-bc2c-ee513a5c3a85": {
            "function": {
                "args": "(<nova.scheduler.manager.SchedulerManager object at 0x7f52069556d0>, <nova.context.RequestContext object at 0x7f52060f2c10>)", 
                "name": "nova.scheduler.manager.SchedulerManager.inner", 
                "kwargs": "{u'spec_obj': RequestSpec(availability_zone=None,flavor=Flavor(7),force_hosts=None,force_nodes=None,id=<?>,ignore_hosts=None,image=ImageMeta(63388f50-4450-4c85-8f3c-197af8f6f6cf),instance_group=None,instance_uuid=5299fdb3-2219-46f9-8c52-86fce045e372,limits=SchedulerLimits,num_instances=1,numa_topology=None,pci_requests=InstancePCIRequests,project_id='f789928a4f254f96965ff7f3dedd02be',requested_destination=None,retry=SchedulerRetries,scheduler_hints={},security_groups=<?>)}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "158e9e82-befb-4597-ab42-a2560803ff32": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dcf00d0>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-network_config_service-psh7ap35uxhd', u'outputs': [], u'config': u'#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$NETWORK_DRIVER\" != \"flannel\" ]; then\\n    exit 0\\nfi\\nCERT_DIR=/srv/kubernetes\\nPROTOCOL=https\\nFLANNEL_OPTIONS=\"-etcd-cafile $CERT_DIR/ca.crt \\\\\\n-etcd-certfile $CERT_DIR/server.crt \\\\\\n-etcd-keyfile $CERT_DIR/server.key\"\\nETCD_CURL_OPTIONS=\"--cacert $CERT_DIR/ca.crt \\\\\\n--cert $CERT_DIR/server.crt --key $CERT_DIR/server.key\"\\nFLANNELD_CONFIG=/etc/sysconfig/flanneld\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    PROTOCOL=http\\n    FLANNEL_OPTIONS=\"\"\\n    ETCD_CURL_OPTIONS=\"\"\\nfi\\n\\nsed -i \\'/FLANNEL_OPTIONS/\\'d $FLANNELD_CONFIG\\n\\ncat >> $FLANNELD_CONFIG <<EOF\\nFLANNEL_OPTIONS=\"$FLANNEL_OPTIONS\"\\nEOF\\n\\n. $FLANNELD_CONFIG\\n\\nFLANNEL_CONFIG_BIN=/usr/local/bin/flannel-config\\nFLANNEL_CONFIG_SERVICE=/etc/systemd/system/flannel-config.service\\nFLANNEL_JSON=/etc/sysconfig/flannel-network.json\\n\\necho \"creating $FLANNEL_CONFIG_BIN\"\\ncat > $FLANNEL_CONFIG_BIN <<EOF\\n#!/bin/sh\\n\\nif ! [ -f \"$FLANNEL_JSON\" ]; then\\n  echo \"ERROR: missing network configuration file\" >&2\\n  exit 1\\nfi\\n\\nif ! [ \"$FLANNEL_ETCD\" ] && [ \"$FLANNEL_ETCD_KEY\" ]; then\\n  echo \"ERROR: missing required configuration\" >&2\\n  exit 1\\nfi\\n\\necho \"creating flanneld config in etcd\"\\nwhile ! curl -sf -L $ETCD_CURL_OPTIONS \\\\\\n        $FLANNEL_ETCD/v2/keys${FLANNEL_ETCD_KEY}/config \\\\\\n        -X PUT --data-urlencode value@${FLANNEL_JSON}; do\\n    echo \"waiting for etcd\"\\n    sleep 1\\ndone\\nEOF\\n\\ncat > $FLANNEL_CONFIG_SERVICE <<EOF\\n[Unit]\\nAfter=etcd.service\\nRequires=etcd.service\\n\\n[Service]\\nType=oneshot\\nEnvironmentFile=/etc/sysconfig/flanneld\\nExecStart=$FLANNEL_CONFIG_BIN\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n\\nchown root:root $FLANNEL_CONFIG_BIN\\nchmod 0755 $FLANNEL_CONFIG_BIN\\n\\nchown root:root $FLANNEL_CONFIG_SERVICE\\nchmod 0644 $FLANNEL_CONFIG_SERVICE\\n\\nsystemctl enable flannel-config\\nsystemctl start --no-block flannel-config\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "871e53b9-a6f2-4856-bbb3-0cae2e30ae9e": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "ad163963-46ab-4f2d-881f-e1449b87b3ab": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01e810>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "2ef471be-4f51-4cd8-b616-91bf48890819": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952d821410>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': 'b9df7b68-0898-4433-b51f-24339dbd30d3'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6b6b5cf0-61ee-4018-b30a-c0043591574e": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e7011d0>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': Instance(access_ip_v4=None,access_ip_v6=None,architecture=None,auto_disk_config=False,availability_zone=None,cell_name=None,cleaned=False,config_drive='',created_at=2017-01-19T06:45:21Z,default_ephemeral_device=None,default_swap_device=None,deleted=False,deleted_at=None,device_metadata=None,disable_terminate=False,display_description='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',display_name='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',ec2_ids=EC2Ids,ephemeral_gb=0,ephemeral_key_uuid=None,fault=<?>,flavor=Flavor(7),host='vinhnt-LAB',hostname='k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll',id=3,image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',info_cache=InstanceInfoCache,instance_type_id=7,kernel_id='',key_data='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeRt3tnwK+zon5VI5uE3xfddZDUmUmeeu/mmkQl6FvWpaa0ij1a5yian2lZ8hgddZeGjXlsbbAc1sUqTXxRny99qaRYUGKXw8Yz+Wflv1/HKeKG96U+gHc90peqM36Pj09slsRiH6QU68f0WV+NbOfFRW4eM107VJXXZEXdTPBKSt2eEt9vXgmfICmcvb4bIekgGuXeA/+Xbl10YfpNCFqngqIlivc3ohbzKfwUsynLIsMTx1//IgUzsyt/x9HXfJjUWNYG1XAizGVMr1yxB+PdmzOc9sGKnbFKCV8sIQjtG47AZEhfJ3/jnFBR6pCX/oSo8Z5FroFlHoK0gZztMPR stack@vinhnt-LAB\n',key_name='testkey',keypairs=KeyPairList,launch_index=0,launched_at=2017-01-19T06:45:28Z,launched_on='vinhnt-LAB',locked=False,locked_by=None,memory_mb=2048,metadata={},migration_context=<?>,new_flavor=None,node='vinhnt-LAB',numa_topology=None,old_flavor=None,os_type=None,pci_devices=PciDeviceList,pci_requests=InstancePCIRequests,power_state=1,progress=0,project_id='f789928a4f254f96965ff7f3dedd02be',ramdisk_id='',reservation_id='r-sp4hc8rx',root_device_name='/dev/vda',root_gb=20,security_groups=SecurityGroupList,services=<?>,shutdown_terminate=False,system_metadata={image_base_image_ref='63388f50-4450-4c85-8f3c-197af8f6f6cf',image_container_format='bare',image_disk_format='qcow2',image_min_disk='20',image_min_ram='0',image_os_distro='fedora-atomic'},tags=<?>,task_state=None,terminated_at=None,updated_at=2017-01-19T06:45:23Z,user_data='',user_id='34b35d595bf84b739aefa6458d6facb7',uuid=5299fdb3-2219-46f9-8c52-86fce045e372,vcpu_model=VirtCPUModel,vcpus=1,vm_mode=None,vm_state='active'), u'kwargs': {u'expected_task_state': u'spawning'}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "621f61c1-1c3b-4ab6-8abf-3af7f871241f": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e494a50>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'PciDevicePoolList': u'1.1', u'ServiceList': u'1.19', u'PciDevicePool': u'1.1', u'Service': u'1.20', u'TagList': u'1.1', u'InstancePCIRequests': u'1.1', u'VirtCPUModel': u'1.0', u'MigrationContext': u'1.1', u'SecurityGroup': u'1.2', u'Instance': u'2.3', u'KeyPair': u'1.4', u'KeyPairList': u'1.3', u'DeviceMetadata': u'1.0', u'InstancePCIRequest': u'1.1', u'EC2Ids': u'1.0', u'InstanceInfoCache': u'1.5', u'VirtCPUFeature': u'1.0', u'Flavor': u'1.1', u'SecurityGroupList': u'1.0', u'PciDevice': u'1.5', u'VirtCPUTopology': u'1.0', u'InstanceNUMACell': u'1.3', u'DeviceBus': u'1.0', u'ComputeNode': u'1.16', u'InstanceFault': u'1.2', u'Tag': u'1.1', u'HVSpec': u'1.2', u'InstanceDeviceMetadata': u'1.0', u'InstanceNUMATopology': u'1.3', u'PciDeviceList': u'1.3'}, u'objmethod': u'get_by_uuid', u'args': [], u'objname': u'Instance', u'kwargs': {u'uuid': u'5299fdb3-2219-46f9-8c52-86fce045e372', u'expected_attrs': [u'flavor', u'system_metadata']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cc8eae4d-a51d-4ff2-9b26-06be182ce6e9": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1e8504eb-c7c1-483c-8d57-aed523b53ccc": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ecc58d0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f1f9a63d-c951-479e-ad0c-a6c46edcc828": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dc6fb50>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'Heat::Ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-kube_master_init-ep2rrppuff4a', u'outputs': [], u'config': u'Content-Type: multipart/mixed; boundary=\"===============0982271011483399371==\"\\nMIME-Version: 1.0\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#cloud-boothook\\n#!/bin/sh\\n\\nsetenforce 0\\n\\nsed -i \\'\\n    /^SELINUX=/ s/=.*/=permissive/\\n\\' /etc/selinux/config\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /etc/sysconfig/heat-params\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      KUBE_API_PUBLIC_ADDRESS=\"172.24.4.11\"\\n      KUBE_API_PRIVATE_ADDRESS=\"10.0.0.9\"\\n      KUBE_API_PORT=\"8080\"\\n      KUBE_NODE_PUBLIC_IP=\"172.24.4.11\"\\n      KUBE_NODE_IP=\"10.0.0.9\"\\n      KUBE_ALLOW_PRIV=\"true\"\\n      ENABLE_CINDER=\"$ENABLE_CINDER\"\\n      DOCKER_VOLUME=\"82c28688-a34b-4bc3-89c6-fdc04285570b\"\\n      DOCKER_VOLUME_SIZE=\"3\"\\n      DOCKER_STORAGE_DRIVER=\"devicemapper\"\\n      NETWORK_DRIVER=\"flannel\"\\n      FLANNEL_NETWORK_CIDR=\"10.100.0.0/16\"\\n      FLANNEL_NETWORK_SUBNETLEN=\"24\"\\n      FLANNEL_BACKEND=\"udp\"\\n      PORTAL_NETWORK_CIDR=\"10.254.0.0/16\"\\n      ETCD_DISCOVERY_URL=\"https://discovery.etcd.io/202d6f895ed3f6dd8041b7b8d2a5a37f\"\\n      USERNAME=\"admin\"\\n      PASSWORD=\"ChangeMe\"\\n      TENANT_NAME=\"f789928a4f254f96965ff7f3dedd02be\"\\n      CLUSTER_SUBNET=\"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\"\\n      TLS_DISABLED=\"True\"\\n      CLUSTER_UUID=\"9a8ea37c-e9d3-4a7a-a2b1-dc164fb21d67\"\\n      MAGNUM_URL=\"http://10.164.180.85:9511/v1\"\\n      HTTP_PROXY=\"http://10.164.177.168:8080/\"\\n      HTTPS_PROXY=\"http://10.164.177.168:8080/\"\\n      NO_PROXY=\"10.164.180.85,10.0.0.0/8,172.0.0.0/8\"\\n      WAIT_CURL=\"curl -i -X POST -H \\'X-Auth-Token: gAAAAABYgF_Dm_W5wJupTBXAD8rFKYXiBc1NagMibr7j-iElX2tWTD4fvnRcyW0v_qA0AG9Mj83o0N5kF70bzfGyaeP4Z9414BbzRJGe5WFnaE-pPIgA40vMWN4yTws3B7TEV3Mnv0WQfvGcgLo4WcVGJnMb8K-m6bMK7MbHxcpAGcHk5meTeAQ\\' -H \\'Content-Type: application/json\\' -H \\'Accept: application/json\\' http://10.164.180.85:8004/v1/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/stacks/k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv/c3f7a50b-5fc9-4209-8728-2af4300e42de/resources/master_wait_handle/signal\"\\n      KUBE_VERSION=\"v1.2.0\"\\n      TRUSTEE_USER_ID=\"44f763e5727747eeba6f3095d7a86952\"\\n      TRUSTEE_PASSWORD=\"7BXp9ABpBgeK5zatdT\"\\n      TRUST_ID=\"a6f5cdd3ef814c32bd36b133781786bc\"\\n      AUTH_URL=\"http://10.164.180.85:5000/v3\"\\n      INSECURE_REGISTRY_URL=\"\"\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -z \"$KUBE_NODE_IP\" ]; then\\n    # FIXME(yuanying): Set KUBE_NODE_IP correctly\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nmyip=\"${KUBE_NODE_IP}\"\\ncert_dir=\"/srv/kubernetes\"\\nprotocol=\"https\"\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    protocol=\"http\"\\nfi\\n\\ncat > /etc/etcd/etcd.conf <<EOF\\nETCD_NAME=\"$myip\"\\nETCD_DATA_DIR=\"/var/lib/etcd/default.etcd\"\\nETCD_LISTEN_CLIENT_URLS=\"$protocol://$myip:2379,http://127.0.0.1:2379\"\\nETCD_LISTEN_PEER_URLS=\"$protocol://$myip:2380\"\\n\\nETCD_ADVERTISE_CLIENT_URLS=\"$protocol://$myip:2379,http://127.0.0.1:2379\"\\nETCD_INITIAL_ADVERTISE_PEER_URLS=\"$protocol://$myip:2380\"\\nETCD_DISCOVERY=\"$ETCD_DISCOVERY_URL\"\\nEOF\\n\\nif [ \"$TLS_DISABLED\" = \"False\" ]; then\\n\\ncat >> /etc/etcd/etcd.conf <<EOF\\nETCD_CA_FILE=$cert_dir/ca.crt\\nETCD_CERT_FILE=$cert_dir/server.crt\\nETCD_KEY_FILE=$cert_dir/server.key\\nETCD_PEER_CA_FILE=$cert_dir/ca.crt\\nETCD_PEER_CERT_FILE=$cert_dir/server.crt\\nETCD_PEER_KEY_FILE=$cert_dir/server.key\\nEOF\\n\\nfi\\n\\nif [ -n \"$HTTP_PROXY\" ]; then\\n    echo \"ETCD_DISCOVERY_PROXY=$HTTP_PROXY\" >> /etc/etcd/etcd.conf\\nfi\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nKUBE_OS_CLOUD_CONFIG=/etc/sysconfig/kube_openstack_config\\n\\n# kubernetes backend only support keystone v2 at this point\\nAUTH_URL=$(echo \"$AUTH_URL\" | sed \\'s/v3/v2.0/\\')\\n\\n# Generate a the configuration for Kubernetes services\\n# to talk to OpenStack Neutron\\ncat > $KUBE_OS_CLOUD_CONFIG <<EOF\\n[Global]\\nauth-url=$AUTH_URL\\nusername=$USERNAME\\npassword=$PASSWORD\\ntenant-name=$TENANT_NAME\\n[LoadBalancer]\\nsubnet-id=$CLUSTER_SUBNET\\ncreate-monitor=yes\\nmonitor-delay=1m\\nmonitor-timeout=30s\\nmonitor-max-retries=3\\nEOF\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n# Copyright 2014 The Kubernetes Authors All rights reserved.\\n#\\n# Licensed under the Apache License, Version 2.0 (the \"License\");\\n# you may not use this file except in compliance with the License.\\n# You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \"AS IS\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n. /etc/sysconfig/heat-params\\n\\nset -o errexit\\nset -o nounset\\nset -o pipefail\\n\\nif [ \"$TLS_DISABLED\" == \"True\" ]; then\\n    exit 0\\nfi\\n\\nif [[ -z \"${KUBE_NODE_PUBLIC_IP}\" ]]; then\\n    KUBE_NODE_PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\\nfi\\nif [[ -z \"${KUBE_NODE_IP}\" ]]; then\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nsans=\"IP:${KUBE_NODE_PUBLIC_IP},IP:${KUBE_NODE_IP}\"\\nif [ \"${KUBE_NODE_PUBLIC_IP}\" != \"${KUBE_API_PUBLIC_ADDRESS}\" ] \\\\\\n        && [ -n \"${KUBE_API_PUBLIC_ADDRESS}\" ]; then\\n    sans=\"${sans},IP:${KUBE_API_PUBLIC_ADDRESS}\"\\nfi\\nif [ \"${KUBE_NODE_IP}\" != \"${KUBE_API_PRIVATE_ADDRESS}\" ] \\\\\\n        && [ -n \"${KUBE_API_PRIVATE_ADDRESS}\" ]; then\\n    sans=\"${sans},IP:${KUBE_API_PRIVATE_ADDRESS}\"\\nfi\\nMASTER_HOSTNAME=${MASTER_HOSTNAME:-}\\nif [[ -n \"${MASTER_HOSTNAME}\" ]]; then\\n    sans=\"${sans},DNS:${MASTER_HOSTNAME}\"\\nfi\\nsans=\"${sans},IP:127.0.0.1\"\\n\\ncert_dir=/srv/kubernetes\\ncert_conf_dir=${cert_dir}/conf\\n\\nmkdir -p \"$cert_dir\"\\nmkdir -p \"$cert_conf_dir\"\\n\\nCA_CERT=$cert_dir/ca.crt\\nSERVER_CERT=$cert_dir/server.crt\\nSERVER_CSR=$cert_dir/server.csr\\nSERVER_KEY=$cert_dir/server.key\\n\\n#Get a token by user credentials and trust\\nauth_json=$(cat << EOF\\n{\\n    \"auth\": {\\n        \"identity\": {\\n            \"methods\": [\\n                \"password\"\\n            ],\\n            \"password\": {\\n                \"user\": {\\n                    \"id\": \"$TRUSTEE_USER_ID\",\\n                    \"password\": \"$TRUSTEE_PASSWORD\"\\n                }\\n            }\\n        },\\n        \"scope\": {\\n            \"OS-TRUST:trust\": {\\n                \"id\": \"$TRUST_ID\"\\n            }\\n        }\\n    }\\n}\\nEOF\\n)\\n\\n#trust is introduced in Keystone v3 version\\nAUTH_URL=${AUTH_URL/v2.0/v3}\\ncontent_type=\\'Content-Type: application/json\\'\\nurl=\"$AUTH_URL/auth/tokens\"\\nUSER_TOKEN=`curl -k -s -i -X POST -H \"$content_type\" -d \"$auth_json\" $url \\\\\\n    | grep X-Subject-Token | awk \\'{print $2}\\' | tr -d \\'[[:space:]]\\'`\\n\\n# Get CA certificate for this cluster\\ncurl -k -X GET \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    $MAGNUM_URL/certificates/$CLUSTER_UUID | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > ${CA_CERT}\\n\\n# Create config for server\\'s csr\\ncat > ${cert_conf_dir}/server.conf <<EOF\\n[req]\\ndistinguished_name = req_distinguished_name\\nreq_extensions     = req_ext\\nprompt = no\\n[req_distinguished_name]\\nCN = kubernetes.invalid\\n[req_ext]\\nsubjectAltName = ${sans}\\nextendedKeyUsage = clientAuth,serverAuth\\nEOF\\n\\n# Generate server\\'s private key and csr\\nopenssl genrsa -out \"${SERVER_KEY}\" 4096\\nchmod 400 \"${SERVER_KEY}\"\\nopenssl req -new -days 1000 \\\\\\n        -key \"${SERVER_KEY}\" \\\\\\n        -out \"${SERVER_CSR}\" \\\\\\n        -reqexts req_ext \\\\\\n        -config \"${cert_conf_dir}/server.conf\"\\n\\n# Send csr to Magnum to have it signed\\ncsr_req=$(python -c \"import json; fp = open(\\'${SERVER_CSR}\\'); print json.dumps({\\'cluster_uuid\\': \\'$CLUSTER_UUID\\', \\'csr\\': fp.read()}); fp.close()\")\\ncurl -k -X POST \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    -H \"Content-Type: application/json\" \\\\\\n    -d \"$csr_req\" \\\\\\n    $MAGNUM_URL/certificates | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > ${SERVER_CERT}\\n\\n# Common certs and key are created for both etcd and kubernetes services.\\n# Both etcd and kube user should have permission to access the certs and key.\\ngroupadd kube_etcd\\nusermod -a -G kube_etcd etcd\\nusermod -a -G kube_etcd kube\\nchmod 550 \"${cert_dir}\"\\nchown -R kube:kube_etcd \"${cert_dir}\"\\nchmod 440 $SERVER_KEY\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n    if [ \"$ENABLE_CINDER\" == \"False\" ]; then\\n        # FIXME(yuanying): Use ephemeral disk for docker storage\\n        # Currently Ironic doesn\\'t support cinder volumes,\\n        # so we must use preserved ephemeral disk instead of a cinder volume.\\n        device_path=$(readlink -f /dev/disk/by-label/ephemeral0)\\n    else\\n        attempts=60\\n        while [ ${attempts} -gt 0 ]; do\\n            device_name=$(ls /dev/disk/by-id | grep ${DOCKER_VOLUME:0:20}$)\\n            if [ -n \"${device_name}\" ]; then\\n                break\\n            fi\\n            echo \"waiting for disk device\"\\n            sleep 0.5\\n            udevadm trigger\\n            let attempts--\\n        done\\n\\n        if [ -z \"${device_name}\" ]; then\\n            echo \"ERROR: disk device does not exist\" >&2\\n            exit 1\\n        fi\\n\\n        device_path=/dev/disk/by-id/${device_name}\\n    fi\\nfi\\n\\n# This file contains docker storage drivers configuration for fedora\\n# atomic hosts. Currently, devicemapper and overlay are supported.\\n\\n# Remove any existing docker-storage configuration. In case of an\\n# existing configuration, docker-storage-setup will fail.\\nclear_docker_storage_configuration () {\\n    if [ -f /etc/sysconfig/docker-storage ]; then\\n        sed -i \"/^DOCKER_STORAGE_OPTIONS=/ s/=.*/=/\" /etc/sysconfig/docker-storage\\n    fi\\n}\\n\\n# Configure docker storage with xfs as backing filesystem.\\nconfigure_overlay () {\\n    clear_docker_storage_configuration\\n\\n    rm -rf /var/lib/docker/*\\n\\n    if [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n        mkfs.xfs -f ${device_path}\\n        echo \"${device_path} /var/lib/docker xfs defaults 0 0\" >> /etc/fstab\\n        mount -a\\n    fi\\n\\n    echo \"STORAGE_DRIVER=overlay\" > /etc/sysconfig/docker-storage-setup\\n\\n    # SELinux must be enabled and in enforcing mode on the physical\\n    # machine, but must be disabled in the container when performing\\n    # container separation\\n    sed -i \"/^OPTIONS=/ s/--selinux-enabled/--selinux-enabled=false/\" /etc/sysconfig/docker\\n}\\n\\n# Configure docker storage with devicemapper using direct LVM\\nconfigure_devicemapper () {\\n    clear_docker_storage_configuration\\n\\n    if [ -n \"$DOCKER_VOLUME_SIZE\" ] && [ \"$DOCKER_VOLUME_SIZE\" -gt 0 ]; then\\n        pvcreate -f ${device_path}\\n        vgcreate docker ${device_path}\\n\\n        echo \"VG=docker\" > /etc/sysconfig/docker-storage-setup\\n    fi\\n}\\n\\n\\nif [ \"$DOCKER_STORAGE_DRIVER\" = \"overlay\" ]; then\\n    if [ $(echo -e \"$(uname -r)\\\\n3.18\" | sort -V | head -1) = $(uname -r) ]; then\\n        ERROR_MESSAGE=\"OverlayFS requires at least Linux kernel 3.18. Cluster node kernel version: $(uname -r)\"\\n        echo \"ERROR: ${ERROR_MESSAGE}\" >&2\\n        sh -c \"${WAIT_CURL} --data-binary \\'{\\\\\"status\\\\\": \\\\\"FAILURE\\\\\", \\\\\"reason\\\\\": \\\\\"${ERROR_MESSAGE}\\\\\"}\\'\"\\n    else\\n        configure_overlay\\n    fi\\nelse\\n    configure_devicemapper\\nfi\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\necho \"configuring kubernetes (master)\"\\n\\nif [ -z \"$KUBE_NODE_IP\" ]; then\\n    # FIXME(yuanying): Set KUBE_NODE_IP correctly\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nsed -i \\'\\n    /^KUBE_ALLOW_PRIV=/ s/=.*/=\"--allow-privileged=\\'\"$KUBE_ALLOW_PRIV\"\\'\"/\\n\\' /etc/kubernetes/config\\n\\nKUBE_API_ARGS=\"--runtime-config=api/all=true\"\\nif [ \"$TLS_DISABLED\" == \"True\" ]; then\\n    KUBE_API_ADDRESS=\"--insecure-bind-address=0.0.0.0 --insecure-port=$KUBE_API_PORT\"\\nelse\\n    KUBE_API_ADDRESS=\"--bind-address=0.0.0.0 --secure-port=$KUBE_API_PORT\"\\n    # insecure port is used internaly\\n    KUBE_API_ADDRESS=\"$KUBE_API_ADDRESS --insecure-port=8080\"\\n    KUBE_API_ARGS=\"$KUBE_API_ARGS --tls-cert-file=/srv/kubernetes/server.crt\"\\n    KUBE_API_ARGS=\"$KUBE_API_ARGS --tls-private-key-file=/srv/kubernetes/server.key\"\\n    KUBE_API_ARGS=\"$KUBE_API_ARGS --client-ca-file=/srv/kubernetes/ca.crt\"\\nfi\\n\\nsed -i \\'\\n    /^KUBE_API_ADDRESS=/ s/=.*/=\"\\'\"${KUBE_API_ADDRESS}\"\\'\"/\\n    /^KUBE_SERVICE_ADDRESSES=/ s|=.*|=\"--service-cluster-ip-range=\\'\"$PORTAL_NETWORK_CIDR\"\\'\"|\\n    /^KUBE_API_ARGS=/ s/KUBE_API_ARGS.//\\n    /^KUBE_ETCD_SERVERS=/ s/=.*/=\"--etcd-servers=http:\\\\/\\\\/127.0.0.1:2379\"/\\n    /^KUBE_ADMISSION_CONTROL=/ s/=.*/=\"\"/\\n\\' /etc/kubernetes/apiserver\\ncat << _EOC_ >> /etc/kubernetes/apiserver\\n#Uncomment the following line to disable Load Balancer feature\\nKUBE_API_ARGS=\"$KUBE_API_ARGS\"\\n#Uncomment the following line to enable Load Balancer feature\\n#KUBE_API_ARGS=\"$KUBE_API_ARGS --cloud-config=/etc/sysconfig/kube_openstack_config --cloud-provider=openstack\"\\n_EOC_\\n\\nsed -i \\'\\n    /^KUBELET_ADDRESSES=/ s/=.*/=\"--machines=\\'\"\"\\'\"/\\n    /^KUBE_CONTROLLER_MANAGER_ARGS=/ s/KUBE_CONTROLLER_MANAGER_ARGS.*/#Uncomment the following line to enable Kubernetes Load Balancer feature \\\\n#KUBE_CONTROLLER_MANAGER_ARGS=\"--cloud-config=\\\\/etc\\\\/sysconfig\\\\/kube_openstack_config --cloud-provider=openstack\"/\\n\\' /etc/kubernetes/controller-manager\\n\\nKUBELET_ARGS=\"--register-node=true --register-schedulable=false --config=/etc/kubernetes/manifests --hostname-override=$KUBE_NODE_IP\"\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    KUBELET_ARGS=\"${KUBELET_ARGS} --pod-infra-container-image=${INSECURE_REGISTRY_URL}/google_containers/pause\\\\:0.8.0\"\\n    echo \"INSECURE_REGISTRY=\\'--insecure-registry ${INSECURE_REGISTRY_URL}\\'\" >> /etc/sysconfig/docker\\nfi\\n\\nsed -i \\'\\n    /^KUBELET_ADDRESS=/ s/=.*/=\"--address=0.0.0.0\"/\\n    /^KUBELET_HOSTNAME=/ s/=.*/=\"\"/\\n    /^KUBELET_ARGS=/ s|=.*|=\\'\"$KUBELET_ARGS\"\\'|\\n\\' /etc/kubernetes/kubelet\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nDOCKER_HTTP_PROXY_CONF=/etc/systemd/system/docker.service.d/http_proxy.conf\\n\\nDOCKER_HTTPS_PROXY_CONF=/etc/systemd/system/docker.service.d/https_proxy.conf\\n\\nDOCKER_NO_PROXY_CONF=/etc/systemd/system/docker.service.d/no_proxy.conf\\n\\nDOCKER_RESTART=0\\n\\nBASH_RC=/etc/bashrc\\n\\nmkdir -p /etc/systemd/system/docker.service.d\\n\\nif [ -n \"$HTTP_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_HTTP_PROXY_CONF\\n    [Service]\\n    Environment=HTTP_PROXY=$HTTP_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x http_proxy=$HTTP_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting http_proxy\"\\n    fi\\nfi\\n\\nif [ -n \"$HTTPS_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_HTTPS_PROXY_CONF\\n    [Service]\\n    Environment=HTTPS_PROXY=$HTTPS_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x https_proxy=$HTTPS_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting https_proxy\"\\n    fi\\nfi\\n\\nif [ -n \"$NO_PROXY\" ]; then\\n    cat <<EOF | sed \"s/^ *//\" > $DOCKER_NO_PROXY_CONF\\n    [Service]\\n    Environment=NO_PROXY=$NO_PROXY\\nEOF\\n\\n    DOCKER_RESTART=1\\n\\n    if [ -f \"$BASH_RC\" ]; then\\n        echo \"declare -x no_proxy=$NO_PROXY\" >> $BASH_RC\\n    else\\n        echo \"File $BASH_RC does not exist, not setting no_proxy\"\\n    fi\\nfi\\n\\nif [ \"$DOCKER_RESTART\" -eq 1 ]; then\\n    systemctl daemon-reload\\n    systemctl --no-block restart docker.service\\nfi\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n# make sure we pick up any modified unit files\\nsystemctl daemon-reload\\n\\necho \"starting services\"\\nfor service in etcd docker kube-apiserver kubelet; do\\n    echo \"activating service $service\"\\n    systemctl enable $service\\n    systemctl --no-block start $service\\ndone\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$NETWORK_DRIVER\" != \"flannel\" ]; then\\n    exit 0\\nfi\\n\\n. /etc/sysconfig/flanneld\\n\\nFLANNEL_JSON=/etc/sysconfig/flannel-network.json\\nFLANNELD_CONFIG=/etc/sysconfig/flanneld\\n\\nsed -i \\'\\n    /^FLANNEL_ETCD=/ s/=.*/=\"http:\\\\/\\\\/127.0.0.1:2379\"/\\n\\' /etc/sysconfig/flanneld\\n\\n# Generate a flannel configuration that we will\\n# store into etcd using curl.\\ncat > $FLANNEL_JSON <<EOF\\n{\\n  \"Network\": \"$FLANNEL_NETWORK_CIDR\",\\n  \"Subnetlen\": $FLANNEL_NETWORK_SUBNETLEN,\\n  \"Backend\": {\\n    \"Type\": \"$FLANNEL_BACKEND\"\\n  }\\n}\\nEOF\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$NETWORK_DRIVER\" != \"flannel\" ]; then\\n    exit 0\\nfi\\nCERT_DIR=/srv/kubernetes\\nPROTOCOL=https\\nFLANNEL_OPTIONS=\"-etcd-cafile $CERT_DIR/ca.crt \\\\\\n-etcd-certfile $CERT_DIR/server.crt \\\\\\n-etcd-keyfile $CERT_DIR/server.key\"\\nETCD_CURL_OPTIONS=\"--cacert $CERT_DIR/ca.crt \\\\\\n--cert $CERT_DIR/server.crt --key $CERT_DIR/server.key\"\\nFLANNELD_CONFIG=/etc/sysconfig/flanneld\\n\\nif [ \"$TLS_DISABLED\" = \"True\" ]; then\\n    PROTOCOL=http\\n    FLANNEL_OPTIONS=\"\"\\n    ETCD_CURL_OPTIONS=\"\"\\nfi\\n\\nsed -i \\'/FLANNEL_OPTIONS/\\'d $FLANNELD_CONFIG\\n\\ncat >> $FLANNELD_CONFIG <<EOF\\nFLANNEL_OPTIONS=\"$FLANNEL_OPTIONS\"\\nEOF\\n\\n. $FLANNELD_CONFIG\\n\\nFLANNEL_CONFIG_BIN=/usr/local/bin/flannel-config\\nFLANNEL_CONFIG_SERVICE=/etc/systemd/system/flannel-config.service\\nFLANNEL_JSON=/etc/sysconfig/flannel-network.json\\n\\necho \"creating $FLANNEL_CONFIG_BIN\"\\ncat > $FLANNEL_CONFIG_BIN <<EOF\\n#!/bin/sh\\n\\nif ! [ -f \"$FLANNEL_JSON\" ]; then\\n  echo \"ERROR: missing network configuration file\" >&2\\n  exit 1\\nfi\\n\\nif ! [ \"$FLANNEL_ETCD\" ] && [ \"$FLANNEL_ETCD_KEY\" ]; then\\n  echo \"ERROR: missing required configuration\" >&2\\n  exit 1\\nfi\\n\\necho \"creating flanneld config in etcd\"\\nwhile ! curl -sf -L $ETCD_CURL_OPTIONS \\\\\\n        $FLANNEL_ETCD/v2/keys${FLANNEL_ETCD_KEY}/config \\\\\\n        -X PUT --data-urlencode value@${FLANNEL_JSON}; do\\n    echo \"waiting for etcd\"\\n    sleep 1\\ndone\\nEOF\\n\\ncat > $FLANNEL_CONFIG_SERVICE <<EOF\\n[Unit]\\nAfter=etcd.service\\nRequires=etcd.service\\n\\n[Service]\\nType=oneshot\\nEnvironmentFile=/etc/sysconfig/flanneld\\nExecStart=$FLANNEL_CONFIG_BIN\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n\\nchown root:root $FLANNEL_CONFIG_BIN\\nchmod 0755 $FLANNEL_CONFIG_BIN\\n\\nchown root:root $FLANNEL_CONFIG_SERVICE\\nchmod 0644 $FLANNEL_CONFIG_SERVICE\\n\\nsystemctl enable flannel-config\\nsystemctl start --no-block flannel-config\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ \"$NETWORK_DRIVER\" != \"flannel\" ]; then\\n    exit 0\\nfi\\n\\nFLANNEL_DOCKER_BRIDGE_BIN=/usr/local/bin/flannel-docker-bridge\\nFLANNEL_DOCKER_BRIDGE_SERVICE=/etc/systemd/system/flannel-docker-bridge.service\\nDOCKER_FLANNEL_CONF=/etc/systemd/system/docker.service.d/flannel.conf\\nFLANNEL_DOCKER_BRIDGE_CONF=/etc/systemd/system/flanneld.service.d/flannel-docker-bridge.conf\\n\\nmkdir -p /etc/systemd/system/docker.service.d\\nmkdir -p /etc/systemd/system/flanneld.service.d\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_BIN <<EOF1\\n#!/bin/sh\\n\\nif ! [ \"\\\\$FLANNEL_SUBNET\" ] && [ \"\\\\$FLANNEL_MTU\" ] ; then\\n  echo \"ERROR: missing required environment variables.\" >&2\\n  exit 1\\nfi\\n\\nmkdir -p /run/flannel/\\ncat > /run/flannel/docker <<EOF2\\nDOCKER_NETWORK_OPTIONS=\"--bip=\\\\$FLANNEL_SUBNET --mtu=\\\\$FLANNEL_MTU\"\\nEOF2\\nEOF1\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_BIN\\nchmod 0755 $FLANNEL_DOCKER_BRIDGE_BIN\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_SERVICE <<EOF\\n[Unit]\\nAfter=flanneld.service\\nBefore=docker.service\\nRequires=flanneld.service\\n\\n[Service]\\nType=oneshot\\nEnvironmentFile=/run/flannel/subnet.env\\nExecStart=/usr/local/bin/flannel-docker-bridge\\n\\n[Install]\\nWantedBy=docker.service\\nEOF\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_SERVICE\\nchmod 0644 $FLANNEL_DOCKER_BRIDGE_SERVICE\\n\\ncat >> $DOCKER_FLANNEL_CONF <<EOF\\n[Unit]\\nRequires=flannel-docker-bridge.service\\nAfter=flannel-docker-bridge.service\\n\\n[Service]\\nEnvironmentFile=/run/flannel/docker\\nEOF\\n\\nchown root:root $DOCKER_FLANNEL_CONF\\nchmod 0644 $DOCKER_FLANNEL_CONF\\n\\ncat >> $FLANNEL_DOCKER_BRIDGE_CONF <<EOF\\n[Unit]\\nRequires=flannel-docker-bridge.service\\nBefore=flannel-docker-bridge.service\\n\\n[Install]\\nAlso=flannel-docker-bridge.service\\nEOF\\n\\nchown root:root $FLANNEL_DOCKER_BRIDGE_CONF\\nchmod 0644 $FLANNEL_DOCKER_BRIDGE_CONF\\n\\necho \"activating service flanneld\"\\nsystemctl enable flanneld\\nsystemctl --no-block start flanneld\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n# this service required because docker will start only after cloud init was finished\\n# due service dependencies at Fedora Atomic (docker <- docker-storage-setup <- cloud-final)\\n\\n. /etc/sysconfig/heat-params\\n\\nKUBE_SYSTEM_JSON=/srv/kubernetes/kube-system-namespace.json\\n[ -f ${KUBE_SYSTEM_JSON} ] || {\\n    echo \"Writing File: $KUBE_SYSTEM_JSON\"\\n    mkdir -p $(dirname ${KUBE_SYSTEM_JSON})\\n    cat << EOF > ${KUBE_SYSTEM_JSON}\\n{\\n  \"apiVersion\": \"v1\",\\n  \"kind\": \"Namespace\",\\n  \"metadata\": {\\n    \"name\": \"kube-system\"\\n  }\\n}\\nEOF\\n}\\n\\nKUBE_SYSTEM_BIN=/usr/local/bin/kube-system-namespace\\n[ -f ${KUBE_SYSTEM_BIN} ] || {\\n    echo \"Writing File: $KUBE_SYSTEM_BIN\"\\n    mkdir -p $(dirname ${KUBE_SYSTEM_BIN})\\n    cat << EOF > ${KUBE_SYSTEM_BIN}\\n#!/bin/sh\\nuntil curl -sf \"http://127.0.0.1:8080/healthz\"\\ndo\\n    echo \"Waiting for Kubernetes API...\"\\n    sleep 5\\ndone\\n\\n#check for existence of namespace\\n/usr/bin/kubectl get namespace kube-system\\n\\nif [ \"\\\\$?\" != \"0\" ]; then\\n    /usr/bin/kubectl create -f /srv/kubernetes/kube-system-namespace.json\\nfi\\nEOF\\n}\\n\\nKUBE_SYSTEM_SERVICE=/etc/systemd/system/kube-system-namespace.service\\n[ -f ${KUBE_SYSTEM_SERVICE} ] || {\\n    echo \"Writing File: $KUBE_SYSTEM_SERVICE\"\\n    mkdir -p $(dirname ${KUBE_SYSTEM_SERVICE})\\n    cat << EOF > ${KUBE_SYSTEM_SERVICE}\\n[Unit]\\nAfter=kubelet.service\\nRequires=kubelet.service\\n\\n[Service]\\nType=oneshot\\nEnvironment=HOME=/root\\nEnvironmentFile=-/etc/kubernetes/config\\nExecStart=${KUBE_SYSTEM_BIN}\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n}\\n\\nchown root:root ${KUBE_SYSTEM_BIN}\\nchmod 0755 ${KUBE_SYSTEM_BIN}\\n\\nchown root:root ${KUBE_SYSTEM_SERVICE}\\nchmod 0644 ${KUBE_SYSTEM_SERVICE}\\n\\nsystemctl enable kube-system-namespace\\nsystemctl start --no-block kube-system-namespace\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    HYPERKUBE_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/hyperkube:${KUBE_VERSION}\"\\nelse\\n    HYPERKUBE_IMAGE=\"gcr.io/google_containers/hyperkube:${KUBE_VERSION}\"\\nfi\\n\\n# vars also used by the Kubernetes config files\\nunset KUBE_API_PORT\\nunset KUBE_ALLOW_PRIV\\n\\n# this function generate a list of args (one per line) from a list of possibly nested args\\n# the first parameter is the prefix to be added before each arg\\n# empty args are ignored\\ngenerate_pod_args() {\\n    prefix=$1\\n\\n    for var in \"${@:2}\" ; do\\n        for arg in \"$var\" ; do\\n            echo \"$prefix$arg\"\\n        done\\n    done\\n}\\n\\n\\ninit_templates () {\\n    . /etc/kubernetes/config\\n\\n    . /etc/kubernetes/controller-manager\\n\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-controller-manager.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-controller-manager\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-controller-manager\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - controller-manager\\n    - --leader-elect=true\\n$(generate_pod_args \"    - \" $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBE_MASTER $KUBE_CONTROLLER_MANAGER_ARGS)\\n    livenessProbe:\\n      httpGet:\\n        host: 127.0.0.1\\n        path: /healthz\\n        port: 10252\\n      initialDelaySeconds: 15\\n      timeoutSeconds: 1\\n    volumeMounts:\\n    - mountPath: /etc/ssl/certs\\n      name: ssl-certs-host\\n      readOnly: true\\n    - mountPath: /srv/kubernetes\\n      name: kubernetes-config\\n      readOnly: true\\n    - mountPath: /etc/sysconfig\\n      name: sysconfig\\n      readOnly: true\\n  volumes:\\n  - hostPath:\\n      path: /etc/ssl/certs\\n    name: ssl-certs-host\\n  - hostPath:\\n      path: /srv/kubernetes\\n    name: kubernetes-config\\n  - hostPath:\\n      path: /etc/sysconfig\\n    name: sysconfig\\nEOF\\n    }\\n\\n    . /etc/kubernetes/scheduler\\n\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-scheduler.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-scheduler\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-scheduler\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - scheduler\\n    - --leader-elect=true\\n$(generate_pod_args \"    - \" $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBE_MASTER $KUBE_SCHEDULER_ARGS)\\n    livenessProbe:\\n      httpGet:\\n        host: 127.0.0.1\\n        path: /healthz\\n        port: 10251\\n      initialDelaySeconds: 15\\n      timeoutSeconds: 1\\n    volumeMounts:\\n    - mountPath: /etc/ssl/certs\\n      name: ssl-certs-host\\n      readOnly: true\\n    - mountPath: /srv/kubernetes\\n      name: kubernetes-config\\n      readOnly: true\\n    - mountPath: /etc/sysconfig\\n      name: sysconfig\\n      readOnly: true\\n  volumes:\\n  - hostPath:\\n      path: /etc/ssl/certs\\n    name: ssl-certs-host\\n  - hostPath:\\n      path: /srv/kubernetes\\n    name: kubernetes-config\\n  - hostPath:\\n      path: /etc/sysconfig\\n    name: sysconfig\\nEOF\\n    }\\n}\\n\\ninit_templates\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    HYPERKUBE_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/hyperkube:${KUBE_VERSION}\"\\nelse\\n    HYPERKUBE_IMAGE=\"gcr.io/google_containers/hyperkube:${KUBE_VERSION}\"\\nfi\\n\\ninit_templates () {\\n    local TEMPLATE=/etc/kubernetes/manifests/kube-proxy.yaml\\n    [ -f ${TEMPLATE} ] || {\\n        echo \"TEMPLATE: $TEMPLATE\"\\n        mkdir -p $(dirname ${TEMPLATE})\\n        cat << EOF > ${TEMPLATE}\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: kube-proxy\\n  namespace: kube-system\\nspec:\\n  hostNetwork: true\\n  containers:\\n  - name: kube-proxy\\n    image: ${HYPERKUBE_IMAGE}\\n    command:\\n    - /hyperkube\\n    - proxy\\n    - --master=http://127.0.0.1:8080\\n    - --logtostderr=true\\n    - --v=0\\n    securityContext:\\n      privileged: true\\nEOF\\n    }\\n}\\n\\ninit_templates\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n# this service is required because docker will start only after cloud init was finished\\n# due to the service dependencies in Fedora Atomic (docker <- docker-storage-setup <- cloud-final)\\n\\n\\n. /etc/sysconfig/heat-params\\n\\nif [ -n \"${INSECURE_REGISTRY_URL}\" ]; then\\n    KUBEUI_IMAGE=\"${INSECURE_REGISTRY_URL}/google_containers/kube-ui:v4\"\\nelse\\n    KUBEUI_IMAGE=\"gcr.io/google_containers/kube-ui:v4\"\\nfi\\n\\nKUBE_UI_RC=/srv/kubernetes/manifests/kube-ui-rc.yaml\\n\\n[ -f ${KUBE_UI_RC} ] || {\\n    echo \"Writing File: $KUBE_UI_RC\"\\n    mkdir -p $(dirname ${KUBE_UI_RC})\\n    cat << EOF > ${KUBE_UI_RC}\\napiVersion: v1\\nkind: ReplicationController\\nmetadata:\\n  name: kube-ui-v4\\n  namespace: kube-system\\n  labels:\\n    k8s-app: kube-ui\\n    version: v4\\n    kubernetes.io/cluster-service: \"true\"\\nspec:\\n  replicas: 1\\n  selector:\\n    k8s-app: kube-ui\\n    version: v4\\n  template:\\n    metadata:\\n      labels:\\n        k8s-app: kube-ui\\n        version: v4\\n        kubernetes.io/cluster-service: \"true\"\\n    spec:\\n      containers:\\n      - name: kube-ui\\n        image: ${KUBEUI_IMAGE}\\n        resources:\\n          limits:\\n            cpu: 100m\\n            memory: 50Mi\\n        ports:\\n        - containerPort: 8080\\nEOF\\n}\\n\\nKUBE_UI_SVC=/srv/kubernetes/manifests/kube-ui-svc.yaml\\n[ -f ${KUBE_UI_SVC} ] || {\\n    echo \"Writing File: $KUBE_UI_SVC\"\\n    mkdir -p $(dirname ${KUBE_UI_SVC})\\n    cat << EOF > ${KUBE_UI_SVC}\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: kube-ui\\n  namespace: kube-system\\n  labels:\\n    k8s-app: kube-ui\\n    kubernetes.io/cluster-service: \"true\"\\n    kubernetes.io/name: \"KubeUI\"\\nspec:\\n  selector:\\n    k8s-app: kube-ui\\n  ports:\\n  - port: 80\\n    targetPort: 8080\\nEOF\\n}\\n\\nKUBE_UI_BIN=/usr/local/bin/kube-ui\\n[ -f ${KUBE_UI_BIN} ] || {\\n    echo \"Writing File: $KUBE_UI_BIN\"\\n    mkdir -p $(dirname ${KUBE_UI_BIN})\\n    cat << EOF > ${KUBE_UI_BIN}\\n#!/bin/sh\\nuntil curl -sf \"http://127.0.0.1:8080/healthz\"\\ndo\\n    echo \"Waiting for Kubernetes API...\"\\n    sleep 5\\ndone\\n\\n#echo check for existence of kube-ui-v4 replication controller\\n/usr/bin/kubectl get rc kube-ui-v4 --namespace=kube-system\\n\\nif [ \"\\\\$?\" != \"0\" ]; then\\n    /usr/bin/kubectl create -f /srv/kubernetes/manifests/kube-ui-rc.yaml --namespace=kube-system\\nfi\\n\\n#echo check for existence of kube-ui service\\n/usr/bin/kubectl get service kube-ui --namespace=kube-system\\n\\nif [ \"\\\\$?\" != \"0\" ]; then\\n    /usr/bin/kubectl create -f /srv/kubernetes/manifests/kube-ui-svc.yaml --namespace=kube-system\\nfi\\nEOF\\n}\\n\\nKUBE_UI_SERVICE=/etc/systemd/system/kube-ui.service\\n[ -f ${KUBE_UI_SERVICE} ] || {\\n    echo \"Writing File: $KUBE_UI_SERVICE\"\\n    mkdir -p $(dirname ${KUBE_UI_SERVICE})\\n    cat << EOF > ${KUBE_UI_SERVICE}\\n[Unit]\\nAfter=kube-system-namespace.service\\nRequires=kubelet.service\\nWants=kube-system-namespace.service\\n\\n[Service]\\nType=oneshot\\nEnvironment=HOME=/root\\nEnvironmentFile=-/etc/kubernetes/config\\nExecStart=${KUBE_UI_BIN}\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n}\\n\\nchown root:root ${KUBE_UI_BIN}\\nchmod 0755 ${KUBE_UI_BIN}\\n\\nchown root:root ${KUBE_UI_SERVICE}\\nchmod 0644 ${KUBE_UI_SERVICE}\\n\\nsystemctl enable kube-ui\\nsystemctl start --no-block kube-ui\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /etc/kubernetes/examples/replication-controller.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: ReplicationController\\n      metadata:\\n        name: nginx-controller\\n      spec:\\n        replicas: 2\\n        # selector identifies the set of pods that this\\n        # replication controller is responsible for managing\\n        selector:\\n          name: nginx\\n        # template defines the \\'cookie cutter\\' used for creating\\n        # new pods when necessary\\n        template:\\n          metadata:\\n            labels:\\n              # Important: these labels need to match the selector above\\n              # The api server enforces this constraint.\\n              app: nginx\\n          spec:\\n            containers:\\n              - name: nginx\\n                image: nginx\\n                ports:\\n                  - containerPort: 80\\n\\n  - path: /etc/kubernetes/examples/pod-nginx-with-label.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Pod\\n      metadata:\\n        name: nginx\\n        labels:\\n          app: nginx\\n      spec:\\n        containers:\\n        - name: nginx\\n          image: nginx\\n          ports:\\n          - containerPort: 80\\n\\n  - path: /etc/kubernetes/examples/service.yaml\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      apiVersion: v1\\n      kind: Service\\n      metadata:\\n        name: nginx-service\\n      spec:\\n        ports:\\n        - port: 8000 # the port that this service should serve on\\n          # the container on each pod to connect to, can be a name\\n          # (e.g. \\'www\\') or a number (e.g. 80)\\n          targetPort: 80\\n          protocol: TCP\\n        # just like the selector in the replication controller,\\n        # but this time it identifies the set of pods to load balance\\n        # traffic to.\\n        selector:\\n          app: nginx\\n\\n  - path: /etc/kubernetes/examples/README.md\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      Kubernetes 101 (http://kubernetes.io/v1.0/docs/user-guide/walkthrough/README.html)\\n      ==================================================================================\\n\\n      List all nodes:\\n\\n          kubectl get nodes\\n\\n      Replication Controllers:\\n\\n          kubectl create -f /etc/kubernetes/examples/replication-controller.yaml\\n          kubectl get rc\\n          kubectl delete rc nginx-controller\\n\\n      Pods:\\n\\n          kubectl create -f /etc/kubernetes/examples/pod-nginx-with-label.yaml\\n          kubectl get pods\\n          curl http://$(kubectl get pod nginx -o=template -t={{.status.podIP}})\\n\\n      Services:\\n\\n          kubectl create -f /etc/kubernetes/examples/service.yaml\\n          kubectl get services\\n\\n          export SERVICE_IP=$(kubectl get service nginx-service -o=template -t={{.spec.clusterIP}})\\n          export SERVICE_PORT=$(kubectl get service nginx-service -o=template \\'-t={{(index .spec.ports 0).port}}\\')\\n          curl http://${SERVICE_IP}:${SERVICE_PORT}\\n\\n          kubectl delete service nginx-service\\n\\n      Troubleshooting:\\n\\n          kubectl get events\\n\\n          kubectl describe rc nginx-controller\\n\\n          kubectl describe pod nginx\\n\\n          kubectl describe service nginx-service\\n\\n          kubectl exec nginx env\\n\\n          kubectl exec -ti nginx -- bash\\n\\n--===============0982271011483399371==\\nContent-Type: text/plain; charset=\"us-ascii\"\\nMIME-Version: 1.0\\nContent-Transfer-Encoding: 7bit\\n\\n#!/bin/sh\\n\\n. /etc/sysconfig/heat-params\\n\\nWC_NOTIFY_BIN=/usr/local/bin/wc-notify\\nWC_NOTIFY_SERVICE=/etc/systemd/system/wc-notify.service\\n\\ncat > $WC_NOTIFY_BIN <<EOF\\n#!/bin/bash -v\\nuntil curl -sf \"http://127.0.0.1:8080/healthz\"; do\\n    echo \"Waiting for Kubernetes API...\"\\n    sleep 5\\ndone\\n$WAIT_CURL --data-binary \\'{\"status\": \"SUCCESS\"}\\'\\nEOF\\n\\ncat > $WC_NOTIFY_SERVICE <<EOF\\n[Unit]\\nDescription=Notify Heat\\nAfter=docker.service etcd.service\\nRequires=docker.service etcd.service\\n[Service]\\nType=oneshot\\nExecStart=$WC_NOTIFY_BIN\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n\\nchown root:root $WC_NOTIFY_BIN\\nchmod 0755 $WC_NOTIFY_BIN\\n\\nchown root:root $WC_NOTIFY_SERVICE\\nchmod 0644 $WC_NOTIFY_SERVICE\\n\\nsystemctl enable wc-notify\\nsystemctl start --no-block wc-notify\\n--===============0982271011483399371==--\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c91e6c05-f488-45cb-b4e1-8444db706aa0": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37f1ff890>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b9278732-0c29-4aaf-b972-5eb7b010668c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e883410>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'a194cf94-7b7a-42dd-86a1-306e04d6c859']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fa55ebb2-78ff-4e5b-b64b-312897e3cb0d": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e016b50>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 11, u'data': {u'input_data': {u'tuple:(13, True)': {u'status': u'COMPLETE', u'name': u'private_subnet', u'reference_id': u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257', u'attrs': {}, u'action': u'CREATE', u'id': 13, u'uuid': u'b3794b0d-9e71-46cd-a47a-30272045cd68'}, u'tuple:(15, True)': {u'status': u'COMPLETE', u'name': u'extrouter', u'uuid': u'ad65fef8-5dd8-4951-9633-5935af51d5b4', u'attrs': {}, u'action': u'CREATE', u'id': 15, u'reference_id': u'4c1e30bd-7120-44a4-a38a-6db4aa6d0145'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'40018db4-87e5-4b4e-b4a0-d80da07e36a6'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8423f7ac-31d7-4b4c-bb8b-df78e7dd07af": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952df864d0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 13, u'data': {u'input_data': {u'tuple:(14, True)': {u'status': u'COMPLETE', u'name': u'private_network', u'reference_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1', u'attrs': {}, u'action': u'CREATE', u'id': 14, u'uuid': u'38ca4d5e-832d-4fb4-83bc-87a19d6f12e7'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'40018db4-87e5-4b4e-b4a0-d80da07e36a6'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5d250567-4540-457a-b513-5ec7f00daf4f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b388a35b-6b4b-4e6e-a61d-3dca3d64b68c": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ddafd90>, 'CREATE', 'COMPLETE', 'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "e261242e-c944-445c-9027-c086d91a22b7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, {'port': {'device_owner': 'compute:None', 'binding:host_id': u'vinhnt-LAB', 'device_id': '6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab'}})", 
                "name": "nova.network.neutronv2.api.ClientWrapper.serialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ca1ccc68-8a2c-4215-b4a9-c905ccf5d781": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dc62150>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{'validate_resources': False}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6fdbbdec-a581-43a4-9a47-b6c0a246f4af": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "a76266d4-3cec-4fbf-b0c0-bf77798d9049": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e855ed0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c73da25a-9cb7-4ef6-b12e-d4453267dc71": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, 'GET', '/subnets')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fed74b5e-c667-4797-af43-bd0114327f01": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f2b9d90>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['5299fdb3-2219-46f9-8c52-86fce045e372']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "32befa8c-f298-43da-bb29-35a3e7fc4374": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "1de0447f-8c5a-445f-b364-946797595eac": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "898bf55c-700c-4d6a-aa43-330db1e22012": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b4d27b9e-ec28-4045-a210-3c8e8439d77e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1d64c105-498e-43bc-85b2-c3485f6c15c0": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37ee8d090>, Flavor(created_at=2017-01-19T04:24:14Z,deleted=False,deleted_at=None,disabled=False,ephemeral_gb=0,extra_specs={},flavorid='2',id=7,is_public=True,memory_mb=2048,name='m1.small',projects=<?>,root_gb=20,rxtx_factor=1.0,swap=0,updated_at=None,vcpu_weight=0,vcpus=1), u'63388f50-4450-4c85-8f3c-197af8f6f6cf')", 
                "name": "nova.compute.api.API.create", 
                "kwargs": "{'forced_host': None, 'display_name': u'k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll', 'forced_node': None, 'availability_zone': None, 'key_name': u'testkey', 'user_data': u'', 'display_description': u'k8-46sw5p4gkv-0-mtfuhvzwjvjr-kube-minion-75odhkkitcll', 'max_count': 1, 'requested_networks': NetworkRequestList(objects=[NetworkRequest]), 'metadata': {}, 'admin_password': 'oTH8wdZGi2BD', 'injected_files': [], 'min_count': 1, 'check_server_group_quota': True, 'config_drive': None, 'scheduler_hints': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d2846341-e9d1-4c00-badd-fcff0025ae11": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3dc52539-192b-4a87-ad2e-127ce50f9c67": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "d9d904f6-44a5-4333-a70c-16da75fac65c": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "c5e100c1-e904-4ded-a5a6-1819da3f7349": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c46345f8-6142-467a-b53a-f5afb38552d9": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e32a150>)", 
                "name": "nova.conductor.manager.ConductorManager.object_action", 
                "kwargs": "{u'objmethod': u'save', u'args': [], u'objinst': BlockDeviceMapping(boot_index=None,connection_info='{\"driver_volume_type\": \"iscsi\", \"connector\": {\"platform\": \"x86_64\", \"host\": \"vinhnt-LAB\", \"do_local_attach\": false, \"ip\": \"10.164.180.85\", \"os_type\": \"linux2\", \"multipath\": false, \"initiator\": \"iqn.1993-08.org.debian:01:1cd767b1343d\"}, \"serial\": \"1ad44791-704f-415a-a915-fb4ba2c7c87e\", \"data\": {\"access_mode\": \"rw\", \"target_discovered\": false, \"encrypted\": false, \"qos_specs\": null, \"target_iqn\": \"iqn.2010-10.org.openstack:volume-1ad44791-704f-415a-a915-fb4ba2c7c87e\", \"target_portal\": \"10.164.180.85:3260\", \"volume_id\": \"1ad44791-704f-415a-a915-fb4ba2c7c87e\", \"target_lun\": 1, \"device_path\": \"/dev/disk/by-path/ip-10.164.180.85:3260-iscsi-iqn.2010-10.org.openstack:volume-1ad44791-704f-415a-a915-fb4ba2c7c87e-lun-1\", \"auth_password\": \"***\", \"auth_username\": \"TDW5RwwS3v4Lc7vMtMSQ\", \"auth_method\": \"CHAP\"}}',created_at=2017-01-19T06:45:31Z,delete_on_termination=False,deleted=False,deleted_at=None,destination_type='volume',device_name='/dev/vdb',device_type=None,disk_bus=None,guest_format=None,id=5,image_id=None,instance=<?>,instance_uuid=5299fdb3-2219-46f9-8c52-86fce045e372,no_device=False,snapshot_id=None,source_type='volume',tag=None,updated_at=2017-01-19T06:45:36Z,volume_id='1ad44791-704f-415a-a915-fb4ba2c7c87e',volume_size=3), u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "642498a3-cb00-46fd-9222-3ad48117fcab": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef4f290>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.do_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6c53b9d9-a84b-4917-94fb-f44055511f8f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f341950>, 'ports', '/ports', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c1013ab3-7bba-4b8c-946f-b4e9c7238288": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37efe0c90>, u'{\"port\": {\"status\": \"DOWN\", \"binding:host_id\": \"\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:cf:f0:f1\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:45:13Z\", \"device_owner\": \"\", \"revision_number\": 6, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.3\"}], \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"security_groups\": [\"a194cf94-7b7a-42dd-86a1-306e04d6c859\"], \"device_id\": \"\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_eth0-le73kun3tjst\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"unbound\", \"mac_address\": \"fa:16:3e:cf:f0:f1\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:13Z\"}}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0e208bd2-2a6b-4fde-8bba-b802f983de64": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper.retry_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "307332c7-1827-478f-84c1-6bb570cf5c80": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "fbf666a9-fdde-4631-a86c-653e183b08fd": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dd7c2d0>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 1, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-api_lb-67lbo2q7agec', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 60}, u'environment_files': None, u'parent_resource_name': u'api_lb', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 4, u'owner_id': u'bf103727-c468-4586-a97c-2c940f7e4d29'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b67ab6ac-dfb3-4498-9326-2e145feaed49": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "1552a9c1-2000-449c-93ab-c7433b1ffefc": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dd4ed10>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 60, u'data': {u'input_data': {u'tuple:(62, True)': {u'status': u'COMPLETE', u'name': u'disable_selinux', u'reference_id': u'c5d6b435-52f9-4c50-ad97-67263f96b479', u'attrs': {}, u'action': u'CREATE', u'id': 62, u'uuid': u'd2402d16-4978-417c-81bb-5c83cf1cadec'}, u'tuple:(67, True)': {u'status': u'COMPLETE', u'name': u'minion_wc_notify', u'uuid': u'1fd193b6-6397-48c5-bd21-3509edabc4d6', u'attrs': {}, u'action': u'CREATE', u'id': 67, u'reference_id': u'eba0f150-ff34-4439-aeec-88c9e79c2f22'}, u'tuple:(76, True)': {u'status': u'COMPLETE', u'name': u'kube_examples', u'reference_id': u'a187700b-72c7-4353-90bb-89d41d598da6', u'attrs': {}, u'action': u'CREATE', u'id': 76, u'uuid': u'f2b7db49-7b66-4563-8891-9e2df726dd47'}, u'tuple:(72, True)': {u'status': u'COMPLETE', u'name': u'enable_services', u'uuid': u'c7b6face-a9e5-4f2e-9d6e-5b1c37b48f1e', u'attrs': {}, u'action': u'CREATE', u'id': 72, u'reference_id': u'd6b8449a-4b16-46d7-b107-b03c6522c5dd'}, u'tuple:(78, True)': {u'status': u'COMPLETE', u'name': u'write_kubeconfig', u'uuid': u'ffac2d6b-b064-4f5e-8aa8-62ef15d2e9e6', u'attrs': {}, u'action': u'CREATE', u'id': 78, u'reference_id': u'db76f97f-88b4-4c88-b1ac-34270e2502bd'}, u'tuple:(61, True)': {u'status': u'COMPLETE', u'name': u'make_cert', u'reference_id': u'15700b9b-15df-47ef-8ba1-98fb1ac4b8b1', u'attrs': {}, u'action': u'CREATE', u'id': 61, u'uuid': u'b2be98bb-e963-4e5d-8796-a1a651e40a16'}, u'tuple:(69, True)': {u'status': u'COMPLETE', u'name': u'add_proxy', u'uuid': u'8acb2fd6-2b05-4d48-9c42-e4dbbd8bf5f0', u'attrs': {}, u'action': u'CREATE', u'id': 69, u'reference_id': u'473ebacc-4d42-4fa4-9db7-97bcfbafab1d'}, u'tuple:(77, True)': {u'status': u'COMPLETE', u'name': u'configure_kubernetes_minion', u'uuid': u'b8cb219c-be2b-4a01-967b-28ad6e4fa972', u'attrs': {}, u'action': u'CREATE', u'id': 77, u'reference_id': u'b47f3205-2f15-4567-bad0-16fa3020845b'}, u'tuple:(66, True)': {u'status': u'COMPLETE', u'name': u'enable_docker_registry', u'uuid': u'a5fafaa7-28e4-42a9-8234-729ddaa98b30', u'attrs': {}, u'action': u'CREATE', u'id': 66, u'reference_id': u'405c09c8-3c5e-4995-b15e-5331b7bcf578'}, u'tuple:(73, True)': {u'status': u'COMPLETE', u'name': u'configure_docker_registry', u'uuid': u'cfa447f9-6c4a-4d81-a163-e143b24ebbb6', u'attrs': {}, u'action': u'CREATE', u'id': 73, u'reference_id': u'b1843646-8649-4a33-8ddc-1206b8359316'}, u'tuple:(70, True)': {u'status': u'COMPLETE', u'name': u'enable_kube_proxy', u'reference_id': u'2ec045f4-1df3-4e41-8209-1052d932a670', u'attrs': {}, u'action': u'CREATE', u'id': 70, u'uuid': u'acdde05f-8b78-4f0d-aeff-515aa74d4d4b'}, u'tuple:(68, True)': {u'status': u'COMPLETE', u'name': u'network_service', u'reference_id': u'a181370c-ab54-4c71-97e3-92ac13f9fcb1', u'attrs': {}, u'action': u'CREATE', u'id': 68, u'uuid': u'6ebee0a4-16f4-4c43-8885-aa20d88d3a22'}, u'tuple:(63, True)': {u'status': u'COMPLETE', u'name': u'configure_docker_storage', u'reference_id': u'c61fee68-80d6-4910-ac0f-f67558491de4', u'attrs': {}, u'action': u'CREATE', u'id': 63, u'uuid': u'7eb9748e-1601-473d-8e93-4c0d6b026359'}, u'tuple:(64, True)': {u'status': u'COMPLETE', u'name': u'write_heat_params', u'reference_id': u'd4f92d64-9e29-4dba-ac90-b2d6211900ae', u'attrs': {}, u'action': u'CREATE', u'id': 64, u'uuid': u'ca3464b8-5439-46b6-a3be-fb4c4bce0666'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'160647f9-28fe-4b4d-b61a-1c07dee39746'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "dce468d3-1b56-4a6d-8a1c-979293f8e183": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "03e68b7a-f1aa-4cce-bafd-95f50a100f98": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ef5ad50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "42851f64-b09e-423f-8a92-359524efda6d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e9cd490>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c4a54cf3-7dac-41b4-8566-096d35462845": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f0d2e10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cc3494b7-9a85-4aa7-b6ae-801b668b26c9": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f95317572d0>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-make_cert-2lthuwg6dw3j', u'outputs': [], u'config': u'#!/bin/sh\\n\\n# Copyright 2014 The Kubernetes Authors All rights reserved.\\n#\\n# Licensed under the Apache License, Version 2.0 (the \"License\");\\n# you may not use this file except in compliance with the License.\\n# You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \"AS IS\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n. /etc/sysconfig/heat-params\\n\\nset -o errexit\\nset -o nounset\\nset -o pipefail\\n\\nif [ \"$TLS_DISABLED\" == \"True\" ]; then\\n    exit 0\\nfi\\n\\nif [[ -z \"${KUBE_NODE_PUBLIC_IP}\" ]]; then\\n    KUBE_NODE_PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\\nfi\\nif [[ -z \"${KUBE_NODE_IP}\" ]]; then\\n    KUBE_NODE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\\nfi\\n\\nsans=\"IP:${KUBE_NODE_PUBLIC_IP},IP:${KUBE_NODE_IP}\"\\nif [ \"${KUBE_NODE_PUBLIC_IP}\" != \"${KUBE_API_PUBLIC_ADDRESS}\" ] \\\\\\n        && [ -n \"${KUBE_API_PUBLIC_ADDRESS}\" ]; then\\n    sans=\"${sans},IP:${KUBE_API_PUBLIC_ADDRESS}\"\\nfi\\nif [ \"${KUBE_NODE_IP}\" != \"${KUBE_API_PRIVATE_ADDRESS}\" ] \\\\\\n        && [ -n \"${KUBE_API_PRIVATE_ADDRESS}\" ]; then\\n    sans=\"${sans},IP:${KUBE_API_PRIVATE_ADDRESS}\"\\nfi\\nMASTER_HOSTNAME=${MASTER_HOSTNAME:-}\\nif [[ -n \"${MASTER_HOSTNAME}\" ]]; then\\n    sans=\"${sans},DNS:${MASTER_HOSTNAME}\"\\nfi\\nsans=\"${sans},IP:127.0.0.1\"\\n\\ncert_dir=/srv/kubernetes\\ncert_conf_dir=${cert_dir}/conf\\n\\nmkdir -p \"$cert_dir\"\\nmkdir -p \"$cert_conf_dir\"\\n\\nCA_CERT=$cert_dir/ca.crt\\nSERVER_CERT=$cert_dir/server.crt\\nSERVER_CSR=$cert_dir/server.csr\\nSERVER_KEY=$cert_dir/server.key\\n\\n#Get a token by user credentials and trust\\nauth_json=$(cat << EOF\\n{\\n    \"auth\": {\\n        \"identity\": {\\n            \"methods\": [\\n                \"password\"\\n            ],\\n            \"password\": {\\n                \"user\": {\\n                    \"id\": \"$TRUSTEE_USER_ID\",\\n                    \"password\": \"$TRUSTEE_PASSWORD\"\\n                }\\n            }\\n        },\\n        \"scope\": {\\n            \"OS-TRUST:trust\": {\\n                \"id\": \"$TRUST_ID\"\\n            }\\n        }\\n    }\\n}\\nEOF\\n)\\n\\n#trust is introduced in Keystone v3 version\\nAUTH_URL=${AUTH_URL/v2.0/v3}\\ncontent_type=\\'Content-Type: application/json\\'\\nurl=\"$AUTH_URL/auth/tokens\"\\nUSER_TOKEN=`curl -k -s -i -X POST -H \"$content_type\" -d \"$auth_json\" $url \\\\\\n    | grep X-Subject-Token | awk \\'{print $2}\\' | tr -d \\'[[:space:]]\\'`\\n\\n# Get CA certificate for this cluster\\ncurl -k -X GET \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    $MAGNUM_URL/certificates/$CLUSTER_UUID | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > ${CA_CERT}\\n\\n# Create config for server\\'s csr\\ncat > ${cert_conf_dir}/server.conf <<EOF\\n[req]\\ndistinguished_name = req_distinguished_name\\nreq_extensions     = req_ext\\nprompt = no\\n[req_distinguished_name]\\nCN = kubernetes.invalid\\n[req_ext]\\nsubjectAltName = ${sans}\\nextendedKeyUsage = clientAuth,serverAuth\\nEOF\\n\\n# Generate server\\'s private key and csr\\nopenssl genrsa -out \"${SERVER_KEY}\" 4096\\nchmod 400 \"${SERVER_KEY}\"\\nopenssl req -new -days 1000 \\\\\\n        -key \"${SERVER_KEY}\" \\\\\\n        -out \"${SERVER_CSR}\" \\\\\\n        -reqexts req_ext \\\\\\n        -config \"${cert_conf_dir}/server.conf\"\\n\\n# Send csr to Magnum to have it signed\\ncsr_req=$(python -c \"import json; fp = open(\\'${SERVER_CSR}\\'); print json.dumps({\\'cluster_uuid\\': \\'$CLUSTER_UUID\\', \\'csr\\': fp.read()}); fp.close()\")\\ncurl -k -X POST \\\\\\n    -H \"X-Auth-Token: $USER_TOKEN\" \\\\\\n    -H \"Content-Type: application/json\" \\\\\\n    -d \"$csr_req\" \\\\\\n    $MAGNUM_URL/certificates | python -c \\'import sys, json; print json.load(sys.stdin)[\"pem\"]\\' > ${SERVER_CERT}\\n\\n# Common certs and key are created for both etcd and kubernetes services.\\n# Both etcd and kube user should have permission to access the certs and key.\\ngroupadd kube_etcd\\nusermod -a -G kube_etcd etcd\\nusermod -a -G kube_etcd kube\\nchmod 550 \"${cert_dir}\"\\nchown -R kube:kube_etcd \"${cert_dir}\"\\nchmod 440 $SERVER_KEY\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fe18407f-b959-4178-8b68-e61e70bf3908": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v3/f789928a4f254f96965ff7f3dedd02be/volumes/1ad44791-704f-415a-a915-fb4ba2c7c87e", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "b9c3c5d1-6dfa-4a3f-ae79-d1a18f770875": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>,)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list_ports", 
                "kwargs": "{'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "77af2365-e6fe-4ea8-86bf-b791cfece2a7": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "87cc3cf6-751e-453a-8650-517dbbeb4eab": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ea08a10>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b66b2e41-3260-496e-acf9-418b439b9d40": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "3cc98471-ba4d-4b84-9b2b-391063d1f423": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f01ed90>, u'{\"ports\": [{\"status\": \"ACTIVE\", \"binding:host_id\": \"vinhnt-LAB\", \"description\": \"\", \"allowed_address_pairs\": [{\"ip_address\": \"10.100.0.0/16\", \"mac_address\": \"fa:16:3e:cf:f0:f1\"}], \"extra_dhcp_opts\": [], \"updated_at\": \"2017-01-19T06:45:26Z\", \"device_owner\": \"compute:None\", \"revision_number\": 10, \"port_security_enabled\": true, \"binding:profile\": {}, \"fixed_ips\": [{\"subnet_id\": \"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\", \"ip_address\": \"10.0.0.3\"}], \"id\": \"fcff5957-172c-4937-8341-670d27155ef6\", \"security_groups\": [\"a194cf94-7b7a-42dd-86a1-306e04d6c859\"], \"device_id\": \"5299fdb3-2219-46f9-8c52-86fce045e372\", \"name\": \"k8s-cluster-ui4f4ogezhm7-kube_minions-3d46sw5p4gkv-0-mtfuhvzwjvjr-kube_minion_eth0-le73kun3tjst\", \"admin_state_up\": true, \"network_id\": \"f55f8258-835a-4732-ba02-0b3c78b6c1c1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"binding:vif_details\": {\"port_filter\": true, \"ovs_hybrid_plug\": true}, \"binding:vnic_type\": \"normal\", \"binding:vif_type\": \"ovs\", \"mac_address\": \"fa:16:3e:cf:f0:f1\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:45:13Z\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c97f8742-4b68-4f2d-b423-99cf931027be": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ded6dd0>,)", 
                "name": "heat.engine.stack.converge_stack", 
                "kwargs": "{'action': 'CREATE', 'template': <heat.engine.hot.template.HOTemplate20141016 object at 0x7f952de46b50>}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "f08c3bb7-8809-4327-81b4-875a3068b82d": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.get of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "194c2b60-f2cb-46bb-8383-b1572f350401": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eddb510>, u'{\"security_groups\": [{\"description\": \"\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"created_at\": \"2017-01-19T06:41:54Z\", \"updated_at\": \"2017-01-19T06:41:57Z\", \"security_group_rules\": [{\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 7080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"0b65a626-437f-4257-9678-97bd4f386745\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 7080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"1fbd814c-342c-41d2-8e95-68709869ba2a\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 22, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"2c6a0186-805d-4052-bf8c-a15b661a5b7d\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 22, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"icmp\", \"description\": \"\", \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"480b72c2-0862-4877-ac0e-4176cac4edf2\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"egress\", \"protocol\": null, \"description\": null, \"port_range_max\": null, \"updated_at\": \"2017-01-19T06:41:54Z\", \"revision_number\": 1, \"id\": \"53d989b5-a207-4ead-a6b3-4471d6b1c312\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:54Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": null, \"ethertype\": \"IPv6\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 32767, \"updated_at\": \"2017-01-19T06:41:57Z\", \"revision_number\": 1, \"id\": \"58eefd87-db58-4535-8278-365676b3addc\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:57Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 30000, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 8080, \"updated_at\": \"2017-01-19T06:41:55Z\", \"revision_number\": 1, \"id\": \"5d0bf76b-f7c8-438b-a74b-a8043add8b0e\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:55Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 8080, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 6443, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"79a5226c-0fbe-4766-b6d5-1e0bfdc95dd4\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 6443, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2379, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"9aeee6ab-2eaa-450e-aa2c-4276dc950531\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2379, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}, {\"direction\": \"ingress\", \"protocol\": \"tcp\", \"description\": \"\", \"port_range_max\": 2380, \"updated_at\": \"2017-01-19T06:41:56Z\", \"revision_number\": 1, \"id\": \"e4538c90-cf09-4547-b370-c088a5f23613\", \"remote_group_id\": null, \"remote_ip_prefix\": null, \"created_at\": \"2017-01-19T06:41:56Z\", \"security_group_id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"tenant_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"port_range_min\": 2380, \"ethertype\": \"IPv4\", \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\"}], \"revision_number\": 9, \"project_id\": \"f789928a4f254f96965ff7f3dedd02be\", \"id\": \"6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1\", \"name\": \"k8s-cluster-ui4f4ogezhm7-secgroup_kube_master-3rkl5wmosfeh\"}]}', 200)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.deserialize", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9afc4f4f-b746-47a0-a569-57336197388c": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dca2f10>, u'CREATE', 'COMPLETE', u'Stack CREATE completed successfully')", 
                "name": "heat.engine.stack.state_set", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "b89e7f0c-2dcc-4269-8e1a-73ff5ed91aea": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8911ca9e-57a1-4dee-bed2-a6f24bd23b02": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952e0240d0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 19, u'data': {u'input_data': {u'tuple:(20, True)': {u'status': u'COMPLETE', u'name': u'loadbalancer', u'reference_id': u'66c27563-e593-4ffc-b869-f5b20a9e412f', u'attrs': {u'vip_port_id': None, u'vip_address': None}, u'action': u'CREATE', u'id': 20, u'uuid': u'88c6a0fc-ad11-4631-9ad8-4bd9eebb5f18'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'b3233653-5afe-4df0-89f3-dcddb500d499'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fb20d33c-9647-4794-8e45-f2c6fc9fbc24": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dce6cd0>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 29, u'data': {u'input_data': {u'tuple:(31, True)': {u'status': u'COMPLETE', u'name': u'kube-master', u'reference_id': u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab', u'attrs': {}, u'action': u'CREATE', u'id': 31, u'uuid': u'7f1ddeec-eed2-4533-9c33-49037c97677b'}, u'tuple:(50, True)': {u'status': u'COMPLETE', u'name': u'docker_volume', u'uuid': u'a2bf77f6-f82a-4e5c-aa68-d043695b8811', u'attrs': {}, u'action': u'CREATE', u'id': 50, u'reference_id': u'82c28688-a34b-4bc3-89c6-fdc04285570b'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'01e3c20b-c4de-4533-bf03-541bf1512d05'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "218c32c9-bacb-49fb-aafa-3e9afe25254c": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.get", 
                "kwargs": "{'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ef7c6272-a165-497a-8632-fa5cd3ad566e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f1a5390>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "66783276-6c08-4c0d-942c-730a3f43625b": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>, <bound method ClientWrapper._pagination of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff37e84ce50>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "6f2a5a91-5b7f-4587-a84b-1ef6d761ea02": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37eed1c50>, 'GET', '/ports')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'device_id': ['6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "1b9af06e-353a-4e80-acfc-f99c44ef4e14": {
            "function": {
                "args": "(<heat.engine.worker.WorkerService object at 0x7f952e263b90>, <heat.common.context.RequestContext object at 0x7f952dc97790>)", 
                "name": "heat.engine.worker.WorkerService.check_resource", 
                "kwargs": "{u'resource_id': 12, u'data': {u'input_data': {u'tuple:(13, True)': {u'status': u'COMPLETE', u'name': u'private_subnet', u'reference_id': u'ce90f8fc-4ed2-4a55-9cf6-262fe466e257', u'attrs': {}, u'action': u'CREATE', u'id': 13, u'uuid': u'b3794b0d-9e71-46cd-a47a-30272045cd68'}, u'tuple:(14, True)': {u'status': u'COMPLETE', u'name': u'private_network', u'uuid': u'38ca4d5e-832d-4fb4-83bc-87a19d6f12e7', u'attrs': {}, u'action': u'CREATE', u'id': 14, u'reference_id': u'f55f8258-835a-4732-ba02-0b3c78b6c1c1'}}}, u'is_update': True, u'adopt_stack_data': None, u'current_traversal': u'40018db4-87e5-4b4e-b4a0-d80da07e36a6'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "29da293d-2d60-41b5-9046-b4540568a4fe": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c103df26-4d2b-4b08-bad5-623450667c04": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, '/ports/fcff5957-172c-4937-8341-670d27155ef6')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.put", 
                "kwargs": "{'body': {'port': {'device_owner': 'compute:None', 'binding:host_id': u'vinhnt-LAB', 'device_id': '5299fdb3-2219-46f9-8c52-86fce045e372'}}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "282398f8-140e-4a2a-bbad-e8ad33935eb4": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952dcb0890>)", 
                "name": "heat.engine.service.EngineService.create_stack", 
                "kwargs": "{u'files': None, u'nested_depth': 3, u'stack_name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-api_address_switch-e2doxqp6dko2', u'stack_user_project_id': u'3fbd6a1fd5f04e32bf584dfd4b4f9c5e', u'args': {u'disable_rollback': True, u'adopt_stack_data': None, u'timeout_mins': 3600}, u'environment_files': None, u'parent_resource_name': u'api_address_switch', u'params': None, u'template': None, u'user_creds_id': 1, u'template_id': 8, u'owner_id': u'c3f7a50b-5fc9-4209-8728-2af4300e42de'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "90bc59f3-090e-433f-89bd-42ca01bf233e": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952de021d0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': u'242ae84c-5677-4bf7-a2a2-5c1f8aa2dc1e'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "cb4f3fad-0b40-4c53-b4bb-decbd0f56350": {
            "function": {
                "args": "(<nova.conductor.manager.ConductorManager object at 0x7faa4f215790>, <nova.context.RequestContext object at 0x7faa4e363550>)", 
                "name": "nova.conductor.manager.ConductorManager.object_class_action_versions", 
                "kwargs": "{u'object_versions': {u'VirtualInterfaceList': u'1.0', u'VirtualInterface': u'1.3'}, u'objmethod': u'get_by_instance_uuid', u'args': [u'5299fdb3-2219-46f9-8c52-86fce045e372'], u'objname': u'VirtualInterfaceList', u'kwargs': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "0b99990a-ceea-4997-b06e-64aaa561664e": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>, <bound method ClientWrapper._convert_into_with_meta of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67cc176d90>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "c4e93914-9e5b-4f4e-8175-53ee237972e8": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/v2.1/flavors/2", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "a411cb8d-323e-474a-b8fc-230e8488d399": {
            "function": {
                "args": "(<heat.engine.service.EngineService object at 0x7f952ff17310>, <heat.common.context.RequestContext object at 0x7f952db43650>)", 
                "name": "heat.engine.service.EngineService.create_software_config", 
                "kwargs": "{u'inputs': [], u'group': u'ungrouped', u'name': u'k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv-write_heat_params-2rpaluxcygos', u'outputs': [], u'config': u'#cloud-config\\nmerge_how: dict(recurse_array)+list(append)\\nwrite_files:\\n  - path: /etc/sysconfig/heat-params\\n    owner: \"root:root\"\\n    permissions: \"0644\"\\n    content: |\\n      KUBE_API_PUBLIC_ADDRESS=\"172.24.4.11\"\\n      KUBE_API_PRIVATE_ADDRESS=\"10.0.0.9\"\\n      KUBE_API_PORT=\"8080\"\\n      KUBE_NODE_PUBLIC_IP=\"172.24.4.11\"\\n      KUBE_NODE_IP=\"10.0.0.9\"\\n      KUBE_ALLOW_PRIV=\"true\"\\n      ENABLE_CINDER=\"$ENABLE_CINDER\"\\n      DOCKER_VOLUME=\"82c28688-a34b-4bc3-89c6-fdc04285570b\"\\n      DOCKER_VOLUME_SIZE=\"3\"\\n      DOCKER_STORAGE_DRIVER=\"devicemapper\"\\n      NETWORK_DRIVER=\"flannel\"\\n      FLANNEL_NETWORK_CIDR=\"10.100.0.0/16\"\\n      FLANNEL_NETWORK_SUBNETLEN=\"24\"\\n      FLANNEL_BACKEND=\"udp\"\\n      PORTAL_NETWORK_CIDR=\"10.254.0.0/16\"\\n      ETCD_DISCOVERY_URL=\"https://discovery.etcd.io/202d6f895ed3f6dd8041b7b8d2a5a37f\"\\n      USERNAME=\"admin\"\\n      PASSWORD=\"ChangeMe\"\\n      TENANT_NAME=\"f789928a4f254f96965ff7f3dedd02be\"\\n      CLUSTER_SUBNET=\"ce90f8fc-4ed2-4a55-9cf6-262fe466e257\"\\n      TLS_DISABLED=\"True\"\\n      CLUSTER_UUID=\"9a8ea37c-e9d3-4a7a-a2b1-dc164fb21d67\"\\n      MAGNUM_URL=\"http://10.164.180.85:9511/v1\"\\n      HTTP_PROXY=\"http://10.164.177.168:8080/\"\\n      HTTPS_PROXY=\"http://10.164.177.168:8080/\"\\n      NO_PROXY=\"10.164.180.85,10.0.0.0/8,172.0.0.0/8\"\\n      WAIT_CURL=\"curl -i -X POST -H \\'X-Auth-Token: gAAAAABYgF_Dm_W5wJupTBXAD8rFKYXiBc1NagMibr7j-iElX2tWTD4fvnRcyW0v_qA0AG9Mj83o0N5kF70bzfGyaeP4Z9414BbzRJGe5WFnaE-pPIgA40vMWN4yTws3B7TEV3Mnv0WQfvGcgLo4WcVGJnMb8K-m6bMK7MbHxcpAGcHk5meTeAQ\\' -H \\'Content-Type: application/json\\' -H \\'Accept: application/json\\' http://10.164.180.85:8004/v1/3fbd6a1fd5f04e32bf584dfd4b4f9c5e/stacks/k8s-cluster-ui4f4ogezhm7-kube_masters-4b2zj2u4ukvh-0-7hvswaiqakxv/c3f7a50b-5fc9-4209-8728-2af4300e42de/resources/master_wait_handle/signal\"\\n      KUBE_VERSION=\"v1.2.0\"\\n      TRUSTEE_USER_ID=\"44f763e5727747eeba6f3095d7a86952\"\\n      TRUSTEE_PASSWORD=\"7BXp9ABpBgeK5zatdT\"\\n      TRUST_ID=\"a6f5cdd3ef814c32bd36b133781786bc\"\\n      AUTH_URL=\"http://10.164.180.85:5000/v3\"\\n      INSECURE_REGISTRY_URL=\"\"\\n', u'options': {}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "bb008f82-fb3f-4349-8687-a6c072127fdb": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>, <bound method ClientWrapper.do_request of <nova.network.neutronv2.api.ClientWrapper object at 0x7f67ac0c2550>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "be4e4f2b-cf34-40a2-8703-9d20f0ddfcbd": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dcde250>,)", 
                "name": "heat.engine.stack.validate", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "fdf6547f-8acb-43e3-889a-10e37e4305f1": {
            "function": {
                "args": "(<nova.compute.api.API object at 0x7ff3812e2d10>, <nova.context.RequestContext object at 0x7ff37f039f90>, u'6cfdd2ea-3dfd-48b6-bf5c-3d3dfba636ab')", 
                "name": "nova.compute.api.API.get", 
                "kwargs": "{'expected_attrs': ['flavor', 'info_cache', 'metadata', 'numa_topology', 'pci_devices']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4783ffcb-9d4e-4a19-a092-4cf7089b59b1": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37f34d690>, 'security_groups', '/security-groups', True)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.list", 
                "kwargs": "{'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "4995ba2a-407d-4261-a262-eb7998d7c73f": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952e191d90>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{'exp_trvsl': '4b946fb3-09e7-4731-ba1e-0af7abdd29c7'}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "9d2d260c-10b7-4965-9ce2-f711f5b299ac": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>, <bound method ClientWrapper.deserialize of <nova.network.neutronv2.api.ClientWrapper object at 0x7f678d99e790>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "386df5b5-7914-4042-ba01-11cf04d3d228": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff37ed36b90>, 'GET', '/security-groups')", 
                "name": "nova.network.neutronv2.api.ClientWrapper.retry_request", 
                "kwargs": "{'body': None, 'headers': None, 'params': {'id': [u'6b1df8cb-0d3c-408f-b57e-0c18ecfc36e1']}}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "ef721846-8d6f-48bb-80aa-638a5c157bd7": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952ded6dd0>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "5c4c441e-2085-425b-bcb1-4195f855d883": {
            "function": {
                "args": "(<heat.engine.stack.Stack object at 0x7f952dc62150>,)", 
                "name": "heat.engine.stack.store", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }, 
        "8509e631-fec5-492b-8784-8c7c2950b64c": {
            "host": "vinhnt-LAB", 
            "request": {
                "path": "/identity_admin/v3/auth/tokens", 
                "scheme": "http", 
                "method": "GET", 
                "query": ""
            }
        }, 
        "179e0a0d-cdba-4a38-8afd-fa056019799f": {
            "function": {
                "args": "(<nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>, <bound method ClientWrapper.list of <nova.network.neutronv2.api.ClientWrapper object at 0x7ff3808cfcd0>>)", 
                "name": "nova.network.neutronv2.api.ClientWrapper.proxy", 
                "kwargs": "{}"
            }, 
            "host": "vinhnt-LAB"
        }
    }
}